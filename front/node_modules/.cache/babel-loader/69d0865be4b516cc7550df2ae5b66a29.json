{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/PwChange/PwChangeContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PwChangePresenter from './PwChangePresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, user_modify } from 'Sessions/action.js';\n\nclass PwChange extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = (e, {\n      pw,\n      pw_check\n    }) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n\n      if (pw !== pw_check) {\n        alert('비밀번호와 비밀번호 확인이 같지 않습니다.');\n        return false;\n      }\n\n      dispatch(user_modify(user.user.email, pw, user.user.name, user.user.u_id));\n      this.props.history.push('/root/signin');\n    };\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n\n    if (!user.user.u_id) {\n      alert('잘못된 접근입니다.');\n      this.props.history.push('/root/signin');\n      return false;\n    }\n\n    dispatch(user_get(user.user.u_id));\n  }\n\n  render() {\n    console.log(this.props.history);\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n\n    return /*#__PURE__*/React.createElement(PwChangePresenter, {\n      goBack: this.goBack,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nPwChange.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(PwChange));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/PwChange/PwChangeContainer.js"],"names":["React","withRouter","PwChangePresenter","PropTypes","connect","user_get","user_modify","PwChange","Component","handleSubmit","e","pw","pw_check","preventDefault","user","props","dispatch","alert","email","name","u_id","history","push","goBack","componentDidMount","render","console","log","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOnCC,YAPmC,GAOpB,CAACC,CAAD,EAAI;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL,KAAJ,KAAuB;AAClCF,MAAAA,CAAC,CAACG,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,YAAM;AAACC,QAAAA;AAAD,UAAa,KAAKD,KAAxB;;AACA,UAAGJ,EAAE,KAAKC,QAAV,EAAoB;AAChBK,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACA,eAAO,KAAP;AACH;;AAEDD,MAAAA,QAAQ,CAACV,WAAW,CAACQ,IAAI,CAACA,IAAL,CAAUI,KAAX,EAAkBP,EAAlB,EAAsBG,IAAI,CAACA,IAAL,CAAUK,IAAhC,EAAsCL,IAAI,CAACA,IAAL,CAAUM,IAAhD,CAAZ,CAAR;AACA,WAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH,KAlBkC;;AAAA,SAkCnCC,MAlCmC,GAkC1B,MAAM;AACX,WAAKR,KAAL,CAAWM,OAAX,CAAmBE,MAAnB;AACH,KApCkC;AAAA;;AAoBnCC,EAAAA,iBAAiB,GAAG;AAEhB,UAAM;AAAEV,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKD,KAAxB;;AAEA,QAAG,CAACD,IAAI,CAACA,IAAL,CAAUM,IAAd,EAAoB;AAChBH,MAAAA,KAAK,CAAC,YAAD,CAAL;AACA,WAAKF,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACA,aAAO,KAAP;AACH;;AAEDN,IAAAA,QAAQ,CAACX,QAAQ,CAACS,IAAI,CAACA,IAAL,CAAUM,IAAX,CAAT,CAAR;AACH;;AAMDK,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWM,OAAvB;AACA;AACR;AACA;AACA;;AAEQ,wBACI,oBAAC,iBAAD;AACI,MAAA,MAAM,EAAE,KAAKE,MADjB;AAEI,MAAA,YAAY,EAAE,KAAKd,YAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAlDkC;;AAAjCF,Q,CAEKqB,S,GAAY;AACfd,EAAAA,IAAI,EAAEX,SAAS,CAAC0B,QAAV,CAAmB1B,SAAS,CAAC2B,GAA7B,EAAkCC,UADzB;AAEff,EAAAA,QAAQ,EAAEb,SAAS,CAAC6B,IAAV,CAAeD;AAFV,C;;AAmDvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEpB,IAAAA,IAAI,EAAEoB,KAAK,CAACpB;AAAd,GAAP;AACD;;AAED,eAAeV,OAAO,CAAC6B,eAAD,CAAP,CAAyBhC,UAAU,CAACM,QAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PwChangePresenter from './PwChangePresenter';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, user_modify } from 'Sessions/action.js';\n\nclass PwChange extends React.Component {\n\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    handleSubmit = (e, {pw, pw_check}) => {\n        e.preventDefault(); \n        const { user } = this.props;\n        const {dispatch} = this.props;\n        if(pw !== pw_check) {\n            alert('비밀번호와 비밀번호 확인이 같지 않습니다.');\n            return false;\n        }\n\n        dispatch(user_modify(user.user.email, pw, user.user.name, user.user.u_id));\n        this.props.history.push('/root/signin');\n    }\n\n    componentDidMount() {\n\n        const { user } = this.props;\n        const {dispatch} = this.props;\n\n        if(!user.user.u_id) {\n            alert('잘못된 접근입니다.');\n            this.props.history.push('/root/signin');\n            return false;\n        }\n\n        dispatch(user_get(user.user.u_id));\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    render() {\n        console.log(this.props.history);\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n\n        return (\n            <PwChangePresenter\n                goBack={this.goBack}\n                handleSubmit={this.handleSubmit}\n            />);\n    }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(PwChange));"]},"metadata":{},"sourceType":"module"}