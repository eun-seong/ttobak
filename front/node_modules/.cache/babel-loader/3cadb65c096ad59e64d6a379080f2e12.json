{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignUp/SignUpContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SignUpPresenter from './SignUpPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_register } from 'Sessions/action.js';\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPopup: false,\n      text: ''\n    };\n\n    this.handleSubmit = (e, {\n      name,\n      email,\n      pw,\n      pw_check\n    }) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n\n      if (pw !== pw_check) {\n        this.setState({\n          text: '비밀번호와 비밀번호 확인이 같지 않습니다.',\n          showPopup: true\n        });\n        return false;\n      }\n\n      dispatch(user_register(email, pw, name));\n    };\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.onButtonTouchEnd = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n    const {\n      history\n    } = this.props;\n    console.log(user);\n\n    if (user.user.u_id) {\n      this.setState({\n        text: '회원 가입에 성공했습니다.',\n        showPopup: true\n      });\n      window.localStorage.setItem('uid', user.user.u_id);\n      this.props.history.push('/root/addstd');\n    }\n\n    if (user.response.data && user.response.data.code == 2) {\n      this.setState({\n        text: '이미 존재하는 이메일입니다.',\n        showPopup: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SignUpPresenter, {\n      handleSubmit: this.handleSubmit,\n      goBack: this.goBack,\n      onButtonTouchEnd: this.onButtonTouchEnd,\n      showPopup: this.state.showPopup,\n      text: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nSignUp.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SignUp));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignUp/SignUpContainer.js"],"names":["React","withRouter","SignUpPresenter","PropTypes","connect","user_register","SignUp","Component","state","showPopup","text","handleSubmit","e","name","email","pw","pw_check","preventDefault","user","props","dispatch","setState","goBack","history","onButtonTouchEnd","componentDidUpdate","console","log","u_id","window","localStorage","setItem","push","response","data","code","render","propTypes","objectOf","any","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SignUpPresenter from './SignUpPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_register } from 'Sessions/action.js';\n\nclass SignUp extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    state = {\n        showPopup: false,\n        text: '',\n    }\n\n    handleSubmit = (e, { name, email, pw, pw_check }) => {\n        e.preventDefault();\n        const { user } = this.props;\n        const { dispatch } = this.props;\n        if (pw !== pw_check) {\n            this.setState({\n                text: '비밀번호와 비밀번호 확인이 같지 않습니다.',\n                showPopup: true,\n            })\n            return false;\n        }\n\n        dispatch(user_register(email, pw, name));\n    };\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n\n    componentDidUpdate() {\n        const { user } = this.props;\n        const { history } = this.props;\n        console.log(user);\n\n        if (user.user.u_id) {\n            this.setState({\n                text: '회원 가입에 성공했습니다.',\n                showPopup: true,\n            })\n            window.localStorage.setItem('uid', user.user.u_id);\n            this.props.history.push('/root/addstd');\n        }\n\n        if (user.response.data && user.response.data.code == 2) {\n            this.setState({\n                text: '이미 존재하는 이메일입니다.',\n                showPopup: true,\n            })\n        }\n    }\n\n    onButtonTouchEnd = () => {\n        this.setState({\n            showPopup: false,\n        });\n    }\n\n    render() {\n        return (<\n            SignUpPresenter\n            handleSubmit={this.handleSubmit}\n            goBack={this.goBack}\n            onButtonTouchEnd={this.onButtonTouchEnd}\n            showPopup={this.state.showPopup}\n            text={this.state.text}\n        />);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SignUp));"]},"metadata":{},"sourceType":"module"}