{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nconst inistState = {\n  cureText: null,\n  isRecording: false,\n  TTobaki: TTobak.ttobak1_1,\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0,\n  isPlaying: false,\n  RecordingCircle: false,\n  err: false,\n  errorInfo: false\n};\n\nclass Shadowing extends React.Component {\n  constructor({\n    match,\n    location\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await T1_Api.ask(s_id, this.idx_text);\n        console.log(data);\n\n        if (data.code === 'specified' || data.code === 1) {\n          this.currentIndex = 0;\n          this.cure = data.cure;\n          this.currentCure = data.cure[this.currentIndex];\n          this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n          if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            cureText: this.currentCure.cure_text,\n            totalNum: this.cure.length\n          });\n          setTimeout(() => this.playSound(), 1000);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.stopRecording = e => {\n      console.log(e.detail);\n      clearInterval(this.setRecording);\n      this.recording_end_sound.play();\n      this.setState({\n        isRecording: false,\n        RecordingCircle: false\n      });\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      try {\n        if (this.audioResult.status === 'Success') {\n          const {\n            user\n          } = this.props;\n          const s_id = user.student.s_id;\n          const {\n            data\n          } = await T1_Api.answer(s_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score, this.learning_type === 'review' ? 'T' : 'F', this.currentCure.cure_id, this.idx_text);\n          console.log(data);\n\n          if (data.code === 1) {\n            if (data.retry) {\n              this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n              this.retryAudio.addEventListener('ended', () => {\n                this.setState({\n                  TTobaki: TTobak.ttobak3_1\n                });\n                setTimeout(() => {\n                  this.currentAudio.play();\n                  this.setState({\n                    TTobaki: TTobak.ttobak3_2,\n                    isPlaying: true\n                  });\n                }, 3000);\n              });\n              setTimeout(() => {\n                if (!!this.retryAudio) {\n                  this.retryAudio.play();\n                  this.setState({\n                    TTobaki: TTobak.ttobak3_2\n                  });\n                }\n              }, 1000);\n              return;\n            }\n\n            if (this.currentIndex < this.cure.length - 1) {\n              this.currentIndex++;\n            } else {\n              this.gameDone();\n              return;\n            }\n\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = null;\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n            setTimeout(() => {\n              this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text,\n                currentIndex: this.currentIndex + 1\n              });\n            }, 3000);\n            setTimeout(() => {\n              this.playSound();\n            }, 5500);\n          } else if (data.code === 2) {\n            this.gameDone();\n          } else console.log(data.message);\n        } else {\n          console.log(this.audioResult.message);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2,\n          isPlaying: true\n        });\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            isPlaying: false\n          });\n          setTimeout(() => {\n            this.recording_start_sound.play();\n            this.setState({\n              isRecording: true,\n              RecordingCircle: true\n            });\n            this.setRecording = setInterval(() => {\n              this.setState({\n                RecordingCircle: !this.state.RecordingCircle\n              });\n            }, 500);\n            setTimeout(() => {\n              window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n            }, 200);\n          }, 800);\n        });\n        this.currentAudio.play();\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.replace('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true,\n                TTobaki: TTobak.ttobak1_1\n              });\n              this.newRequest();\n              clearTimeout(timeoutPreloading);\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.onCompleteButtonHandle = () => {\n      if (this.state.isRecording) {\n        window.BRIDGE.requestStopRecording();\n      }\n    };\n\n    this.idx_text = match.params.type;\n    this.learning_type = match.params.learning_type;\n    this.recording_start_sound = new Audio(SoundEffect.recording_start);\n    this.recording_end_sound = new Audio(SoundEffect.recording_end);\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.retryAudio = null;\n    this.picture = {\n      T1,\n      TTobak\n    };\n    this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n    this.numOfLoadedImage = 0;\n    this.state = inistState;\n\n    if (this.learning_type === 'daily') {\n      console.log(location.state.data.read);\n      this.cure = location.state.data.read;\n      this.state = { ...this.state,\n        totalNum: this.cure.length\n      };\n    }\n  }\n\n  async componentDidMount() {\n    new Error();\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (this.learning_type !== 'daily') this.newRequest();else {\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n      this.state = {\n        cureText: this.currentCure.cure_text\n      };\n    }\n    this.imagesPreloading(this.picture);\n    window.addEventListener('android', this.androidResponse);\n    window.addEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n\n    if (!!this.retryAudio) {\n      this.retryAudio.pause();\n      this.retryAudio = null;\n    }\n\n    window.removeEventListener('android', this.androidResponse);\n    window.removeEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentDidCatch(err, errorInfo) {\n    console.error(err);\n    this.setState(() => ({\n      err: true,\n      errorInfo: errorInfo\n    }));\n\n    if (process.env.NODE_ENV === 'production') {\n      Sentry.captureException(err, {\n        extra: errorInfo\n      });\n    }\n  }\n\n  render() {\n    const {\n      cureText,\n      TTobaki,\n      RecordingCircle,\n      isImageLoaded,\n      isPlaying,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (this.state.err) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 20\n        }\n      }, \"error\");\n    }\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(ShadowingPresenter, {\n        Background: T1.t1_background,\n        TextBox: T1.t1_textbox,\n        bt_complete: T1.bt_complete,\n        TTobak: TTobaki,\n        isPlaying: isPlaying,\n        text: cureText,\n        RecordingCircle: RecordingCircle,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nShadowing.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js"],"names":["React","withRouter","PropTypes","connect","Sentry","ShadowingPresenter","T1","TTobak","SoundEffect","T1_Api","soundURL","LoadingComp","inistState","cureText","isRecording","TTobaki","ttobak1_1","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","isPlaying","RecordingCircle","err","errorInfo","Shadowing","Component","constructor","match","location","newRequest","console","log","user","props","s_id","student","data","ask","idx_text","code","cure","currentCure","currentAudio","Audio","cure_path","cure_text","cure_word","setState","length","setTimeout","playSound","e","androidResponse","detail","audioResult","andriodListener","stopRecording","clearInterval","setRecording","recording_end_sound","play","ttobak2_1","status","answer","score","phone_score","speed_score","rhythm_score","learning_type","cure_id","retry","retryAudio","class_voice","voc_path","addEventListener","ttobak3_1","ttobak3_2","gameDone","message","recording_start_sound","setInterval","state","window","BRIDGE","recordAudio","gender","imagesPreloading","picture","timeoutPreloading","history","replace","i","prop","img","Image","src","onload","numOfLoadedImage","totalImages","clearTimeout","onContinueButtonHandle","onRestartButtonHandle","onPauseButtonHandle","onCompleteButtonHandle","requestStopRecording","params","type","recording_start","recording_end","Object","keys","read","componentDidMount","Error","u_id","push","componentWillUnmount","pause","removeEventListener","componentDidCatch","error","process","env","NODE_ENV","captureException","extra","render","t1_background","t1_textbox","bt_complete","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nconst inistState = {\n    cureText: null,\n    isRecording: false,\n    TTobaki: TTobak.ttobak1_1,\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n    isPlaying: false,\n    RecordingCircle: false,\n    err: false,\n    errorInfo: false,\n};\n\nclass Shadowing extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match, location }) {\n        super();\n        this.idx_text = match.params.type;\n        this.learning_type = match.params.learning_type;\n        this.recording_start_sound = new Audio(SoundEffect.recording_start);\n        this.recording_end_sound = new Audio(SoundEffect.recording_end);\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n        this.retryAudio = null;\n        this.picture = { T1, TTobak };\n        this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n        this.numOfLoadedImage = 0;\n        this.state = inistState;\n\n        if (this.learning_type === 'daily') {\n            console.log(location.state.data.read);\n            this.cure = location.state.data.read;\n            this.state = {\n                ...this.state,\n                totalNum: this.cure.length,\n            }\n        }\n    }\n\n    async componentDidMount() {\n        new Error();\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (this.learning_type !== 'daily') this.newRequest();\n        else {\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                this.currentCure.cure_text = this.currentCure.cure_word;\n            this.state = {\n                cureText: this.currentCure.cure_text\n            };\n        }\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener('android', this.androidResponse);\n        window.addEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n        if (!!this.retryAudio) {\n            this.retryAudio.pause();\n            this.retryAudio = null;\n        }\n        window.removeEventListener('android', this.androidResponse);\n        window.removeEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentDidCatch(err, errorInfo) {\n        console.error(err);\n        this.setState(() => ({\n            err: true,\n            errorInfo: errorInfo,\n        }));\n\n        if (process.env.NODE_ENV === 'production') {\n            Sentry.captureException(err, { extra: errorInfo });\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await T1_Api.ask(s_id, this.idx_text);\n            console.log(data);\n\n            if (data.code === 'specified' || data.code === 1) {\n                this.currentIndex = 0;\n                this.cure = data.cure;\n                this.currentCure = data.cure[this.currentIndex];\n                this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n                if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                    this.currentCure.cure_text = this.currentCure.cure_word;\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    cureText: this.currentCure.cure_text,\n                    totalNum: this.cure.length,\n                });\n                setTimeout(() => this.playSound(), 1000);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    stopRecording = (e) => {\n        console.log(e.detail);\n        clearInterval(this.setRecording);\n        this.recording_end_sound.play();\n        this.setState({\n            isRecording: false,\n            RecordingCircle: false,\n        });\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        try {\n            if (this.audioResult.status === 'Success') {\n                const { user } = this.props;\n                const s_id = user.student.s_id;\n                const { data } = await T1_Api.answer(\n                    s_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score,\n                    this.learning_type === 'review' ? 'T' : 'F',\n                    this.currentCure.cure_id,\n                    this.idx_text\n                );\n                console.log(data);\n\n                if (data.code === 1) {\n                    if (data.retry) {\n                        this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n                        this.retryAudio.addEventListener('ended', () => {\n                            this.setState({\n                                TTobaki: TTobak.ttobak3_1,\n                            })\n                            setTimeout(() => {\n                                this.currentAudio.play();\n                                this.setState({\n                                    TTobaki: TTobak.ttobak3_2,\n                                    isPlaying: true,\n                                })\n                            }, 3000);\n                        });\n\n                        setTimeout(() => {\n                            if (!!this.retryAudio) {\n                                this.retryAudio.play();\n                                this.setState({\n                                    TTobaki: TTobak.ttobak3_2,\n                                });\n                            }\n                        }, 1000);\n                        return;\n                    }\n\n                    if (this.currentIndex < this.cure.length - 1) {\n                        this.currentIndex++;\n                    } else {\n                        this.gameDone();\n                        return;\n                    }\n                    this.currentCure = this.cure[this.currentIndex];\n                    this.currentAudio = null;\n                    this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n                    if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                        this.currentCure.cure_text = this.currentCure.cure_word;\n\n                    setTimeout(() => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak1_1,\n                            cureText: this.currentCure.cure_text,\n                            currentIndex: this.currentIndex + 1\n                        });\n                    }, 3000);\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 5500);\n\n                } else if (data.code === 2) {\n                    this.gameDone();\n                }\n                else console.log(data.message);\n\n            } else {\n                console.log(this.audioResult.message);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n                isPlaying: true,\n            });\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    isPlaying: false,\n                });\n                setTimeout(() => {\n                    this.recording_start_sound.play();\n                    this.setState({\n                        isRecording: true,\n                        RecordingCircle: true,\n                    })\n                    this.setRecording = setInterval(() => {\n                        this.setState({\n                            RecordingCircle: !this.state.RecordingCircle,\n                        });\n                    }, 500);\n                    setTimeout(() => {\n                        window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n                    }, 200);\n                }, 800);\n            });\n            this.currentAudio.play();\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.replace('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                            TTobaki: TTobak.ttobak1_1,\n                        })\n                        this.newRequest();\n                        clearTimeout(timeoutPreloading);\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    onCompleteButtonHandle = () => {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n    }\n\n    render() {\n        const { cureText, TTobaki, RecordingCircle, isImageLoaded, isPlaying,\n            showPopup, showDonePopup, showDailyPopup, percent,\n            currentIndex, totalNum } = this.state;\n\n        if (this.state.err) {\n            return <div>error</div>;\n        }\n\n        if (isImageLoaded) {\n            return (<ShadowingPresenter\n                Background={T1.t1_background} TextBox={T1.t1_textbox} bt_complete={T1.bt_complete}\n                TTobak={TTobaki} isPlaying={isPlaying}\n                text={cureText} RecordingCircle={RecordingCircle}\n                onCompleteButtonHandle={this.onCompleteButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));"]},"metadata":{},"sourceType":"module"}