{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SelectStudent/SelectStudentContainer.js\";\nimport React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { Root_Api } from 'api';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSubmit = (e, s_id) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n      dispatch(student_get(s_id, user.user.u_id));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n\n    if (!('u_id' in user.user)) {\n      alert('잘못된 접근입니다.');\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    dispatch(user_get(user.user.u_id));\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n\n    if ('s_id' in user.student) {\n      this.props.history.push('/');\n      return;\n    }\n\n    if (user.response.data && user.response.data.code !== 1) {\n      alert('존재하지 않는 회원입니다.');\n      return;\n    }\n  }\n\n  render() {\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n    const {\n      user\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SelectStudentPresenter, {\n      students: user.user.students || [],\n      handler: this.handleSubmit,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nSelectStudent.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SelectStudent/SelectStudentContainer.js"],"names":["React","SelectStudentPresenter","Root_Api","withRouter","PropTypes","connect","user_get","student_get","SelectStudent","Component","goBack","props","history","handleSubmit","e","s_id","preventDefault","user","dispatch","u_id","componentDidMount","alert","push","componentDidUpdate","student","response","data","code","render","students","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,QAAT,QAAyB,KAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAYxCC,MAZwC,GAY/B,MAAM;AACX,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,MAAnB;AACH,KAduC;;AAAA,SAgBxCG,YAhBwC,GAgBzB,CAACC,CAAD,EAAIC,IAAJ,KAAa;AACxBD,MAAAA,CAAC,CAACE,cAAF;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKN,KAAtB;AACA,YAAM;AAACO,QAAAA;AAAD,UAAa,KAAKP,KAAxB;AAEAO,MAAAA,QAAQ,CAACX,WAAW,CAACQ,IAAD,EAAOE,IAAI,CAACA,IAAL,CAAUE,IAAjB,CAAZ,CAAR;AACH,KAvBuC;AAAA;;AAyBxCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEH,MAAAA;AAAF,QAAW,KAAKN,KAAtB;AACA,UAAM;AAACO,MAAAA;AAAD,QAAa,KAAKP,KAAxB;;AAEA,QAAG,EAAE,UAAUM,IAAI,CAACA,IAAjB,CAAH,EAA2B;AACvBI,MAAAA,KAAK,CAAC,YAAD,CAAL;AACA,WAAKV,KAAL,CAAWC,OAAX,CAAmBU,IAAnB,CAAwB,cAAxB;AACA;AACH;;AAEDJ,IAAAA,QAAQ,CAACZ,QAAQ,CAACW,IAAI,CAACA,IAAL,CAAUE,IAAX,CAAT,CAAR;AACH;;AAEDI,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEN,MAAAA;AAAF,QAAW,KAAKN,KAAtB;;AAEA,QAAG,UAAUM,IAAI,CAACO,OAAlB,EAA2B;AACvB,WAAKb,KAAL,CAAWC,OAAX,CAAmBU,IAAnB,CAAwB,GAAxB;AACA;AACH;;AACD,QAAGL,IAAI,CAACQ,QAAL,CAAcC,IAAd,IAAsBT,IAAI,CAACQ,QAAL,CAAcC,IAAd,CAAmBC,IAAnB,KAA4B,CAArD,EAAwD;AACpDN,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACH;AACJ;;AAEDO,EAAAA,MAAM,GAAG;AACL;AACR;AACA;AACA;AACQ,UAAM;AAAEX,MAAAA;AAAF,QAAW,KAAKN,KAAtB;AACA,wBAAQ,oBACJ,sBADI;AAEJ,MAAA,QAAQ,EAAEM,IAAI,CAACA,IAAL,CAAUY,QAAV,IAAsB,EAF5B;AAGJ,MAAA,OAAO,EAAE,KAAKhB,YAHV;AAIJ,MAAA,MAAM,EAAE,KAAKH,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAMH;;AA/DuC;;AAAtCF,a,CAMKsB,S,GAAY;AACfb,EAAAA,IAAI,EAAEb,SAAS,CAAC2B,QAAV,CAAmB3B,SAAS,CAAC4B,GAA7B,EAAkCC,UADzB;AAEff,EAAAA,QAAQ,EAAEd,SAAS,CAAC8B,IAAV,CAAeD;AAFV,C;;AA4DvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEnB,IAAAA,IAAI,EAAEmB,KAAK,CAACnB;AAAd,GAAP;AACD;;AAED,eAAeZ,OAAO,CAAC8B,eAAD,CAAP,CAAyBhC,UAAU,CAACK,aAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { Root_Api } from 'api';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n    /* \n    모든 로직 추가 \n    api 가져오기\n    error 처리 등 모든 것\n     */\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n\n    handleSubmit = (e, s_id) => {\n        e.preventDefault();\n\n        const { user } = this.props;\n        const {dispatch} = this.props;\n\n        dispatch(student_get(s_id, user.user.u_id));\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        const {dispatch} = this.props;\n\n        if(!('u_id' in user.user)) {\n            alert('잘못된 접근입니다.');\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        dispatch(user_get(user.user.u_id));\n    }\n\n    componentDidUpdate() {\n        const { user } = this.props;\n\n        if('s_id' in user.student) {\n            this.props.history.push('/');\n            return;\n        }\n        if(user.response.data && user.response.data.code !== 1) {\n            alert('존재하지 않는 회원입니다.');\n            return;\n        }\n    }\n\n    render() {\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n        const { user } = this.props;\n        return (<\n            SelectStudentPresenter\n            students={user.user.students || []}\n            handler={this.handleSubmit}\n            goBack={this.goBack}\n        />);\n    }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));"]},"metadata":{},"sourceType":"module"}