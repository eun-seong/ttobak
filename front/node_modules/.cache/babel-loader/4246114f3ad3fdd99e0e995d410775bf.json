{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/StdStatistics/StdStatisticsPresenter.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport HeaderComp from 'Components/HeaderComp';\nimport GraphComp from 'Components/GraphComp';\nconst GraphVariable = {\n  'cure': [{\n    'title': '학습량',\n    'y_axis': '분'\n  }, {\n    'title': '성취도',\n    'y_axis': '점'\n  }, {\n    'title': '발음 정확도',\n    'y_axis': '%'\n  }],\n  'test': [{\n    'title': '청각 처리 속도',\n    'y_axis': '점'\n  }, {\n    'title': '어음 청취력',\n    'y_axis': '점'\n  }, {\n    'title': '선택적 집중력',\n    'y_axis': '점'\n  }]\n};\n\nconst DateFormat = d => {\n  if (d.includes('~')) {\n    d = d.split('~')[0];\n  }\n\n  let date = new Date(d);\n  return date.getMonth() + 1 + '/' + date.getDate();\n};\n/* styled-components */\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n`;\nconst MainContainer = styled.div`\n\t\toverflow: auto;\n\t\tdisplay: flex;\n    flex-direction: column;\n`;\nconst TabContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 0 25vw;\n    margin: 20px 0;\n`;\nconst TabButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.1rem;\n    width: 80px;\n    height: 30px;\n    border-radius: 10px;\n    background-color: ${props => props.selected ? '#b38878' : 'white'};\n`;\n\nconst StdStatistics = ({\n  goBack,\n  student,\n  state,\n  Stat,\n  isReady,\n  isCure,\n  period,\n  isFirstDiag\n}) => {\n  if (!isReady) return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }\n  });\n  let targets = isCure ? [state.amount, state.score, state.voice_score] : [state.score_swp, state.score_swp, state.score_foc];\n  let tickles = targets.map(element => Math.ceil(Math.max(...Object.values(element)) / 20));\n  let graphs = [0, 1, 2];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, enableAlert ? alertComp : null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(HeaderComp, {\n    title: '학습자 통계',\n    goBack: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TabButton, {\n    selected: period === 'day',\n    onClick: () => Stat(true, 'day'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"\\uC77C\\uAC04\"), /*#__PURE__*/React.createElement(TabButton, {\n    selected: period === 'week',\n    onClick: () => Stat(true, 'week'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"\\uC8FC\\uAC04\"), /*#__PURE__*/React.createElement(TabButton, {\n    selected: period === 'month',\n    onClick: () => Stat(true, 'month'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"\\uC6D4\\uAC04\"), /*#__PURE__*/React.createElement(TabButton, {\n    onClick: isFirstDiag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"\\uAC80\\uC0AC\")), [0, 1, 2].map(idx => {\n    return /*#__PURE__*/React.createElement(GraphComp, {\n      key: idx,\n      isCure: isCure,\n      title: isCure ? GraphVariable['cure'][idx]['title'] : GraphVariable['test'][idx]['title'],\n      target: targets[idx],\n      classLevel: state.class[idx],\n      tickle: tickles[idx],\n      axis: isCure ? GraphVariable['cure'][idx]['y_axis'] : GraphVariable['test'][idx]['y_axis'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nexport default StdStatistics;","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/StdStatistics/StdStatisticsPresenter.js"],"names":["React","Link","styled","HeaderComp","GraphComp","GraphVariable","DateFormat","d","includes","split","date","Date","getMonth","getDate","Container","div","MainContainer","TabContainer","TabButton","props","selected","StdStatistics","goBack","student","state","Stat","isReady","isCure","period","isFirstDiag","targets","amount","score","voice_score","score_swp","score_foc","tickles","map","element","Math","ceil","max","Object","values","graphs","enableAlert","alertComp","idx","class"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport HeaderComp from 'Components/HeaderComp';\nimport GraphComp from 'Components/GraphComp';\n\nconst GraphVariable = {\n\t'cure': [\n\t\t{ 'title': '학습량', 'y_axis': '분' },\n\t\t{ 'title': '성취도', 'y_axis': '점' },\n\t\t{ 'title': '발음 정확도', 'y_axis': '%' }\n\t],\n\t'test': [\n\t\t{ 'title': '청각 처리 속도', 'y_axis': '점' },\n\t\t{ 'title': '어음 청취력', 'y_axis': '점' },\n\t\t{ 'title': '선택적 집중력', 'y_axis': '점' }\n\t]\n};\n\nconst DateFormat = (d) => {\n\tif (d.includes('~')) {\n\t\td = d.split('~')[0];\n\t}\n\n\tlet date = new Date(d);\n\treturn (date.getMonth() + 1) + '/' + date.getDate();\n};\n\n/* styled-components */\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n`;\n\nconst MainContainer = styled.div`\n\t\toverflow: auto;\n\t\tdisplay: flex;\n    flex-direction: column;\n`\n\nconst TabContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 0 25vw;\n    margin: 20px 0;\n`;\n\nconst TabButton = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.1rem;\n    width: 80px;\n    height: 30px;\n    border-radius: 10px;\n    background-color: ${props => props.selected ? '#b38878' : 'white'};\n`;\n\n\n\nconst StdStatistics = ({ goBack, student, state, Stat, isReady, isCure, period, isFirstDiag }) => {\n\tif (!isReady) return (<Container></Container>);\n\tlet targets = (isCure ? [state.amount, state.score, state.voice_score] : [state.score_swp, state.score_swp, state.score_foc]);\n\tlet tickles = targets.map(element => Math.ceil(Math.max(...Object.values(element)) / 20));\n\n\tlet graphs = [0, 1, 2];\n\n\treturn (\n\t\t<>\n\t\t\t{enableAlert ?\n\t\t\t\talertComp :\n\t\t\t\tnull\n\t\t\t}\n\t\t\t<Container>\n\t\t\t\t<HeaderComp title={'학습자 통계'} goBack={goBack} />\n\t\t\t\t<MainContainer>\n\t\t\t\t\t<TabContainer>\n\t\t\t\t\t\t<TabButton selected={period === 'day'} onClick={() => Stat(true, 'day')}>일간</TabButton>\n\t\t\t\t\t\t<TabButton selected={period === 'week'} onClick={() => Stat(true, 'week')}>주간</TabButton>\n\t\t\t\t\t\t<TabButton selected={period === 'month'} onClick={() => Stat(true, 'month')}>월간</TabButton>\n\t\t\t\t\t\t<TabButton onClick={isFirstDiag}>검사</TabButton>\n\t\t\t\t\t</TabContainer>\n\t\t\t\t\t{[0, 1, 2].map((idx) => {\n\t\t\t\t\t\treturn (<GraphComp\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tisCure={isCure}\n\t\t\t\t\t\t\ttitle={(isCure ? GraphVariable['cure'][idx]['title'] : GraphVariable['test'][idx]['title'])}\n\t\t\t\t\t\t\ttarget={targets[idx]}\n\t\t\t\t\t\t\tclassLevel={state.class[idx]}\n\t\t\t\t\t\t\ttickle={tickles[idx]}\n\t\t\t\t\t\t\taxis={(isCure ? GraphVariable['cure'][idx]['y_axis'] : GraphVariable['test'][idx]['y_axis'])}\n\t\t\t\t\t\t/>);\n\t\t\t\t\t})}\n\t\t\t\t</MainContainer>\n\t\t\t</Container >\n\t\t</>\n\t);\n}\n\nexport default StdStatistics;"]},"metadata":{},"sourceType":"module"}