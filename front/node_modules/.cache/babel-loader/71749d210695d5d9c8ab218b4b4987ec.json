{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/User/StdChange/StdChangeContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport StdChangePresenter from './StdChangePresenter';\nimport Alert from 'Components/Alert';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_change } from 'Sessions/action.js';\n\nclass StdChange extends React.Component {\n  constructor() {\n    super();\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSubmit = (e, s_id) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n      dispatch(student_change(s_id));\n      this.props.history.push('/');\n      return true;\n    };\n\n    this.enableAlert = false;\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.makeAlert('잘못된 접근입니다.', false, () => {\n        this.props.history.push('/root/signin');\n      });\n      return;\n    }\n\n    dispatch(user_get(user.user.u_id));\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  render() {\n    console.log(this.props.history);\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n\n    const {\n      user\n    } = this.props;\n    const alertComp = this.enableAlert ? /*#__PURE__*/React.createElement(Alert, {\n      text: this.alertText,\n      isConfirm: this.isConfirm,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 47\n      }\n    }) : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, alertComp, /*#__PURE__*/React.createElement(StdChangePresenter, {\n      students: user.user.students || [],\n      handleSubmit: this.handleSubmit,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nStdChange.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(StdChange));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/User/StdChange/StdChangeContainer.js"],"names":["React","withRouter","StdChangePresenter","Alert","PropTypes","connect","user_get","student_change","StdChange","Component","constructor","goBack","props","history","handleSubmit","e","s_id","preventDefault","user","dispatch","push","enableAlert","makeAlert","text","isConfirm","onSubmit","onCancel","alertText","forceUpdate","componentDidMount","u_id","render","console","log","alertComp","students","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport StdChangePresenter from './StdChangePresenter';\nimport Alert from 'Components/Alert';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_change } from 'Sessions/action.js';\n\nclass StdChange extends React.Component {\n\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.enableAlert = false;\n    }\n\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    componentDidMount() {\n        const {user} = this.props;\n        const {dispatch} = this.props;\n\n        if(!user.user.u_id) {\n            this.makeAlert('잘못된 접근입니다.', false, (() => {\n                this.props.history.push('/root/signin');\n            }));\n            return;\n        }\n\n        dispatch(user_get(user.user.u_id));\n    }\n\n\n    handleSubmit = (e, s_id) => {\n        e.preventDefault(); \n\n        const {user} = this.props;\n        const {dispatch} = this.props;\n\n        dispatch(student_change(s_id));\n        this.props.history.push('/');\n\n        return true;\n    }\n\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    render() {\n        console.log(this.props.history);\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n        \n        const { user } = this.props;\n        const alertComp = this.enableAlert ? (<Alert \n            text={this.alertText}\n            isConfirm={this.isConfirm}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n        />) : '';\n        \n       return (\n            <div>\n                {alertComp}\n                <StdChangePresenter\n                    students={user.user.students || []}\n                    handleSubmit={this.handleSubmit}\n                    goBack={this.goBack}\n                />\n            </div>   \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(StdChange));"]},"metadata":{},"sourceType":"module"}