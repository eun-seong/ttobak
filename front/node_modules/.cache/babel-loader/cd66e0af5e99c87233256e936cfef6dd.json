{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL, T_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nconst inistState = {\n  cureText: null,\n  isRecording: false,\n  TTobaki: TTobak.ttobak1_1,\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0,\n  isPlaying: false,\n  RecordingCircle: false,\n  err: false,\n  errorInfo: false\n};\n\nclass Shadowing extends React.Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T1_Api.ask(s_id, idx_text);\n      console.log('new', data);\n\n      if (data.code === 'specified' || data.code === 1) {\n        this.currentIndex = 0;\n        this.cure = data.cure;\n        this.currentCure = data.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        if (idx_txt === 'vowelword' || idx_txt === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n        this.setState({\n          TTobaki: TTobak.ttobak1_1,\n          cureText: this.currentCure.cure_text,\n          totalNum: this.cure.length,\n          currentIndex: this.currentIndex + 1\n        });\n      }\n\n      if (data.code === 'tutorial') {\n        this.tutorial(data);\n        return;\n      } else this.intro(data.read_voice || data.tut_voice);\n    };\n\n    this.daily = () => {\n      console.log(this.props.location.state.data);\n      this.cure = this.props.location.state.data.read;\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentCure.is_first = 'T';\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      if (idx_txt === 'vowelword' || idx_txt === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n      this.setState({\n        totalNum: this.cure.length,\n        cureText: this.currentCure.cure_text,\n        currentIndex: this.currentIndex + 1\n      });\n\n      if (this.props.location.state.data.code === 'tutorial') {\n        this.tutorial(this.props.location.state.data);\n        return;\n      } else this.intro(this.props.location.state.data.read_voice || this.props.location.state.data.tut_voice);\n    };\n\n    this.intro = data => {\n      this.reac_voice = null;\n      this.read_voice = [new Audio(soundURL + data[0].voc_path)];\n      this.read_voice[0].addEventListener('ended', () => {\n        setTimeout(() => this.playSound(), 1000);\n      });\n      if (!!this.read_voice[0]) this.read_voice[0].play();\n    };\n\n    this.tutorial = data => {\n      this.setState({\n        cureText: data.sample_ques.cure_word\n      });\n      this.currentAudio = new Audio(soundURL + data.sample_ques.cure_path);\n      this.voice = [new Audio(soundURL + data.tut_voice[0].voc_path), new Audio(soundURL + data.tut_voice[1].voc_path), new Audio(soundURL + data.tut_voice[2].voc_path), new Audio(soundURL + data.tut_voice[3].voc_path), new Audio(soundURL + data.tut_voice[4].voc_path), new Audio(soundURL + data.tut_voice[5].voc_path)];\n      this.voice[0].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.currentAudio.play();\n        }, 1000);\n      });\n      this.currentAudio.addEventListener('ended', () => {\n        setTimeout(() => {\n          this.voice[1].play();\n        }, 1000);\n      });\n      this.voice[1].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.recording_start_sound.play();\n          this.setState({\n            isRecording: true,\n            RecordingCircle: true\n          });\n          this.setRecording = setInterval(() => {\n            this.setState({\n              RecordingCircle: !this.state.RecordingCircle\n            });\n          }, 500);\n          setTimeout(() => {\n            window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n          }, 200);\n        }, 800);\n      });\n      this.voice[2].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.recording_start_sound.play();\n          this.setState({\n            isRecording: true,\n            RecordingCircle: true\n          });\n          this.setRecording = setInterval(() => {\n            this.setState({\n              RecordingCircle: !this.state.RecordingCircle\n            });\n          }, 500);\n          setTimeout(() => {\n            window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n          }, 200);\n        }, 800);\n      });\n      this.voice[5].addEventListener('ended', () => {\n        setTimeout(() => {\n          if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n        }, 1000);\n      });\n      setTimeout(() => {\n        this.voice[0].play();\n      }, 1000);\n    };\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.stopRecording = e => {\n      console.log(e.detail);\n      clearInterval(this.setRecording);\n      this.recording_end_sound.play();\n      this.setState({\n        isRecording: false,\n        RecordingCircle: false\n      });\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      if (this.audioResult.status === 'Success') {\n        if (this.gameState === 'tutorial') {\n          if (this.audioResult.score < 85) {\n            this.voice[2].play();\n            return;\n          } else {\n            this.voice[5].play();\n          }\n        }\n\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const {\n          data\n        } = await T1_Api.answer(s_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score, this.learning_type === 'review' ? 'T' : 'F', this.currentCure.cure_id, idx_txt, this.learning_type === 'daily' ? 'T' : 'F', this.currentCure.is_first);\n        console.log(data);\n\n        if (data.code === 1) {\n          if (data.retry) {\n            this.currentCure.is_first = 'F';\n            this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n            this.retryAudio.addEventListener('ended', () => {\n              this.setState({\n                TTobaki: TTobak.ttobak3_1\n              });\n              setTimeout(() => {\n                if (!!this.currentAudio) {\n                  this.currentAudio.play();\n                  this.setState({\n                    TTobaki: TTobak.ttobak3_2,\n                    isPlaying: true\n                  });\n                }\n              }, 3000);\n            });\n            setTimeout(() => {\n              if (!!this.retryAudio) {\n                this.retryAudio.play();\n                this.setState({\n                  TTobaki: TTobak.ttobak3_2\n                });\n              }\n            }, 1000);\n            return;\n          } else {\n            this.good_script = new Audio(soundURL + data.class_voice.voc_path);\n            this.good_script.addEventListener('ended', () => this.nextStep());\n            setTimeout(() => {\n              if (!!this.good_script) this.good_script.play();\n              this.setState({\n                TTobaki: TTobak.ttobak2_2\n              });\n            }, 1000);\n          }\n        } else if (data.code === 2) {\n          this.gameDone();\n        } else console.log(data.message);\n      } else {\n        console.log(this.audioResult.message);\n      }\n    };\n\n    this.nextStep = () => {\n      if (this.currentIndex < this.cure.length - 1) {\n        this.currentIndex++;\n      } else {\n        this.gameDone();\n        return;\n      }\n\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentCure.is_first = 'T';\n      if (!!this.currentAudio) this.currentAudio.remove();\n      this.currentAudio = null;\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      if (idx_txt === 'vowelword' || idx_txt === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n      setTimeout(() => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1,\n          cureText: this.currentCure.cure_text,\n          currentIndex: this.currentIndex + 1\n        });\n      }, 2000);\n      setTimeout(() => {\n        this.playSound();\n      }, 4000);\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2,\n          isPlaying: true\n        });\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            isPlaying: false\n          });\n          setTimeout(() => {\n            this.recording_start_sound.play();\n            this.setState({\n              isRecording: true,\n              RecordingCircle: true\n            });\n            this.setRecording = setInterval(() => {\n              this.setState({\n                RecordingCircle: !this.state.RecordingCircle\n              });\n            }, 500);\n            setTimeout(() => {\n              window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n            }, 200);\n          }, 800);\n        });\n        this.currentAudio.play();\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.push('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true,\n                TTobaki: TTobak.ttobak1_1\n              });\n              clearTimeout(timeoutPreloading);\n              if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n\n      if (this.continuePlay) {\n        this.currentAudio.play();\n      }\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n\n      if (!!this.currentAudio && !this.currentAudio.paused) {\n        this.currentAudio.pause();\n        this.continuePlay = true;\n      }\n    };\n\n    this.onCompleteButtonHandle = () => {\n      if (this.state.isRecording) {\n        window.BRIDGE.requestStopRecording();\n      }\n    };\n\n    idx_txt = match.params.type;\n    this.learning_type = match.params.learning_type;\n    this.recording_start_sound = new Audio(SoundEffect.recording_start);\n    this.recording_end_sound = new Audio(SoundEffect.recording_end);\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.retryAudio = null;\n    this.picture = {\n      T1,\n      TTobak\n    };\n    this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n    this.numOfLoadedImage = 0;\n    this.continuePlay = false;\n    this.state = inistState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n    window.addEventListener('android', this.androidResponse);\n    window.addEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentWillUnmount() {\n    if (this.state.isRecording) {\n      window.BRIDGE.requestStopRecording();\n    }\n\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio.remove();\n      this.currentAudio = null;\n    }\n\n    if (!!this.retryAudio) {\n      this.retryAudio.pause();\n      this.retryAudio.remove();\n      this.retryAudio = null;\n    }\n\n    if (!!this.voice) {\n      for (let i = 0; i < this.voice.length; i++) {\n        if (!!this.voice[i]) {\n          this.voice[i].pause();\n          this.voice[i].remove();\n          this.voice[i] = null;\n        }\n      }\n    }\n\n    window.removeEventListener('android', this.androidResponse);\n    window.removeEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentDidCatch(err, errorInfo) {\n    console.error(err);\n    this.setState(() => ({\n      err: true,\n      errorInfo: errorInfo\n    }));\n\n    if (process.env.NODE_ENV === 'production') {\n      Sentry.captureException(err, {\n        extra: errorInfo\n      });\n    }\n  }\n\n  render() {\n    const {\n      cureText,\n      TTobaki,\n      RecordingCircle,\n      isImageLoaded,\n      isPlaying,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (this.state.err) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 20\n        }\n      }, \"error\");\n    }\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(ShadowingPresenter, {\n        Background: T1.t1_background,\n        TextBox: T1.t1_textbox,\n        bt_complete: T1.bt_complete,\n        TTobak: TTobaki,\n        isPlaying: isPlaying,\n        text: cureText,\n        RecordingCircle: RecordingCircle,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nShadowing.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js"],"names":["React","withRouter","PropTypes","connect","Sentry","ShadowingPresenter","T1","TTobak","SoundEffect","T1_Api","soundURL","T_tutorial","LoadingComp","inistState","cureText","isRecording","TTobaki","ttobak1_1","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","isPlaying","RecordingCircle","err","errorInfo","Shadowing","Component","constructor","match","newRequest","console","log","user","props","s_id","student","data","ask","idx_text","code","cure","currentCure","is_first","currentAudio","Audio","cure_path","idx_txt","cure_text","cure_word","setState","length","tutorial","intro","read_voice","tut_voice","daily","location","state","read","reac_voice","voc_path","addEventListener","setTimeout","playSound","play","sample_ques","voice","recording_start_sound","setRecording","setInterval","window","BRIDGE","recordAudio","gender","learning_type","androidResponse","e","detail","audioResult","andriodListener","stopRecording","clearInterval","recording_end_sound","ttobak2_1","status","gameState","score","answer","phone_score","speed_score","rhythm_score","cure_id","retry","retryAudio","class_voice","ttobak3_1","ttobak3_2","good_script","nextStep","ttobak2_2","gameDone","message","remove","imagesPreloading","picture","timeoutPreloading","history","push","i","prop","img","Image","src","onload","numOfLoadedImage","totalImages","clearTimeout","onContinueButtonHandle","continuePlay","onRestartButtonHandle","onPauseButtonHandle","paused","pause","onCompleteButtonHandle","requestStopRecording","params","type","recording_start","recording_end","Object","keys","componentDidMount","u_id","componentWillUnmount","removeEventListener","componentDidCatch","error","process","env","NODE_ENV","captureException","extra","render","t1_background","t1_textbox","bt_complete","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,EAAT,EAAaC,MAAb,EAAqBC,WAArB,QAAwC,QAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,QAA6C,KAA7C;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,QAAQ,EAAE,IADK;AAEfC,EAAAA,WAAW,EAAE,KAFE;AAGfC,EAAAA,OAAO,EAAET,MAAM,CAACU,SAHD;AAIfC,EAAAA,aAAa,EAAE,KAJA;AAKfC,EAAAA,SAAS,EAAE,KALI;AAMfC,EAAAA,aAAa,EAAE,KANA;AAOfC,EAAAA,cAAc,EAAE,KAPD;AAQfC,EAAAA,OAAO,EAAE,CARM;AASfC,EAAAA,YAAY,EAAE,CATC;AAUfC,EAAAA,QAAQ,EAAE,CAVK;AAWfC,EAAAA,SAAS,EAAE,KAXI;AAYfC,EAAAA,eAAe,EAAE,KAZF;AAafC,EAAAA,GAAG,EAAE,KAbU;AAcfC,EAAAA,SAAS,EAAE;AAdI,CAAnB;;AAiBA,MAAMC,SAAN,SAAwB7B,KAAK,CAAC8B,SAA9B,CAAwC;AAMpCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAY;AACnB;;AADmB,SAyEvBC,UAzEuB,GAyEV,YAAY;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,YAAMC,IAAI,GAAGF,IAAI,CAACG,OAAL,CAAaD,IAA1B;AAEA,YAAM;AAAEE,QAAAA;AAAF,UAAW,MAAM/B,MAAM,CAACgC,GAAP,CAAWH,IAAX,EAAiBI,QAAjB,CAAvB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,IAAnB;;AAEA,UAAIA,IAAI,CAACG,IAAL,KAAc,WAAd,IAA6BH,IAAI,CAACG,IAAL,KAAc,CAA/C,EAAkD;AAC9C,aAAKpB,YAAL,GAAoB,CAApB;AACA,aAAKqB,IAAL,GAAYJ,IAAI,CAACI,IAAjB;AACA,aAAKC,WAAL,GAAmBL,IAAI,CAACI,IAAL,CAAU,KAAKrB,YAAf,CAAnB;AACA,aAAKsB,WAAL,CAAiBC,QAAjB,GAA4B,GAA5B;AACA,aAAKC,YAAL,GAAoB,IAAIC,KAAJ,CAAUtC,QAAQ,GAAG,KAAKmC,WAAL,CAAiBI,SAAtC,CAApB;AACA,YAAIC,OAAO,KAAK,WAAZ,IAA2BA,OAAO,KAAK,WAA3C,EACI,KAAKL,WAAL,CAAiBM,SAAjB,GAA6B,KAAKN,WAAL,CAAiBO,SAA9C;AACJ,aAAKC,QAAL,CAAc;AACVrC,UAAAA,OAAO,EAAET,MAAM,CAACU,SADN;AAEVH,UAAAA,QAAQ,EAAE,KAAK+B,WAAL,CAAiBM,SAFjB;AAGV3B,UAAAA,QAAQ,EAAE,KAAKoB,IAAL,CAAUU,MAHV;AAIV/B,UAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAJxB,SAAd;AAMH;;AACD,UAAIiB,IAAI,CAACG,IAAL,KAAc,UAAlB,EAA8B;AAC1B,aAAKY,QAAL,CAAcf,IAAd;AACA;AACH,OAHD,MAIK,KAAKgB,KAAL,CAAWhB,IAAI,CAACiB,UAAL,IAAmBjB,IAAI,CAACkB,SAAnC;AACR,KArGsB;;AAAA,SAuGvBC,KAvGuB,GAuGf,MAAM;AACVzB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWuB,QAAX,CAAoBC,KAApB,CAA0BrB,IAAtC;AAEA,WAAKI,IAAL,GAAY,KAAKP,KAAL,CAAWuB,QAAX,CAAoBC,KAApB,CAA0BrB,IAA1B,CAA+BsB,IAA3C;AACA,WAAKjB,WAAL,GAAmB,KAAKD,IAAL,CAAU,KAAKrB,YAAf,CAAnB;AACA,WAAKsB,WAAL,CAAiBC,QAAjB,GAA4B,GAA5B;AACA,WAAKC,YAAL,GAAoB,IAAIC,KAAJ,CAAUtC,QAAQ,GAAG,KAAKmC,WAAL,CAAiBI,SAAtC,CAApB;AACA,UAAIC,OAAO,KAAK,WAAZ,IAA2BA,OAAO,KAAK,WAA3C,EACI,KAAKL,WAAL,CAAiBM,SAAjB,GAA6B,KAAKN,WAAL,CAAiBO,SAA9C;AAEJ,WAAKC,QAAL,CAAc;AACV7B,QAAAA,QAAQ,EAAE,KAAKoB,IAAL,CAAUU,MADV;AAEVxC,QAAAA,QAAQ,EAAE,KAAK+B,WAAL,CAAiBM,SAFjB;AAGV5B,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAHxB,OAAd;;AAMA,UAAI,KAAKc,KAAL,CAAWuB,QAAX,CAAoBC,KAApB,CAA0BrB,IAA1B,CAA+BG,IAA/B,KAAwC,UAA5C,EAAwD;AACpD,aAAKY,QAAL,CAAc,KAAKlB,KAAL,CAAWuB,QAAX,CAAoBC,KAApB,CAA0BrB,IAAxC;AACA;AACH,OAHD,MAIK,KAAKgB,KAAL,CAAW,KAAKnB,KAAL,CAAWuB,QAAX,CAAoBC,KAApB,CAA0BrB,IAA1B,CAA+BiB,UAA/B,IAA6C,KAAKpB,KAAL,CAAWuB,QAAX,CAAoBC,KAApB,CAA0BrB,IAA1B,CAA+BkB,SAAvF;AACR,KA5HsB;;AAAA,SA8HvBF,KA9HuB,GA8HdhB,IAAD,IAAU;AACd,WAAKuB,UAAL,GAAkB,IAAlB;AACA,WAAKN,UAAL,GAAkB,CACd,IAAIT,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAAC,CAAD,CAAJ,CAAQwB,QAA7B,CADc,CAAlB;AAIA,WAAKP,UAAL,CAAgB,CAAhB,EAAmBQ,gBAAnB,CAAoC,OAApC,EAA6C,MAAM;AAC/CC,QAAAA,UAAU,CAAC,MAAM,KAAKC,SAAL,EAAP,EAAyB,IAAzB,CAAV;AACH,OAFD;AAIA,UAAI,CAAC,CAAC,KAAKV,UAAL,CAAgB,CAAhB,CAAN,EAA0B,KAAKA,UAAL,CAAgB,CAAhB,EAAmBW,IAAnB;AAC7B,KAzIsB;;AAAA,SA2IvBb,QA3IuB,GA2IXf,IAAD,IAAU;AACjB,WAAKa,QAAL,CAAc;AACVvC,QAAAA,QAAQ,EAAE0B,IAAI,CAAC6B,WAAL,CAAiBjB;AADjB,OAAd;AAGA,WAAKL,YAAL,GAAoB,IAAIC,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAAC6B,WAAL,CAAiBpB,SAAtC,CAApB;AACA,WAAKqB,KAAL,GAAa,CACT,IAAItB,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAACkB,SAAL,CAAe,CAAf,EAAkBM,QAAvC,CADS,EAET,IAAIhB,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAACkB,SAAL,CAAe,CAAf,EAAkBM,QAAvC,CAFS,EAGT,IAAIhB,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAACkB,SAAL,CAAe,CAAf,EAAkBM,QAAvC,CAHS,EAIT,IAAIhB,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAACkB,SAAL,CAAe,CAAf,EAAkBM,QAAvC,CAJS,EAKT,IAAIhB,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAACkB,SAAL,CAAe,CAAf,EAAkBM,QAAvC,CALS,EAMT,IAAIhB,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAACkB,SAAL,CAAe,CAAf,EAAkBM,QAAvC,CANS,CAAb;AASA,WAAKM,KAAL,CAAW,CAAX,EAAcL,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKnB,YAAL,CAAkBqB,IAAlB;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAJD;AAMA,WAAKrB,YAAL,CAAkBkB,gBAAlB,CAAmC,OAAnC,EAA4C,MAAM;AAC9CC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKI,KAAL,CAAW,CAAX,EAAcF,IAAd;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAJD;AAMA,WAAKE,KAAL,CAAW,CAAX,EAAcL,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKK,qBAAL,CAA2BH,IAA3B;AACA,eAAKf,QAAL,CAAc;AACVtC,YAAAA,WAAW,EAAE,IADH;AAEVW,YAAAA,eAAe,EAAE;AAFP,WAAd;AAIA,eAAK8C,YAAL,GAAoBC,WAAW,CAAC,MAAM;AAClC,iBAAKpB,QAAL,CAAc;AACV3B,cAAAA,eAAe,EAAE,CAAC,KAAKmC,KAAL,CAAWnC;AADnB,aAAd;AAGH,WAJ8B,EAI5B,GAJ4B,CAA/B;AAKAwC,UAAAA,UAAU,CAAC,MAAM;AACbQ,YAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B,KAAKvC,KAAL,CAAWD,IAAX,CAAgBG,OAAhB,CAAwBsC,MAAlD,EAA0D,KAAKhC,WAAL,CAAiBM,SAA3E;AACH,WAFS,EAEP,GAFO,CAAV;AAGH,SAdS,EAcP,GAdO,CAAV;AAeH,OAhBD;AAkBA,WAAKmB,KAAL,CAAW,CAAX,EAAcL,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKK,qBAAL,CAA2BH,IAA3B;AACA,eAAKf,QAAL,CAAc;AACVtC,YAAAA,WAAW,EAAE,IADH;AAEVW,YAAAA,eAAe,EAAE;AAFP,WAAd;AAIA,eAAK8C,YAAL,GAAoBC,WAAW,CAAC,MAAM;AAClC,iBAAKpB,QAAL,CAAc;AACV3B,cAAAA,eAAe,EAAE,CAAC,KAAKmC,KAAL,CAAWnC;AADnB,aAAd;AAGH,WAJ8B,EAI5B,GAJ4B,CAA/B;AAKAwC,UAAAA,UAAU,CAAC,MAAM;AACbQ,YAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B,KAAKvC,KAAL,CAAWD,IAAX,CAAgBG,OAAhB,CAAwBsC,MAAlD,EAA0D,KAAKhC,WAAL,CAAiBM,SAA3E;AACH,WAFS,EAEP,GAFO,CAAV;AAGH,SAdS,EAcP,GAdO,CAAV;AAeH,OAhBD;AAkBA,WAAKmB,KAAL,CAAW,CAAX,EAAcL,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CC,QAAAA,UAAU,CAAC,MAAM;AACb,cAAI,KAAKY,aAAL,KAAuB,OAA3B,EAAoC,KAAK7C,UAAL,GAApC,KACK,KAAK0B,KAAL;AACR,SAHS,EAGP,IAHO,CAAV;AAIH,OALD;AAOAO,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKI,KAAL,CAAW,CAAX,EAAcF,IAAd;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAnNsB;;AAAA,SAqNvBW,eArNuB,GAqNL,MAAOC,CAAP,IAAa;AAC3B9C,MAAAA,OAAO,CAACC,GAAR,CAAY6C,CAAC,CAACC,MAAd;AACA,WAAKC,WAAL,GAAmBF,CAAC,CAACC,MAArB;AACA,WAAKE,eAAL;AACH,KAzNsB;;AAAA,SA2NvBC,aA3NuB,GA2NNJ,CAAD,IAAO;AACnB9C,MAAAA,OAAO,CAACC,GAAR,CAAY6C,CAAC,CAACC,MAAd;AACAI,MAAAA,aAAa,CAAC,KAAKb,YAAN,CAAb;AACA,WAAKc,mBAAL,CAAyBlB,IAAzB;AACA,WAAKf,QAAL,CAAc;AACVtC,QAAAA,WAAW,EAAE,KADH;AAEVW,QAAAA,eAAe,EAAE;AAFP,OAAd;AAIH,KAnOsB;;AAAA,SAqOvByD,eArOuB,GAqOL,YAAY;AAC1B,WAAK9B,QAAL,CAAc;AACVrC,QAAAA,OAAO,EAAET,MAAM,CAACgF;AADN,OAAd;;AAIA,UAAI,KAAKL,WAAL,CAAiBM,MAAjB,KAA4B,SAAhC,EAA2C;AACvC,YAAI,KAAKC,SAAL,KAAmB,UAAvB,EAAmC;AAC/B,cAAI,KAAKP,WAAL,CAAiBQ,KAAjB,GAAyB,EAA7B,EAAiC;AAC7B,iBAAKpB,KAAL,CAAW,CAAX,EAAcF,IAAd;AACA;AACH,WAHD,MAGO;AACH,iBAAKE,KAAL,CAAW,CAAX,EAAcF,IAAd;AACH;AACJ;;AAGD,cAAM;AAAEhC,UAAAA;AAAF,YAAW,KAAKC,KAAtB;AACA,cAAMC,IAAI,GAAGF,IAAI,CAACG,OAAL,CAAaD,IAA1B;AACA,cAAM;AAAEE,UAAAA;AAAF,YAAW,MAAM/B,MAAM,CAACkF,MAAP,CACnBrD,IADmB,EAEnB,KAAK4C,WAAL,CAAiBQ,KAFE,EAGnB,KAAKR,WAAL,CAAiBU,WAHE,EAInB,KAAKV,WAAL,CAAiBW,WAJE,EAKnB,KAAKX,WAAL,CAAiBY,YALE,EAMnB,KAAKhB,aAAL,KAAuB,QAAvB,GAAkC,GAAlC,GAAwC,GANrB,EAOnB,KAAKjC,WAAL,CAAiBkD,OAPE,EAQnB7C,OARmB,EASnB,KAAK4B,aAAL,KAAuB,OAAvB,GAAiC,GAAjC,GAAuC,GATpB,EAUnB,KAAKjC,WAAL,CAAiBC,QAVE,CAAvB;AAYAZ,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;;AAEA,YAAIA,IAAI,CAACG,IAAL,KAAc,CAAlB,EAAqB;AACjB,cAAIH,IAAI,CAACwD,KAAT,EAAgB;AACZ,iBAAKnD,WAAL,CAAiBC,QAAjB,GAA4B,GAA5B;AACA,iBAAKmD,UAAL,GAAkB,IAAIjD,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAAC0D,WAAL,CAAiBlC,QAAtC,CAAlB;AACA,iBAAKiC,UAAL,CAAgBhC,gBAAhB,CAAiC,OAAjC,EAA0C,MAAM;AAC5C,mBAAKZ,QAAL,CAAc;AACVrC,gBAAAA,OAAO,EAAET,MAAM,CAAC4F;AADN,eAAd;AAGAjC,cAAAA,UAAU,CAAC,MAAM;AACb,oBAAI,CAAC,CAAC,KAAKnB,YAAX,EAAyB;AACrB,uBAAKA,YAAL,CAAkBqB,IAAlB;AACA,uBAAKf,QAAL,CAAc;AACVrC,oBAAAA,OAAO,EAAET,MAAM,CAAC6F,SADN;AAEV3E,oBAAAA,SAAS,EAAE;AAFD,mBAAd;AAIH;AACJ,eARS,EAQP,IARO,CAAV;AASH,aAbD;AAeAyC,YAAAA,UAAU,CAAC,MAAM;AACb,kBAAI,CAAC,CAAC,KAAK+B,UAAX,EAAuB;AACnB,qBAAKA,UAAL,CAAgB7B,IAAhB;AACA,qBAAKf,QAAL,CAAc;AACVrC,kBAAAA,OAAO,EAAET,MAAM,CAAC6F;AADN,iBAAd;AAGH;AACJ,aAPS,EAOP,IAPO,CAAV;AAQA;AACH,WA3BD,MA2BO;AACH,iBAAKC,WAAL,GAAmB,IAAIrD,KAAJ,CAAUtC,QAAQ,GAAG8B,IAAI,CAAC0D,WAAL,CAAiBlC,QAAtC,CAAnB;AACA,iBAAKqC,WAAL,CAAiBpC,gBAAjB,CAAkC,OAAlC,EAA2C,MAAM,KAAKqC,QAAL,EAAjD;AACApC,YAAAA,UAAU,CAAC,MAAM;AACb,kBAAI,CAAC,CAAC,KAAKmC,WAAX,EAAwB,KAAKA,WAAL,CAAiBjC,IAAjB;AACxB,mBAAKf,QAAL,CAAc;AACVrC,gBAAAA,OAAO,EAAET,MAAM,CAACgG;AADN,eAAd;AAGH,aALS,EAKP,IALO,CAAV;AAMH;AAEJ,SAvCD,MAuCO,IAAI/D,IAAI,CAACG,IAAL,KAAc,CAAlB,EAAqB;AACxB,eAAK6D,QAAL;AACH,SAFM,MAGFtE,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACiE,OAAjB;AAER,OAvED,MAuEO;AACHvE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK+C,WAAL,CAAiBuB,OAA7B;AACH;AACJ,KApTsB;;AAAA,SAsTvBH,QAtTuB,GAsTZ,MAAM;AACb,UAAI,KAAK/E,YAAL,GAAoB,KAAKqB,IAAL,CAAUU,MAAV,GAAmB,CAA3C,EAA8C;AAC1C,aAAK/B,YAAL;AACH,OAFD,MAEO;AACH,aAAKiF,QAAL;AACA;AACH;;AACD,WAAK3D,WAAL,GAAmB,KAAKD,IAAL,CAAU,KAAKrB,YAAf,CAAnB;AACA,WAAKsB,WAAL,CAAiBC,QAAjB,GAA4B,GAA5B;AACA,UAAI,CAAC,CAAC,KAAKC,YAAX,EAAyB,KAAKA,YAAL,CAAkB2D,MAAlB;AACzB,WAAK3D,YAAL,GAAoB,IAApB;AACA,WAAKA,YAAL,GAAoB,IAAIC,KAAJ,CAAUtC,QAAQ,GAAG,KAAKmC,WAAL,CAAiBI,SAAtC,CAApB;AACA,UAAIC,OAAO,KAAK,WAAZ,IAA2BA,OAAO,KAAK,WAA3C,EACI,KAAKL,WAAL,CAAiBM,SAAjB,GAA6B,KAAKN,WAAL,CAAiBO,SAA9C;AAEJc,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKb,QAAL,CAAc;AACVrC,UAAAA,OAAO,EAAET,MAAM,CAACU,SADN;AAEVH,UAAAA,QAAQ,EAAE,KAAK+B,WAAL,CAAiBM,SAFjB;AAGV5B,UAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAHxB,SAAd;AAKH,OANS,EAMP,IANO,CAAV;AAQA2C,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKC,SAAL;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAhVsB;;AAAA,SAkVvBA,SAlVuB,GAkVX,MAAM;AACd,UAAI,CAAC,CAAC,KAAKpB,YAAX,EAAyB;AACrB,aAAKM,QAAL,CAAc;AACVrC,UAAAA,OAAO,EAAET,MAAM,CAAC6F,SADN;AAEV3E,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIA,aAAKsB,YAAL,CAAkBkB,gBAAlB,CAAmC,OAAnC,EAA4C,MAAM;AAC9C,eAAKZ,QAAL,CAAc;AACVrC,YAAAA,OAAO,EAAET,MAAM,CAACU,SADN;AAEVQ,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIAyC,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKK,qBAAL,CAA2BH,IAA3B;AACA,iBAAKf,QAAL,CAAc;AACVtC,cAAAA,WAAW,EAAE,IADH;AAEVW,cAAAA,eAAe,EAAE;AAFP,aAAd;AAIA,iBAAK8C,YAAL,GAAoBC,WAAW,CAAC,MAAM;AAClC,mBAAKpB,QAAL,CAAc;AACV3B,gBAAAA,eAAe,EAAE,CAAC,KAAKmC,KAAL,CAAWnC;AADnB,eAAd;AAGH,aAJ8B,EAI5B,GAJ4B,CAA/B;AAKAwC,YAAAA,UAAU,CAAC,MAAM;AACbQ,cAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B,KAAKvC,KAAL,CAAWD,IAAX,CAAgBG,OAAhB,CAAwBsC,MAAlD,EAA0D,KAAKhC,WAAL,CAAiBM,SAA3E;AACH,aAFS,EAEP,GAFO,CAAV;AAGH,WAdS,EAcP,GAdO,CAAV;AAeH,SApBD;AAqBA,aAAKJ,YAAL,CAAkBqB,IAAlB;AACH;AACJ,KA/WsB;;AAAA,SAiXvBoC,QAjXuB,GAiXZ,MAAM;AACbtE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,UAAI,KAAK2C,aAAL,KAAuB,OAA3B,EAAoC;AAChC,aAAKzB,QAAL,CAAc;AACVjC,UAAAA,aAAa,EAAE;AADL,SAAd;AAGH,OAJD,MAIO;AACH,aAAKiC,QAAL,CAAc;AACVhC,UAAAA,cAAc,EAAE;AADN,SAAd;AAGH;AACJ,KA5XsB;;AAAA,SA8XvBsF,gBA9XuB,GA8XHC,OAAD,IAAa;AAC5B,UAAIC,iBAAiB,GAAG3C,UAAU,CAAC,MAAM;AACrC,aAAK7B,KAAL,CAAWyE,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,OAFiC,EAE/B,KAF+B,CAAlC;;AAIA,WAAK,IAAIC,CAAT,IAAcJ,OAAd,EAAuB;AACnB,aAAK,IAAIK,IAAT,IAAiBL,OAAO,CAACI,CAAD,CAAxB,EAA6B;AACzB,cAAIE,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,UAAAA,GAAG,CAACE,GAAJ,GAAUR,OAAO,CAACI,CAAD,CAAP,CAAWC,IAAX,CAAV;;AACAC,UAAAA,GAAG,CAACG,MAAJ,GAAa,MAAM;AACf,iBAAKhE,QAAL,CAAc;AACV/B,cAAAA,OAAO,EAAG,EAAE,KAAKgG,gBAAP,GAA0B,KAAKC,WAAhC,GAA+C;AAD9C,aAAd;;AAGA,gBAAI,KAAKD,gBAAL,KAA0B,KAAKC,WAAnC,EAAgD;AAC5C,mBAAKlE,QAAL,CAAc;AACVnC,gBAAAA,aAAa,EAAE,IADL;AAEVF,gBAAAA,OAAO,EAAET,MAAM,CAACU;AAFN,eAAd;AAIAuG,cAAAA,YAAY,CAACX,iBAAD,CAAZ;AACA,kBAAI,KAAK/B,aAAL,KAAuB,OAA3B,EAAoC,KAAK7C,UAAL,GAApC,KACK,KAAK0B,KAAL;AACR;AACJ,WAbD;AAcH;AACJ;AACJ,KAvZsB;;AAAA,SAyZvB8D,sBAzZuB,GAyZE,MAAM;AAC3B,WAAKpE,QAAL,CAAc;AACVlC,QAAAA,SAAS,EAAE;AADD,OAAd;;AAIA,UAAI,KAAKuG,YAAT,EAAuB;AACnB,aAAK3E,YAAL,CAAkBqB,IAAlB;AACH;AACJ,KAjasB;;AAAA,SAmavBuD,qBAnauB,GAmaC,MAAM;AAC1B,WAAKtE,QAAL,CAAc;AACVjC,QAAAA,aAAa,EAAE;AADL,OAAd;AAGA,WAAKa,UAAL;AACAiC,MAAAA,UAAU,CAAC,MAAM,KAAKC,SAAL,EAAP,EAAyB,IAAzB,CAAV;AACH,KAzasB;;AAAA,SA2avByD,mBA3auB,GA2aD,MAAM;AACxB,WAAKvE,QAAL,CAAc;AACVlC,QAAAA,SAAS,EAAE;AADD,OAAd;;AAIA,UAAI,CAAC,CAAC,KAAK4B,YAAP,IAAuB,CAAC,KAAKA,YAAL,CAAkB8E,MAA9C,EAAsD;AAClD,aAAK9E,YAAL,CAAkB+E,KAAlB;AACA,aAAKJ,YAAL,GAAoB,IAApB;AACH;AACJ,KApbsB;;AAAA,SAsbvBK,sBAtbuB,GAsbE,MAAM;AAC3B,UAAI,KAAKlE,KAAL,CAAW9C,WAAf,EAA4B;AACxB2D,QAAAA,MAAM,CAACC,MAAP,CAAcqD,oBAAd;AACH;AACJ,KA1bsB;;AAEnB9E,IAAAA,OAAO,GAAGlB,KAAK,CAACiG,MAAN,CAAaC,IAAvB;AACA,SAAKpD,aAAL,GAAqB9C,KAAK,CAACiG,MAAN,CAAanD,aAAlC;AACA,SAAKP,qBAAL,GAA6B,IAAIvB,KAAJ,CAAUxC,WAAW,CAAC2H,eAAtB,CAA7B;AACA,SAAK7C,mBAAL,GAA2B,IAAItC,KAAJ,CAAUxC,WAAW,CAAC4H,aAAtB,CAA3B;AACA,SAAKxF,IAAL,GAAY,IAAZ;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKtB,YAAL,GAAoB,CAApB;AACA,SAAKwB,YAAL,GAAoB,IAApB;AACA,SAAKmC,WAAL,GAAmB,IAAnB;AACA,SAAKe,UAAL,GAAkB,IAAlB;AACA,SAAKW,OAAL,GAAe;AAAEtG,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAf;AACA,SAAKgH,WAAL,GAAmBc,MAAM,CAACC,IAAP,CAAY,KAAK1B,OAAL,CAAatG,EAAzB,EAA6BgD,MAA7B,GAAsC+E,MAAM,CAACC,IAAP,CAAY,KAAK1B,OAAL,CAAarG,MAAzB,EAAiC+C,MAA1F;AACA,SAAKgE,gBAAL,GAAwB,CAAxB;AACA,SAAKI,YAAL,GAAoB,KAApB;AACA,SAAK7D,KAAL,GAAahD,UAAb;AACH;;AAED,QAAM0H,iBAAN,GAA0B;AACtB,UAAM;AAAEnG,MAAAA;AAAF,QAAW,KAAKC,KAAtB;;AAEA,QAAI,CAACD,IAAI,CAACA,IAAL,CAAUoG,IAAX,IAAmB,CAACpG,IAAI,CAACG,OAAL,CAAaD,IAArC,EAA2C;AACvC,WAAKD,KAAL,CAAWyE,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACA;AACH;;AAED,SAAKJ,gBAAL,CAAsB,KAAKC,OAA3B;AAEAlC,IAAAA,MAAM,CAACT,gBAAP,CAAwB,SAAxB,EAAmC,KAAKc,eAAxC;AACAL,IAAAA,MAAM,CAACT,gBAAP,CAAwB,sBAAxB,EAAgD,KAAKmB,aAArD;AACH;;AAEDqD,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAK5E,KAAL,CAAW9C,WAAf,EAA4B;AACxB2D,MAAAA,MAAM,CAACC,MAAP,CAAcqD,oBAAd;AACH;;AACD,QAAI,CAAC,CAAC,KAAKjF,YAAX,EAAyB;AACrB,WAAKA,YAAL,CAAkB+E,KAAlB;AACA,WAAK/E,YAAL,CAAkB2D,MAAlB;AACA,WAAK3D,YAAL,GAAoB,IAApB;AACH;;AACD,QAAI,CAAC,CAAC,KAAKkD,UAAX,EAAuB;AACnB,WAAKA,UAAL,CAAgB6B,KAAhB;AACA,WAAK7B,UAAL,CAAgBS,MAAhB;AACA,WAAKT,UAAL,GAAkB,IAAlB;AACH;;AAED,QAAI,CAAC,CAAC,KAAK3B,KAAX,EAAkB;AACd,WAAK,IAAI0C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1C,KAAL,CAAWhB,MAA/B,EAAuC0D,CAAC,EAAxC,EAA4C;AACxC,YAAI,CAAC,CAAC,KAAK1C,KAAL,CAAW0C,CAAX,CAAN,EAAqB;AACjB,eAAK1C,KAAL,CAAW0C,CAAX,EAAcc,KAAd;AACA,eAAKxD,KAAL,CAAW0C,CAAX,EAAcN,MAAd;AACA,eAAKpC,KAAL,CAAW0C,CAAX,IAAgB,IAAhB;AACH;AACJ;AACJ;;AACDtC,IAAAA,MAAM,CAACgE,mBAAP,CAA2B,SAA3B,EAAsC,KAAK3D,eAA3C;AACAL,IAAAA,MAAM,CAACgE,mBAAP,CAA2B,sBAA3B,EAAmD,KAAKtD,aAAxD;AACH;;AAEDuD,EAAAA,iBAAiB,CAAChH,GAAD,EAAMC,SAAN,EAAiB;AAC9BM,IAAAA,OAAO,CAAC0G,KAAR,CAAcjH,GAAd;AACA,SAAK0B,QAAL,CAAc,OAAO;AACjB1B,MAAAA,GAAG,EAAE,IADY;AAEjBC,MAAAA,SAAS,EAAEA;AAFM,KAAP,CAAd;;AAKA,QAAIiH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC3I,MAAAA,MAAM,CAAC4I,gBAAP,CAAwBrH,GAAxB,EAA6B;AAAEsH,QAAAA,KAAK,EAAErH;AAAT,OAA7B;AACH;AACJ;;AAqXDsH,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpI,MAAAA,QAAF;AAAYE,MAAAA,OAAZ;AAAqBU,MAAAA,eAArB;AAAsCR,MAAAA,aAAtC;AAAqDO,MAAAA,SAArD;AACFN,MAAAA,SADE;AACSC,MAAAA,aADT;AACwBC,MAAAA,cADxB;AACwCC,MAAAA,OADxC;AAEFC,MAAAA,YAFE;AAEYC,MAAAA;AAFZ,QAEyB,KAAKqC,KAFpC;;AAIA,QAAI,KAAKA,KAAL,CAAWlC,GAAf,EAAoB;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;;AAED,QAAIT,aAAJ,EAAmB;AACf,0BAAQ,oBAAC,kBAAD;AACJ,QAAA,UAAU,EAAEZ,EAAE,CAAC6I,aADX;AAC0B,QAAA,OAAO,EAAE7I,EAAE,CAAC8I,UADtC;AACkD,QAAA,WAAW,EAAE9I,EAAE,CAAC+I,WADlE;AAEJ,QAAA,MAAM,EAAErI,OAFJ;AAEa,QAAA,SAAS,EAAES,SAFxB;AAGJ,QAAA,IAAI,EAAEX,QAHF;AAGY,QAAA,eAAe,EAAEY,eAH7B;AAIJ,QAAA,sBAAsB,EAAE,KAAKqG,sBAJzB;AAKJ,QAAA,sBAAsB,EAAE,KAAKN,sBALzB;AAMJ,QAAA,qBAAqB,EAAE,KAAKE,qBANxB;AAOJ,QAAA,mBAAmB,EAAE,KAAKC,mBAPtB;AAQJ,QAAA,SAAS,EAAEzG,SARP;AASJ,QAAA,cAAc,EAAEE,cATZ;AAUJ,QAAA,aAAa,EAAED,aAVX;AAWJ,QAAA,YAAY,EAAEG,YAXV;AAYJ,QAAA,QAAQ,EAAEC,QAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAcH,KAfD,MAgBK;AACD,0BAAO,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AA9dmC;;AAAlCO,S,CACKyH,S,GAAY;AACflH,EAAAA,IAAI,EAAElC,SAAS,CAACqJ,QAAV,CAAmBrJ,SAAS,CAACsJ,GAA7B,EAAkCC,UADzB;AAEfC,EAAAA,QAAQ,EAAExJ,SAAS,CAACyJ,IAAV,CAAeF;AAFV,C;;AAgevB,SAASG,eAAT,CAAyB/F,KAAzB,EAAgC;AAC5B,SAAO;AAAEzB,IAAAA,IAAI,EAAEyB,KAAK,CAACzB;AAAd,GAAP;AACH;;AAED,eAAejC,OAAO,CAACyJ,eAAD,CAAP,CAAyB3J,UAAU,CAAC4B,SAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL, T_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nconst inistState = {\n    cureText: null,\n    isRecording: false,\n    TTobaki: TTobak.ttobak1_1,\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n    isPlaying: false,\n    RecordingCircle: false,\n    err: false,\n    errorInfo: false,\n};\n\nclass Shadowing extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match }) {\n        super();\n        idx_txt = match.params.type;\n        this.learning_type = match.params.learning_type;\n        this.recording_start_sound = new Audio(SoundEffect.recording_start);\n        this.recording_end_sound = new Audio(SoundEffect.recording_end);\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n        this.retryAudio = null;\n        this.picture = { T1, TTobak };\n        this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n        this.numOfLoadedImage = 0;\n        this.continuePlay = false;\n        this.state = inistState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener('android', this.androidResponse);\n        window.addEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentWillUnmount() {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio.remove();\n            this.currentAudio = null;\n        }\n        if (!!this.retryAudio) {\n            this.retryAudio.pause();\n            this.retryAudio.remove();\n            this.retryAudio = null;\n        }\n\n        if (!!this.voice) {\n            for (let i = 0; i < this.voice.length; i++) {\n                if (!!this.voice[i]) {\n                    this.voice[i].pause();\n                    this.voice[i].remove();\n                    this.voice[i] = null;\n                }\n            }\n        }\n        window.removeEventListener('android', this.androidResponse);\n        window.removeEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentDidCatch(err, errorInfo) {\n        console.error(err);\n        this.setState(() => ({\n            err: true,\n            errorInfo: errorInfo,\n        }));\n\n        if (process.env.NODE_ENV === 'production') {\n            Sentry.captureException(err, { extra: errorInfo });\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { data } = await T1_Api.ask(s_id, idx_text);\n        console.log('new', data);\n\n        if (data.code === 'specified' || data.code === 1) {\n            this.currentIndex = 0;\n            this.cure = data.cure;\n            this.currentCure = data.cure[this.currentIndex];\n            this.currentCure.is_first = 'T';\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (idx_txt === 'vowelword' || idx_txt === 'consoword')\n                this.currentCure.cure_text = this.currentCure.cure_word;\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text,\n                totalNum: this.cure.length,\n                currentIndex: this.currentIndex + 1,\n            });\n        }\n        if (data.code === 'tutorial') {\n            this.tutorial(data);\n            return;\n        }\n        else this.intro(data.read_voice || data.tut_voice);\n    }\n\n    daily = () => {\n        console.log(this.props.location.state.data);\n\n        this.cure = this.props.location.state.data.read;\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        if (idx_txt === 'vowelword' || idx_txt === 'consoword')\n            this.currentCure.cure_text = this.currentCure.cure_word;\n\n        this.setState({\n            totalNum: this.cure.length,\n            cureText: this.currentCure.cure_text,\n            currentIndex: this.currentIndex + 1,\n        });\n\n        if (this.props.location.state.data.code === 'tutorial') {\n            this.tutorial(this.props.location.state.data);\n            return;\n        }\n        else this.intro(this.props.location.state.data.read_voice || this.props.location.state.data.tut_voice);\n    }\n\n    intro = (data) => {\n        this.reac_voice = null;\n        this.read_voice = [\n            new Audio(soundURL + data[0].voc_path),\n        ];\n\n        this.read_voice[0].addEventListener('ended', () => {\n            setTimeout(() => this.playSound(), 1000);\n        });\n\n        if (!!this.read_voice[0]) this.read_voice[0].play();\n    }\n\n    tutorial = (data) => {\n        this.setState({\n            cureText: data.sample_ques.cure_word,\n        })\n        this.currentAudio = new Audio(soundURL + data.sample_ques.cure_path);\n        this.voice = [\n            new Audio(soundURL + data.tut_voice[0].voc_path),\n            new Audio(soundURL + data.tut_voice[1].voc_path),\n            new Audio(soundURL + data.tut_voice[2].voc_path),\n            new Audio(soundURL + data.tut_voice[3].voc_path),\n            new Audio(soundURL + data.tut_voice[4].voc_path),\n            new Audio(soundURL + data.tut_voice[5].voc_path),\n        ];\n\n        this.voice[0].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.currentAudio.play();\n            }, 1000);\n        });\n\n        this.currentAudio.addEventListener('ended', () => {\n            setTimeout(() => {\n                this.voice[1].play();\n            }, 1000);\n        });\n\n        this.voice[1].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.recording_start_sound.play();\n                this.setState({\n                    isRecording: true,\n                    RecordingCircle: true,\n                })\n                this.setRecording = setInterval(() => {\n                    this.setState({\n                        RecordingCircle: !this.state.RecordingCircle,\n                    });\n                }, 500);\n                setTimeout(() => {\n                    window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n                }, 200);\n            }, 800);\n        });\n\n        this.voice[2].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.recording_start_sound.play();\n                this.setState({\n                    isRecording: true,\n                    RecordingCircle: true,\n                })\n                this.setRecording = setInterval(() => {\n                    this.setState({\n                        RecordingCircle: !this.state.RecordingCircle,\n                    });\n                }, 500);\n                setTimeout(() => {\n                    window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n                }, 200);\n            }, 800);\n        })\n\n        this.voice[5].addEventListener('ended', () => {\n            setTimeout(() => {\n                if (this.learning_type !== 'daily') this.newRequest();\n                else this.daily();\n            }, 1000);\n        })\n\n        setTimeout(() => {\n            this.voice[0].play();\n        }, 1000);\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    stopRecording = (e) => {\n        console.log(e.detail);\n        clearInterval(this.setRecording);\n        this.recording_end_sound.play();\n        this.setState({\n            isRecording: false,\n            RecordingCircle: false,\n        });\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        if (this.audioResult.status === 'Success') {\n            if (this.gameState === 'tutorial') {\n                if (this.audioResult.score < 85) {\n                    this.voice[2].play();\n                    return;\n                } else {\n                    this.voice[5].play();\n                }\n            }\n\n\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const { data } = await T1_Api.answer(\n                s_id,\n                this.audioResult.score,\n                this.audioResult.phone_score,\n                this.audioResult.speed_score,\n                this.audioResult.rhythm_score,\n                this.learning_type === 'review' ? 'T' : 'F',\n                this.currentCure.cure_id,\n                idx_txt,\n                this.learning_type === 'daily' ? 'T' : 'F',\n                this.currentCure.is_first\n            );\n            console.log(data);\n\n            if (data.code === 1) {\n                if (data.retry) {\n                    this.currentCure.is_first = 'F';\n                    this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n                    this.retryAudio.addEventListener('ended', () => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak3_1,\n                        })\n                        setTimeout(() => {\n                            if (!!this.currentAudio) {\n                                this.currentAudio.play();\n                                this.setState({\n                                    TTobaki: TTobak.ttobak3_2,\n                                    isPlaying: true,\n                                })\n                            }\n                        }, 3000);\n                    });\n\n                    setTimeout(() => {\n                        if (!!this.retryAudio) {\n                            this.retryAudio.play();\n                            this.setState({\n                                TTobaki: TTobak.ttobak3_2,\n                            });\n                        }\n                    }, 1000);\n                    return;\n                } else {\n                    this.good_script = new Audio(soundURL + data.class_voice.voc_path);\n                    this.good_script.addEventListener('ended', () => this.nextStep());\n                    setTimeout(() => {\n                        if (!!this.good_script) this.good_script.play();\n                        this.setState({\n                            TTobaki: TTobak.ttobak2_2,\n                        });\n                    }, 1000);\n                }\n\n            } else if (data.code === 2) {\n                this.gameDone();\n            }\n            else console.log(data.message);\n\n        } else {\n            console.log(this.audioResult.message);\n        }\n    }\n\n    nextStep = () => {\n        if (this.currentIndex < this.cure.length - 1) {\n            this.currentIndex++;\n        } else {\n            this.gameDone();\n            return;\n        }\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        if (!!this.currentAudio) this.currentAudio.remove();\n        this.currentAudio = null;\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        if (idx_txt === 'vowelword' || idx_txt === 'consoword')\n            this.currentCure.cure_text = this.currentCure.cure_word;\n\n        setTimeout(() => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text,\n                currentIndex: this.currentIndex + 1\n            });\n        }, 2000);\n\n        setTimeout(() => {\n            this.playSound();\n        }, 4000);\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n                isPlaying: true,\n            });\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    isPlaying: false,\n                });\n                setTimeout(() => {\n                    this.recording_start_sound.play();\n                    this.setState({\n                        isRecording: true,\n                        RecordingCircle: true,\n                    })\n                    this.setRecording = setInterval(() => {\n                        this.setState({\n                            RecordingCircle: !this.state.RecordingCircle,\n                        });\n                    }, 500);\n                    setTimeout(() => {\n                        window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n                    }, 200);\n                }, 800);\n            });\n            this.currentAudio.play();\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.push('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                            TTobaki: TTobak.ttobak1_1,\n                        });\n                        clearTimeout(timeoutPreloading);\n                        if (this.learning_type !== 'daily') this.newRequest();\n                        else this.daily();\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        });\n\n        if (this.continuePlay) {\n            this.currentAudio.play();\n        }\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        });\n\n        if (!!this.currentAudio && !this.currentAudio.paused) {\n            this.currentAudio.pause();\n            this.continuePlay = true;\n        }\n    }\n\n    onCompleteButtonHandle = () => {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n    }\n\n    render() {\n        const { cureText, TTobaki, RecordingCircle, isImageLoaded, isPlaying,\n            showPopup, showDonePopup, showDailyPopup, percent,\n            currentIndex, totalNum } = this.state;\n\n        if (this.state.err) {\n            return <div>error</div>;\n        }\n\n        if (isImageLoaded) {\n            return (<ShadowingPresenter\n                Background={T1.t1_background} TextBox={T1.t1_textbox} bt_complete={T1.bt_complete}\n                TTobak={TTobaki} isPlaying={isPlaying}\n                text={cureText} RecordingCircle={RecordingCircle}\n                onCompleteButtonHandle={this.onCompleteButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));"]},"metadata":{},"sourceType":"module"}