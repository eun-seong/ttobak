{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T5_Sound/SoundContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SoundPresenter from './SoundPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { T5, TTobak, Characters } from 'images';\nimport { T_Api2, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nconst initState = {\n  TTobaki: TTobak.ttobak1_1,\n  // 또박이 이미지 상태\n  gameState: false,\n  CardTextList: null,\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0\n};\n\nclass Sound extends React.Component {\n  constructor({\n    match,\n    location\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T_Api2.ask(s_id, this.type);\n      console.log(data);\n\n      if (data.code === 'tutorial') {\n        this.tutorial();\n        return;\n      }\n\n      if (data.code === 'specified' || data.code === 1) {\n        this.currentIndex = 0;\n        this.cure = data.cure;\n        this.currentCure = data.cure[this.currentIndex];\n        this.setAudio();\n        this.setState({\n          CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2],\n          totalNum: this.cure.length\n        });\n        setTimeout(() => this.playSound(), 1000);\n      } else console.log('data message: ' + data.message);\n    };\n\n    this.daily = () => {\n      if (this.props.location.state.data.code === 'tutorial') {\n        this.tutorial(this.props.location.state.data);\n        return;\n      }\n\n      console.log(this.props.location.state.data.cure);\n      this.cure = this.props.location.state.data.cure;\n      this.currentCure = this.cure[this.currentIndex];\n      this.setAudio();\n      this.setState = {\n        totalNum: this.cure.length,\n        CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2]\n      };\n      setTimeout(() => this.playSound(), 1000);\n    };\n\n    this.tutorial = data => {\n      this.voice = [new Audio(soundURL + data.tut_vocie[0].voc_path), new Audio(soundURL + data.tut_vocie[1].voc_path), new Audio(soundURL + data.tut_vocie[2].voc_path)];\n      this.currentCure = data.sample_ques;\n      this.setAudio(true);\n      this.voice[0].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.playSound();\n        }, 1000);\n      });\n      this.voice[1].addEventListener('ended', () => {\n        this.setState({\n          gameState: 'tutorial',\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n      this.voice[2].addEventListener('ended', async () => {\n        const {\n          data\n        } = await T_tutorial.answer(this.props.user.student.s_id, idx_txt, this.currentCure.cure_id);\n        console.log(data);\n        this.setState({\n          gameState: false\n        });\n        if (this.learning_type === 'daily') this.daily();else this.newRequest();\n        this.currentCure = null;\n        this.voice = null;\n      });\n      setTimeout(() => {\n        this.voice[0].play();\n      }, 2000);\n    };\n\n    this.setAudio = isTutorial => {\n      if (this.type === 'consosound') {\n        this.currentCure.answer = Math.floor(Math.random() * 2) + 1;\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n\n        if (this.currentCure.answer === 2) {\n          var tmp = this.currentCure.cure_word;\n          this.currentCure.cure_word = this.currentCure.cure_word2;\n          this.currentCure.cure_word2 = tmp;\n        }\n      } else {\n        this.currentAudio = this.currentCure.answer === 1 ? new Audio(soundURL + this.currentCure.cure_path) : new Audio(soundURL + this.currentCure.cure_path2);\n      }\n\n      this.currentAudio.addEventListener('ended', () => {\n        if (isTutorial) {\n          setTimeout(() => {\n            this.voice[1].play();\n          }, 1000);\n        } else this.setState({\n          gameState: true,\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          gameState: false,\n          TTobaki: TTobak.ttobak1_2\n        });\n        this.currentAudio.play();\n      }\n    };\n\n    this.onTTobakiTouchHandle = () => {\n      const {\n        gameState\n      } = this.state;\n      if (gameState) this.playSound();\n    };\n\n    this.onCardTouchHandle = async index => {\n      const {\n        gameState\n      } = this.state;\n\n      if (gameState === 'tutorial') {\n        if (CardTextList[index] === this.currentCure.answer === 1 ? this.currentCure.cure_word : this.currentCure.cure_word2) {\n          setTimeout(() => {\n            this.voice[2].play();\n          }, 1000);\n        }\n\n        return;\n      }\n\n      if (!gameState) return;\n      this.setState({\n        gameState: false,\n        TTobaki: TTobak.ttobak2_2\n      });\n\n      try {\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const {\n          CardTextList\n        } = this.state;\n        const {\n          data\n        } = await T_Api2.answer(s_id, this.currentCure.answer === 1 ? this.currentCure.cure_word : this.currentCure.cure_word2, CardTextList[index], this.currentCure.cure_id, this.learning_type === 'review' ? 'T' : 'F', this.type, this.learning_type === 'daily' ? 'T' : 'F');\n        console.log(data);\n\n        if (data.code === 1) {\n          if (this.currentIndex < this.cure.length - 1) this.currentIndex++;else {\n            setTimeout(() => {\n              this.gameDone();\n            }, 1000);\n            return;\n          }\n          this.currentCure = this.cure[this.currentIndex];\n          this.setAudio();\n          setTimeout(() => {\n            this.setState({\n              CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2],\n              TTobaki: TTobak.ttobak1_1,\n              currentIndex: this.currentIndex + 1\n            });\n          }, 2000);\n          setTimeout(() => {\n            this.playSound();\n          }, 3000);\n        } else if (data.code === 2) {\n          this.setState({\n            showPopup: true\n          });\n        } else {\n          this.props.history.replace('/main/main');\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.replace('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true,\n                TTobaki: TTobak.ttobak1_1\n              });\n              clearTimeout(timeoutPreloading);\n              if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.learning_type = match.params.learning_type;\n    this.type = match.params.type + 'sound';\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      T5,\n      TTobak,\n      Characters\n    };\n    this.totalImages = Object.keys(T5).length + Object.keys(TTobak).length + Object.keys(Characters).length;\n    this.state = initState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n  }\n\n  render() {\n    const {\n      TTobaki,\n      CardTextList,\n      isImageLoaded,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      gameState,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(SoundPresenter, {\n        Background: T5.t5_background,\n        TTobak: TTobaki,\n        TTobakiTouch: this.onTTobakiTouchHandle,\n        Card: [Characters.card1, Characters.card2],\n        CardTextList: CardTextList || ['아', '에'],\n        onCardTouchHandle: this.onCardTouchHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        gameState: gameState,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nSound.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Sound));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T5_Sound/SoundContainer.js"],"names":["React","withRouter","SoundPresenter","PropTypes","connect","T5","TTobak","Characters","T_Api2","soundURL","LoadingComp","initState","TTobaki","ttobak1_1","gameState","CardTextList","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","Sound","Component","constructor","match","location","newRequest","console","log","user","props","s_id","student","data","ask","type","code","tutorial","cure","currentCure","setAudio","setState","cure_word","cure_word2","length","setTimeout","playSound","message","daily","state","voice","Audio","tut_vocie","voc_path","sample_ques","addEventListener","T_tutorial","answer","idx_txt","cure_id","learning_type","play","isTutorial","Math","floor","random","currentAudio","cure_path","tmp","cure_path2","ttobak1_2","onTTobakiTouchHandle","onCardTouchHandle","index","ttobak2_2","gameDone","history","replace","e","imagesPreloading","picture","timeoutPreloading","i","prop","img","Image","src","onload","numOfLoadedImage","totalImages","clearTimeout","onContinueButtonHandle","onRestartButtonHandle","onPauseButtonHandle","params","Object","keys","componentDidMount","u_id","push","componentWillUnmount","pause","render","t5_background","card1","card2","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SoundPresenter from './SoundPresenter';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { T5, TTobak, Characters } from 'images';\nimport { T_Api2, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nconst initState = {\n    TTobaki: TTobak.ttobak1_1,                  // 또박이 이미지 상태\n    gameState: false,\n    CardTextList: null,\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n}\n\nclass Sound extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match, location }) {\n        super();\n        this.learning_type = match.params.learning_type;\n        this.type = match.params.type + 'sound';\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.numOfLoadedImage = 0;\n        this.picture = { T5, TTobak, Characters };\n        this.totalImages = Object.keys(T5).length + Object.keys(TTobak).length + Object.keys(Characters).length;\n\n        this.state = initState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n        const { data } = await T_Api2.ask(s_id, this.type);\n        console.log(data);\n\n        if (data.code === 'tutorial') {\n            this.tutorial();\n            return;\n        }\n\n        if (data.code === 'specified' || data.code === 1) {\n            this.currentIndex = 0;\n            this.cure = data.cure;\n            this.currentCure = data.cure[this.currentIndex];\n            this.setAudio();\n\n            this.setState({\n                CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2],\n                totalNum: this.cure.length,\n            });\n            setTimeout(() => this.playSound(), 1000);\n        }\n        else console.log('data message: ' + data.message);\n    }\n\n    daily = () => {\n        if (this.props.location.state.data.code === 'tutorial') {\n            this.tutorial(this.props.location.state.data);\n            return;\n        }\n\n        console.log(this.props.location.state.data.cure);\n        this.cure = this.props.location.state.data.cure;\n        this.currentCure = this.cure[this.currentIndex];\n        this.setAudio();\n        this.setState = {\n            totalNum: this.cure.length,\n            CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2],\n        };\n        setTimeout(() => this.playSound(), 1000);\n    }\n\n    tutorial = (data) => {\n        this.voice = [\n            new Audio(soundURL + data.tut_vocie[0].voc_path),\n            new Audio(soundURL + data.tut_vocie[1].voc_path),\n            new Audio(soundURL + data.tut_vocie[2].voc_path),\n        ];\n        this.currentCure = data.sample_ques;\n        this.setAudio(true);\n\n        this.voice[0].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.playSound();\n            }, 1000);\n        });\n\n        this.voice[1].addEventListener('ended', () => {\n            this.setState({\n                gameState: 'tutorial',\n                TTobaki: TTobak.ttobak1_1,\n            });\n        });\n\n        this.voice[2].addEventListener('ended', async () => {\n            const { data } = await T_tutorial.answer(this.props.user.student.s_id, idx_txt, this.currentCure.cure_id);\n            console.log(data);\n            this.setState({\n                gameState: false,\n            });\n            if (this.learning_type === 'daily') this.daily();\n            else this.newRequest();\n\n            this.currentCure = null;\n            this.voice = null;\n        });\n\n        setTimeout(() => {\n            this.voice[0].play();\n        }, 2000);\n    }\n\n    setAudio = (isTutorial) => {\n        if (this.type === 'consosound') {\n            this.currentCure.answer = Math.floor(Math.random() * 2) + 1;\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.currentCure.answer === 2) {\n                var tmp = this.currentCure.cure_word;\n                this.currentCure.cure_word = this.currentCure.cure_word2;\n                this.currentCure.cure_word2 = tmp;\n            }\n        } else {\n            this.currentAudio = this.currentCure.answer === 1\n                ? new Audio(soundURL + this.currentCure.cure_path) :\n                new Audio(soundURL + this.currentCure.cure_path2);\n        }\n\n        this.currentAudio.addEventListener('ended', () => {\n            if (isTutorial) {\n                setTimeout(() => {\n                    this.voice[1].play();\n                }, 1000);\n            } else this.setState({\n                gameState: true,\n                TTobaki: TTobak.ttobak1_1\n            })\n        })\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                gameState: false,\n                TTobaki: TTobak.ttobak1_2\n            });\n            this.currentAudio.play();\n        }\n    }\n\n    onTTobakiTouchHandle = () => {\n        const { gameState } = this.state;\n        if (gameState) this.playSound();\n    }\n\n    onCardTouchHandle = async (index) => {\n        const { gameState } = this.state;\n        if (gameState === 'tutorial') {\n            if (CardTextList[index] === this.currentCure.answer === 1 ? this.currentCure.cure_word : this.currentCure.cure_word2) {\n                setTimeout(() => {\n                    this.voice[2].play();\n                }, 1000);\n            }\n            return;\n        }\n        if (!gameState) return;\n\n        this.setState({\n            gameState: false,\n            TTobaki: TTobak.ttobak2_2\n        });\n\n        try {\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const { CardTextList } = this.state;\n\n            const { data } = await T_Api2.answer(\n                s_id,\n                this.currentCure.answer === 1 ? this.currentCure.cure_word : this.currentCure.cure_word2,\n                CardTextList[index],\n                this.currentCure.cure_id,\n                this.learning_type === 'review' ? 'T' : 'F',\n                this.type,\n                this.learning_type === 'daily' ? 'T' : 'F',\n            );\n            console.log(data);\n\n            if (data.code === 1) {\n                if (this.currentIndex < this.cure.length - 1) this.currentIndex++;\n                else {\n                    setTimeout(() => {\n                        this.gameDone();\n                    }, 1000);\n                    return;\n                }\n                this.currentCure = this.cure[this.currentIndex];\n                this.setAudio();\n\n                setTimeout(() => {\n                    this.setState({\n                        CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2],\n                        TTobaki: TTobak.ttobak1_1,\n                        currentIndex: this.currentIndex + 1\n                    });\n                }, 2000);\n\n                setTimeout(() => {\n                    this.playSound();\n                }, 3000);\n            } else if (data.code === 2) {\n                this.setState({\n                    showPopup: true,\n                })\n            } else {\n                this.props.history.replace('/main/main');\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.replace('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                            TTobaki: TTobak.ttobak1_1,\n                        })\n                        clearTimeout(timeoutPreloading);\n                        if (this.learning_type !== 'daily') this.newRequest();\n                        else this.daily();\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { TTobaki, CardTextList, isImageLoaded, showPopup, showDonePopup, showDailyPopup, percent, gameState,\n            currentIndex, totalNum } = this.state;\n        if (isImageLoaded) {\n            return (<SoundPresenter\n                Background={T5.t5_background}\n                TTobak={TTobaki}\n                TTobakiTouch={this.onTTobakiTouchHandle}\n                Card={[Characters.card1, Characters.card2]}\n                CardTextList={CardTextList || ['아', '에']}\n                onCardTouchHandle={this.onCardTouchHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                gameState={gameState}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Sound));"]},"metadata":{},"sourceType":"module"}