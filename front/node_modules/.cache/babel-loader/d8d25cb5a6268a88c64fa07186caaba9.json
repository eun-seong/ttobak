{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T4_Word/WordContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\nimport WordPresenter from './WordPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL, T_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nconst inistState = {\n  cureText: null,\n  isRecording: false,\n  TTobaki: TTobak.ttobak1_1,\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0,\n  isPlaying: false,\n  RecordingCircle: false,\n  err: false,\n  errorInfo: false\n};\n\nconst currentAudioListner = () => {\n  this.setState({\n    TTobaki: TTobak.ttobak1_1,\n    isPlaying: false\n  });\n  setTimeout(() => {\n    this.recording_start_sound.play();\n    this.setState({\n      isRecording: true,\n      RecordingCircle: true\n    });\n    this.setRecording = setInterval(() => {\n      this.setState({\n        RecordingCircle: !this.state.RecordingCircle\n      });\n    }, 500);\n    setTimeout(() => {\n      window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_word);\n    }, 200);\n  }, 800);\n};\n\nclass Word extends React.Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T1_Api.ask(s_id, this.idx_text);\n      console.log(data);\n\n      if (data.code === 'tutorial') {\n        this.tutorial(data);\n        return;\n      }\n\n      if (data.code === 'specified' || data.code === 1) {\n        this.currentIndex = 0;\n        this.cure = data.cure;\n        this.currentCure = data.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        this.currentAudio.addEventListener('ended', currentAudioListner);\n        this.setState({\n          TTobaki: TTobak.ttobak1_1,\n          cureText: this.currentCure.cure_word,\n          totalNum: this.cure.length,\n          currentIndex: this.currentIndex + 1\n        });\n      }\n    };\n\n    this.daily = () => {\n      console.log(this.props.location.state.data);\n\n      if (this.props.location.state.data.code === 'tutorial') {\n        this.tutorial(this.props.location.state.data);\n        return;\n      }\n\n      this.cure = this.props.location.state.data.read;\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentCure.is_first = 'T';\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      this.currentAudio.addEventListener('ended', currentAudioListner);\n      this.setState({\n        totalNum: this.cure.length,\n        cureText: this.currentCure.cure_word,\n        currentIndex: this.currentIndex + 1\n      });\n    };\n\n    this.intro = data => {\n      this.read_voice = null;\n      this.read_voice = [new Audio(soundURL + data[0].voc_path)];\n      this.read_voice[0].addEventListener('ended', () => {\n        setTimeout(() => this.playSound(), 1000);\n      });\n      if (!!this.read_voice[0]) this.read_voice[0].play();\n    };\n\n    this.tutorial = data => {\n      this.setState({\n        cureText: data.sample_ques.cure_word,\n        gameState: 'tutorial'\n      });\n      this.currentCure = data.sample_ques;\n      this.tutorialAudio = new Audio(soundURL + this.currentCure.cure_path);\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      this.voice = [new Audio(soundURL + data.tut_voice[0].voc_path), new Audio(soundURL + data.tut_voice[1].voc_path), new Audio(soundURL + data.tut_voice[2].voc_path), new Audio(soundURL + data.tut_voice[3].voc_path), new Audio(soundURL + data.tut_voice[4].voc_path), new Audio(soundURL + data.tut_voice[5].voc_path)];\n      this.voice[0].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.tutorialAudio.play();\n        }, 1000);\n      });\n      this.tutorialAudio.addEventListener('ended', () => {\n        setTimeout(() => {\n          this.voice[1].play();\n        }, 1000);\n      });\n      this.voice[1].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.recording_start_sound.play();\n          this.setState({\n            isRecording: true,\n            RecordingCircle: true\n          });\n          this.setRecording = setInterval(() => {\n            this.setState({\n              RecordingCircle: !this.state.RecordingCircle\n            });\n          }, 500);\n          setTimeout(() => {\n            window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_word);\n          }, 200);\n        }, 800);\n      });\n\n      for (let i = 2; i < 5; i++) {\n        this.voice[i].addEventListener('ended', () => {\n          setTimeout(() => {\n            this.setState({\n              TTobaki: TTobak.ttobak3_1\n            });\n            setTimeout(() => {\n              if (!!this.currentAudio) {\n                this.playSound();\n                this.setState({\n                  TTobaki: TTobak.ttobak3_2,\n                  isPlaying: true\n                });\n              }\n            }, 1000);\n          }, 800);\n        });\n      }\n\n      this.voice[5].addEventListener('ended', () => {\n        setTimeout(() => {\n          if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n        }, 1000);\n      });\n      setTimeout(() => {\n        this.voice[0].play();\n      }, 1000);\n    };\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.stopRecording = e => {\n      console.log(e.detail);\n      clearInterval(this.setRecording);\n      this.recording_end_sound.play();\n      this.setState({\n        isRecording: false,\n        RecordingCircle: false\n      });\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      if (this.audioResult.status === 'Success') {\n        if (this.state.gameState === 'tutorial') {\n          if (this.audioResult.score < 85) {\n            this.voice[2].play();\n          } else if (this.audioResult.rhythm_score < 0) {\n            this.voice[3].play();\n          } else if (this.audioResult.speed_score < -5) {\n            this.voice[4].play();\n          } else {\n            this.voice[5].play();\n            this.setState({\n              gameState: false\n            });\n          }\n\n          return;\n        }\n\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const {\n          data\n        } = await T1_Api.answer(s_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score, this.learning_type === 'review' ? 'T' : 'F', this.currentCure.cure_id, this.idx_text, this.learning_type === 'daily' ? 'T' : 'F', this.currentCure.is_first);\n        console.log(data);\n\n        if (data.code === 1) {\n          if (data.retry) {\n            this.currentCure.is_first = 'F';\n            this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n            this.retryAudio.addEventListener('ended', () => {\n              this.setState({\n                TTobaki: TTobak.ttobak3_1\n              });\n              setTimeout(() => {\n                if (!!this.currentAudio) {\n                  this.currentAudio.play();\n                  this.setState({\n                    TTobaki: TTobak.ttobak3_2,\n                    isPlaying: true\n                  });\n                }\n              }, 3000);\n            });\n            setTimeout(() => {\n              if (!!this.retryAudio) {\n                this.retryAudio.play();\n                this.setState({\n                  TTobaki: TTobak.ttobak3_2\n                });\n              }\n            }, 1000);\n            return;\n          } else {\n            this.good_script = new Audio(soundURL + data.class_voice.voc_path);\n            this.good_script.addEventListener('ended', () => this.nextStep());\n            setTimeout(() => {\n              if (!!this.good_script) this.good_script.play();\n              this.setState({\n                TTobaki: TTobak.ttobak2_2\n              });\n            }, 1000);\n          }\n        } else if (data.code === 2) {\n          this.gameDone();\n        } else console.log(data.message);\n      } else {\n        console.log(this.audioResult.message);\n      }\n    };\n\n    this.nextStep = () => {\n      if (this.currentIndex < this.cure.length - 1) {\n        this.currentIndex++;\n      } else {\n        this.gameDone();\n        return;\n      }\n\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentCure.is_first = 'T';\n\n      if (!!this.currentAudio) {\n        this.currentAudio.remove();\n        this.currentAudio = null;\n      }\n\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      this.currentAudio.addEventListener('ended', currentAudioListner);\n      setTimeout(() => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1,\n          cureText: this.currentCure.cure_word,\n          currentIndex: this.currentIndex + 1\n        });\n      }, 2000);\n      setTimeout(() => {\n        this.playSound();\n      }, 4000);\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2,\n          isPlaying: true\n        });\n        this.currentAudio.play();\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.push('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true,\n                TTobaki: TTobak.ttobak1_1\n              });\n              clearTimeout(timeoutPreloading);\n              if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n\n      if (this.continuePlay) {\n        this.currentAudio.play();\n      }\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n\n      if (!!this.currentAudio && !this.currentAudio.paused) {\n        this.currentAudio.pause();\n        this.continuePlay = true;\n      }\n    };\n\n    this.onCompleteButtonHandle = () => {\n      if (this.state.isRecording) {\n        window.BRIDGE.requestStopRecording();\n      }\n    };\n\n    this.idx_text = match.params.type;\n    this.learning_type = match.params.learning_type;\n    this.recording_start_sound = new Audio(SoundEffect.recording_start);\n    this.recording_end_sound = new Audio(SoundEffect.recording_end);\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.retryAudio = null;\n    this.picture = {\n      T1,\n      TTobak\n    };\n    this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n    this.numOfLoadedImage = 0;\n    this.continuePlay = false;\n    this.state = inistState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n    window.addEventListener('android', this.androidResponse);\n    window.addEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentWillUnmount() {\n    if (this.state.isRecording) {\n      window.BRIDGE.requestStopRecording();\n    }\n\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio.remove();\n      this.currentAudio = null;\n    }\n\n    if (!!this.retryAudio) {\n      this.retryAudio.pause();\n      this.retryAudio.remove();\n      this.retryAudio = null;\n    }\n\n    if (!!this.voice) {\n      for (let i = 0; i < this.voice.length; i++) {\n        if (!!this.voice[i]) {\n          this.voice[i].pause();\n          this.voice[i].remove();\n          this.voice[i] = null;\n        }\n      }\n    }\n\n    window.removeEventListener('android', this.androidResponse);\n    window.removeEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentDidCatch(err, errorInfo) {\n    console.error(err);\n    this.setState(() => ({\n      err: true,\n      errorInfo: errorInfo\n    }));\n\n    if (process.env.NODE_ENV === 'production') {\n      Sentry.captureException(err, {\n        extra: errorInfo\n      });\n    }\n  }\n\n  render() {\n    const {\n      cureText,\n      TTobaki,\n      RecordingCircle,\n      isImageLoaded,\n      isPlaying,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (this.state.err) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 20\n        }\n      }, \"error\");\n    }\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(WordPresenter, {\n        Background: T1.t1_background,\n        TextBox: T1.t1_textbox,\n        bt_complete: T1.bt_complete,\n        TTobak: TTobaki,\n        isPlaying: isPlaying,\n        text: cureText,\n        RecordingCircle: RecordingCircle,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nWord.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Word));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T4_Word/WordContainer.js"],"names":["React","withRouter","PropTypes","connect","Sentry","WordPresenter","T1","TTobak","SoundEffect","T1_Api","soundURL","T_tutorial","LoadingComp","inistState","cureText","isRecording","TTobaki","ttobak1_1","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","isPlaying","RecordingCircle","err","errorInfo","currentAudioListner","setState","setTimeout","recording_start_sound","play","setRecording","setInterval","state","window","BRIDGE","recordAudio","props","user","student","gender","currentCure","cure_word","Word","Component","constructor","match","newRequest","console","log","s_id","data","ask","idx_text","code","tutorial","cure","is_first","currentAudio","Audio","cure_path","addEventListener","length","daily","location","read","intro","read_voice","voc_path","playSound","sample_ques","gameState","tutorialAudio","voice","tut_voice","i","ttobak3_1","ttobak3_2","learning_type","androidResponse","e","detail","audioResult","andriodListener","stopRecording","clearInterval","recording_end_sound","ttobak2_1","status","score","rhythm_score","speed_score","answer","phone_score","cure_id","retry","retryAudio","class_voice","good_script","nextStep","ttobak2_2","gameDone","message","remove","imagesPreloading","picture","timeoutPreloading","history","push","prop","img","Image","src","onload","numOfLoadedImage","totalImages","clearTimeout","onContinueButtonHandle","continuePlay","onRestartButtonHandle","onPauseButtonHandle","paused","pause","onCompleteButtonHandle","requestStopRecording","params","type","recording_start","recording_end","Object","keys","componentDidMount","u_id","componentWillUnmount","removeEventListener","componentDidCatch","error","process","env","NODE_ENV","captureException","extra","render","t1_background","t1_textbox","bt_complete","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,EAAT,EAAaC,MAAb,EAAqBC,WAArB,QAAwC,QAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,QAA6C,KAA7C;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,QAAQ,EAAE,IADK;AAEfC,EAAAA,WAAW,EAAE,KAFE;AAGfC,EAAAA,OAAO,EAAET,MAAM,CAACU,SAHD;AAIfC,EAAAA,aAAa,EAAE,KAJA;AAKfC,EAAAA,SAAS,EAAE,KALI;AAMfC,EAAAA,aAAa,EAAE,KANA;AAOfC,EAAAA,cAAc,EAAE,KAPD;AAQfC,EAAAA,OAAO,EAAE,CARM;AASfC,EAAAA,YAAY,EAAE,CATC;AAUfC,EAAAA,QAAQ,EAAE,CAVK;AAWfC,EAAAA,SAAS,EAAE,KAXI;AAYfC,EAAAA,eAAe,EAAE,KAZF;AAafC,EAAAA,GAAG,EAAE,KAbU;AAcfC,EAAAA,SAAS,EAAE;AAdI,CAAnB;;AAiBA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,OAAKC,QAAL,CAAc;AACVd,IAAAA,OAAO,EAAET,MAAM,CAACU,SADN;AAEVQ,IAAAA,SAAS,EAAE;AAFD,GAAd;AAIAM,EAAAA,UAAU,CAAC,MAAM;AACb,SAAKC,qBAAL,CAA2BC,IAA3B;AACA,SAAKH,QAAL,CAAc;AACVf,MAAAA,WAAW,EAAE,IADH;AAEVW,MAAAA,eAAe,EAAE;AAFP,KAAd;AAIA,SAAKQ,YAAL,GAAoBC,WAAW,CAAC,MAAM;AAClC,WAAKL,QAAL,CAAc;AACVJ,QAAAA,eAAe,EAAE,CAAC,KAAKU,KAAL,CAAWV;AADnB,OAAd;AAGH,KAJ8B,EAI5B,GAJ4B,CAA/B;AAKAK,IAAAA,UAAU,CAAC,MAAM;AACbM,MAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,MAAlD,EAA0D,KAAKC,WAAL,CAAiBC,SAA3E;AACH,KAFS,EAEP,GAFO,CAAV;AAGH,GAdS,EAcP,GAdO,CAAV;AAeH,CApBD;;AAsBA,MAAMC,IAAN,SAAmB9C,KAAK,CAAC+C,SAAzB,CAAmC;AAM/BC,EAAAA,WAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAY;AACnB;;AADmB,SAyEvBC,UAzEuB,GAyEV,YAAY;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAM;AAAEX,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,YAAMa,IAAI,GAAGZ,IAAI,CAACC,OAAL,CAAaW,IAA1B;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM7C,MAAM,CAAC8C,GAAP,CAAWF,IAAX,EAAiB,KAAKG,QAAtB,CAAvB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AAEA,UAAIA,IAAI,CAACG,IAAL,KAAc,UAAlB,EAA8B;AAC1B,aAAKC,QAAL,CAAcJ,IAAd;AACA;AACH;;AAED,UAAIA,IAAI,CAACG,IAAL,KAAc,WAAd,IAA6BH,IAAI,CAACG,IAAL,KAAc,CAA/C,EAAkD;AAC9C,aAAKlC,YAAL,GAAoB,CAApB;AACA,aAAKoC,IAAL,GAAYL,IAAI,CAACK,IAAjB;AACA,aAAKf,WAAL,GAAmBU,IAAI,CAACK,IAAL,CAAU,KAAKpC,YAAf,CAAnB;AACA,aAAKqB,WAAL,CAAiBgB,QAAjB,GAA4B,GAA5B;AACA,aAAKC,YAAL,GAAoB,IAAIC,KAAJ,CAAUpD,QAAQ,GAAG,KAAKkC,WAAL,CAAiBmB,SAAtC,CAApB;AACA,aAAKF,YAAL,CAAkBG,gBAAlB,CAAmC,OAAnC,EAA4CnC,mBAA5C;AAEA,aAAKC,QAAL,CAAc;AACVd,UAAAA,OAAO,EAAET,MAAM,CAACU,SADN;AAEVH,UAAAA,QAAQ,EAAE,KAAK8B,WAAL,CAAiBC,SAFjB;AAGVrB,UAAAA,QAAQ,EAAE,KAAKmC,IAAL,CAAUM,MAHV;AAIV1C,UAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAJxB,SAAd;AAMH;AACJ,KArGsB;;AAAA,SAuGvB2C,KAvGuB,GAuGf,MAAM;AACVf,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAW2B,QAAX,CAAoB/B,KAApB,CAA0BkB,IAAtC;;AAEA,UAAI,KAAKd,KAAL,CAAW2B,QAAX,CAAoB/B,KAApB,CAA0BkB,IAA1B,CAA+BG,IAA/B,KAAwC,UAA5C,EAAwD;AACpD,aAAKC,QAAL,CAAc,KAAKlB,KAAL,CAAW2B,QAAX,CAAoB/B,KAApB,CAA0BkB,IAAxC;AACA;AACH;;AAED,WAAKK,IAAL,GAAY,KAAKnB,KAAL,CAAW2B,QAAX,CAAoB/B,KAApB,CAA0BkB,IAA1B,CAA+Bc,IAA3C;AACA,WAAKxB,WAAL,GAAmB,KAAKe,IAAL,CAAU,KAAKpC,YAAf,CAAnB;AACA,WAAKqB,WAAL,CAAiBgB,QAAjB,GAA4B,GAA5B;AACA,WAAKC,YAAL,GAAoB,IAAIC,KAAJ,CAAUpD,QAAQ,GAAG,KAAKkC,WAAL,CAAiBmB,SAAtC,CAApB;AACA,WAAKF,YAAL,CAAkBG,gBAAlB,CAAmC,OAAnC,EAA4CnC,mBAA5C;AAEA,WAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,KAAKmC,IAAL,CAAUM,MADV;AAEVnD,QAAAA,QAAQ,EAAE,KAAK8B,WAAL,CAAiBC,SAFjB;AAGVtB,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAHxB,OAAd;AAKH,KA1HsB;;AAAA,SA4HvB8C,KA5HuB,GA4Hdf,IAAD,IAAU;AACd,WAAKgB,UAAL,GAAkB,IAAlB;AACA,WAAKA,UAAL,GAAkB,CACd,IAAIR,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAAC,CAAD,CAAJ,CAAQiB,QAA7B,CADc,CAAlB;AAIA,WAAKD,UAAL,CAAgB,CAAhB,EAAmBN,gBAAnB,CAAoC,OAApC,EAA6C,MAAM;AAC/CjC,QAAAA,UAAU,CAAC,MAAM,KAAKyC,SAAL,EAAP,EAAyB,IAAzB,CAAV;AACH,OAFD;AAIA,UAAI,CAAC,CAAC,KAAKF,UAAL,CAAgB,CAAhB,CAAN,EAA0B,KAAKA,UAAL,CAAgB,CAAhB,EAAmBrC,IAAnB;AAC7B,KAvIsB;;AAAA,SAyIvByB,QAzIuB,GAyIXJ,IAAD,IAAU;AACjB,WAAKxB,QAAL,CAAc;AACVhB,QAAAA,QAAQ,EAAEwC,IAAI,CAACmB,WAAL,CAAiB5B,SADjB;AAEV6B,QAAAA,SAAS,EAAE;AAFD,OAAd;AAKA,WAAK9B,WAAL,GAAmBU,IAAI,CAACmB,WAAxB;AACA,WAAKE,aAAL,GAAqB,IAAIb,KAAJ,CAAUpD,QAAQ,GAAG,KAAKkC,WAAL,CAAiBmB,SAAtC,CAArB;AACA,WAAKF,YAAL,GAAoB,IAAIC,KAAJ,CAAUpD,QAAQ,GAAG,KAAKkC,WAAL,CAAiBmB,SAAtC,CAApB;AACA,WAAKa,KAAL,GAAa,CACT,IAAId,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAACuB,SAAL,CAAe,CAAf,EAAkBN,QAAvC,CADS,EAET,IAAIT,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAACuB,SAAL,CAAe,CAAf,EAAkBN,QAAvC,CAFS,EAGT,IAAIT,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAACuB,SAAL,CAAe,CAAf,EAAkBN,QAAvC,CAHS,EAIT,IAAIT,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAACuB,SAAL,CAAe,CAAf,EAAkBN,QAAvC,CAJS,EAKT,IAAIT,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAACuB,SAAL,CAAe,CAAf,EAAkBN,QAAvC,CALS,EAMT,IAAIT,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAACuB,SAAL,CAAe,CAAf,EAAkBN,QAAvC,CANS,CAAb;AASA,WAAKK,KAAL,CAAW,CAAX,EAAcZ,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CjC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAK4C,aAAL,CAAmB1C,IAAnB;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAJD;AAMA,WAAK0C,aAAL,CAAmBX,gBAAnB,CAAoC,OAApC,EAA6C,MAAM;AAC/CjC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAK6C,KAAL,CAAW,CAAX,EAAc3C,IAAd;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAJD;AAMA,WAAK2C,KAAL,CAAW,CAAX,EAAcZ,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CjC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKC,qBAAL,CAA2BC,IAA3B;AACA,eAAKH,QAAL,CAAc;AACVf,YAAAA,WAAW,EAAE,IADH;AAEVW,YAAAA,eAAe,EAAE;AAFP,WAAd;AAIA,eAAKQ,YAAL,GAAoBC,WAAW,CAAC,MAAM;AAClC,iBAAKL,QAAL,CAAc;AACVJ,cAAAA,eAAe,EAAE,CAAC,KAAKU,KAAL,CAAWV;AADnB,aAAd;AAGH,WAJ8B,EAI5B,GAJ4B,CAA/B;AAKAK,UAAAA,UAAU,CAAC,MAAM;AACbM,YAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA0B,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,MAAlD,EAA0D,KAAKC,WAAL,CAAiBC,SAA3E;AACH,WAFS,EAEP,GAFO,CAAV;AAGH,SAdS,EAcP,GAdO,CAAV;AAeH,OAhBD;;AAkBA,WAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,aAAKF,KAAL,CAAWE,CAAX,EAAcd,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CjC,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKD,QAAL,CAAc;AACVd,cAAAA,OAAO,EAAET,MAAM,CAACwE;AADN,aAAd;AAGAhD,YAAAA,UAAU,CAAC,MAAM;AACb,kBAAI,CAAC,CAAC,KAAK8B,YAAX,EAAyB;AACrB,qBAAKW,SAAL;AACA,qBAAK1C,QAAL,CAAc;AACVd,kBAAAA,OAAO,EAAET,MAAM,CAACyE,SADN;AAEVvD,kBAAAA,SAAS,EAAE;AAFD,iBAAd;AAIH;AACJ,aARS,EAQP,IARO,CAAV;AASH,WAbS,EAaP,GAbO,CAAV;AAcH,SAfD;AAgBH;;AAED,WAAKmD,KAAL,CAAW,CAAX,EAAcZ,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC1CjC,QAAAA,UAAU,CAAC,MAAM;AACb,cAAI,KAAKkD,aAAL,KAAuB,OAA3B,EAAoC,KAAK/B,UAAL,GAApC,KACK,KAAKgB,KAAL;AACR,SAHS,EAGP,IAHO,CAAV;AAIH,OALD;AAOAnC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAK6C,KAAL,CAAW,CAAX,EAAc3C,IAAd;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAtNsB;;AAAA,SAwNvBiD,eAxNuB,GAwNL,MAAOC,CAAP,IAAa;AAC3BhC,MAAAA,OAAO,CAACC,GAAR,CAAY+B,CAAC,CAACC,MAAd;AACA,WAAKC,WAAL,GAAmBF,CAAC,CAACC,MAArB;AACA,WAAKE,eAAL;AACH,KA5NsB;;AAAA,SA8NvBC,aA9NuB,GA8NNJ,CAAD,IAAO;AACnBhC,MAAAA,OAAO,CAACC,GAAR,CAAY+B,CAAC,CAACC,MAAd;AACAI,MAAAA,aAAa,CAAC,KAAKtD,YAAN,CAAb;AACA,WAAKuD,mBAAL,CAAyBxD,IAAzB;AACA,WAAKH,QAAL,CAAc;AACVf,QAAAA,WAAW,EAAE,KADH;AAEVW,QAAAA,eAAe,EAAE;AAFP,OAAd;AAIH,KAtOsB;;AAAA,SAwOvB4D,eAxOuB,GAwOL,YAAY;AAC1B,WAAKxD,QAAL,CAAc;AACVd,QAAAA,OAAO,EAAET,MAAM,CAACmF;AADN,OAAd;;AAIA,UAAI,KAAKL,WAAL,CAAiBM,MAAjB,KAA4B,SAAhC,EAA2C;AACvC,YAAI,KAAKvD,KAAL,CAAWsC,SAAX,KAAyB,UAA7B,EAAyC;AACrC,cAAI,KAAKW,WAAL,CAAiBO,KAAjB,GAAyB,EAA7B,EAAiC;AAC7B,iBAAKhB,KAAL,CAAW,CAAX,EAAc3C,IAAd;AACH,WAFD,MAEO,IAAI,KAAKoD,WAAL,CAAiBQ,YAAjB,GAAgC,CAApC,EAAuC;AAC1C,iBAAKjB,KAAL,CAAW,CAAX,EAAc3C,IAAd;AACH,WAFM,MAEA,IAAI,KAAKoD,WAAL,CAAiBS,WAAjB,GAA+B,CAAC,CAApC,EAAuC;AAC1C,iBAAKlB,KAAL,CAAW,CAAX,EAAc3C,IAAd;AACH,WAFM,MAEA;AACH,iBAAK2C,KAAL,CAAW,CAAX,EAAc3C,IAAd;AACA,iBAAKH,QAAL,CAAc;AACV4C,cAAAA,SAAS,EAAE;AADD,aAAd;AAGH;;AACD;AACH;;AAED,cAAM;AAAEjC,UAAAA;AAAF,YAAW,KAAKD,KAAtB;AACA,cAAMa,IAAI,GAAGZ,IAAI,CAACC,OAAL,CAAaW,IAA1B;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAM7C,MAAM,CAACsF,MAAP,CACnB1C,IADmB,EAEnB,KAAKgC,WAAL,CAAiBO,KAFE,EAGnB,KAAKP,WAAL,CAAiBW,WAHE,EAInB,KAAKX,WAAL,CAAiBS,WAJE,EAKnB,KAAKT,WAAL,CAAiBQ,YALE,EAMnB,KAAKZ,aAAL,KAAuB,QAAvB,GAAkC,GAAlC,GAAwC,GANrB,EAOnB,KAAKrC,WAAL,CAAiBqD,OAPE,EAQnB,KAAKzC,QARc,EASnB,KAAKyB,aAAL,KAAuB,OAAvB,GAAiC,GAAjC,GAAuC,GATpB,EAUnB,KAAKrC,WAAL,CAAiBgB,QAVE,CAAvB;AAYAT,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AAEA,YAAIA,IAAI,CAACG,IAAL,KAAc,CAAlB,EAAqB;AACjB,cAAIH,IAAI,CAAC4C,KAAT,EAAgB;AACZ,iBAAKtD,WAAL,CAAiBgB,QAAjB,GAA4B,GAA5B;AACA,iBAAKuC,UAAL,GAAkB,IAAIrC,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAAC8C,WAAL,CAAiB7B,QAAtC,CAAlB;AACA,iBAAK4B,UAAL,CAAgBnC,gBAAhB,CAAiC,OAAjC,EAA0C,MAAM;AAC5C,mBAAKlC,QAAL,CAAc;AACVd,gBAAAA,OAAO,EAAET,MAAM,CAACwE;AADN,eAAd;AAGAhD,cAAAA,UAAU,CAAC,MAAM;AACb,oBAAI,CAAC,CAAC,KAAK8B,YAAX,EAAyB;AACrB,uBAAKA,YAAL,CAAkB5B,IAAlB;AACA,uBAAKH,QAAL,CAAc;AACVd,oBAAAA,OAAO,EAAET,MAAM,CAACyE,SADN;AAEVvD,oBAAAA,SAAS,EAAE;AAFD,mBAAd;AAIH;AACJ,eARS,EAQP,IARO,CAAV;AASH,aAbD;AAeAM,YAAAA,UAAU,CAAC,MAAM;AACb,kBAAI,CAAC,CAAC,KAAKoE,UAAX,EAAuB;AACnB,qBAAKA,UAAL,CAAgBlE,IAAhB;AACA,qBAAKH,QAAL,CAAc;AACVd,kBAAAA,OAAO,EAAET,MAAM,CAACyE;AADN,iBAAd;AAGH;AACJ,aAPS,EAOP,IAPO,CAAV;AAQA;AACH,WA3BD,MA2BO;AACH,iBAAKqB,WAAL,GAAmB,IAAIvC,KAAJ,CAAUpD,QAAQ,GAAG4C,IAAI,CAAC8C,WAAL,CAAiB7B,QAAtC,CAAnB;AACA,iBAAK8B,WAAL,CAAiBrC,gBAAjB,CAAkC,OAAlC,EAA2C,MAAM,KAAKsC,QAAL,EAAjD;AACAvE,YAAAA,UAAU,CAAC,MAAM;AACb,kBAAI,CAAC,CAAC,KAAKsE,WAAX,EAAwB,KAAKA,WAAL,CAAiBpE,IAAjB;AACxB,mBAAKH,QAAL,CAAc;AACVd,gBAAAA,OAAO,EAAET,MAAM,CAACgG;AADN,eAAd;AAGH,aALS,EAKP,IALO,CAAV;AAMH;AAEJ,SAvCD,MAuCO,IAAIjD,IAAI,CAACG,IAAL,KAAc,CAAlB,EAAqB;AACxB,eAAK+C,QAAL;AACH,SAFM,MAGFrD,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACmD,OAAjB;AAER,OA7ED,MA6EO;AACHtD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKiC,WAAL,CAAiBoB,OAA7B;AACH;AACJ,KA7TsB;;AAAA,SA+TvBH,QA/TuB,GA+TZ,MAAM;AACb,UAAI,KAAK/E,YAAL,GAAoB,KAAKoC,IAAL,CAAUM,MAAV,GAAmB,CAA3C,EAA8C;AAC1C,aAAK1C,YAAL;AACH,OAFD,MAEO;AACH,aAAKiF,QAAL;AACA;AACH;;AACD,WAAK5D,WAAL,GAAmB,KAAKe,IAAL,CAAU,KAAKpC,YAAf,CAAnB;AACA,WAAKqB,WAAL,CAAiBgB,QAAjB,GAA4B,GAA5B;;AACA,UAAI,CAAC,CAAC,KAAKC,YAAX,EAAyB;AACrB,aAAKA,YAAL,CAAkB6C,MAAlB;AACA,aAAK7C,YAAL,GAAoB,IAApB;AACH;;AACD,WAAKA,YAAL,GAAoB,IAAIC,KAAJ,CAAUpD,QAAQ,GAAG,KAAKkC,WAAL,CAAiBmB,SAAtC,CAApB;AACA,WAAKF,YAAL,CAAkBG,gBAAlB,CAAmC,OAAnC,EAA4CnC,mBAA5C;AAEAE,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKD,QAAL,CAAc;AACVd,UAAAA,OAAO,EAAET,MAAM,CAACU,SADN;AAEVH,UAAAA,QAAQ,EAAE,KAAK8B,WAAL,CAAiBC,SAFjB;AAGVtB,UAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAHxB,SAAd;AAKH,OANS,EAMP,IANO,CAAV;AAQAQ,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKyC,SAAL;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KA1VsB;;AAAA,SA4VvBA,SA5VuB,GA4VX,MAAM;AACd,UAAI,CAAC,CAAC,KAAKX,YAAX,EAAyB;AACrB,aAAK/B,QAAL,CAAc;AACVd,UAAAA,OAAO,EAAET,MAAM,CAACyE,SADN;AAEVvD,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIA,aAAKoC,YAAL,CAAkB5B,IAAlB;AACH;AACJ,KApWsB;;AAAA,SAsWvBuE,QAtWuB,GAsWZ,MAAM;AACbrD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,UAAI,KAAK6B,aAAL,KAAuB,OAA3B,EAAoC;AAChC,aAAKnD,QAAL,CAAc;AACVV,UAAAA,aAAa,EAAE;AADL,SAAd;AAGH,OAJD,MAIO;AACH,aAAKU,QAAL,CAAc;AACVT,UAAAA,cAAc,EAAE;AADN,SAAd;AAGH;AACJ,KAjXsB;;AAAA,SAmXvBsF,gBAnXuB,GAmXHC,OAAD,IAAa;AAC5B,UAAIC,iBAAiB,GAAG9E,UAAU,CAAC,MAAM;AACrC,aAAKS,KAAL,CAAWsE,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,OAFiC,EAE/B,KAF+B,CAAlC;;AAIA,WAAK,IAAIjC,CAAT,IAAc8B,OAAd,EAAuB;AACnB,aAAK,IAAII,IAAT,IAAiBJ,OAAO,CAAC9B,CAAD,CAAxB,EAA6B;AACzB,cAAImC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,UAAAA,GAAG,CAACE,GAAJ,GAAUP,OAAO,CAAC9B,CAAD,CAAP,CAAWkC,IAAX,CAAV;;AACAC,UAAAA,GAAG,CAACG,MAAJ,GAAa,MAAM;AACf,iBAAKtF,QAAL,CAAc;AACVR,cAAAA,OAAO,EAAG,EAAE,KAAK+F,gBAAP,GAA0B,KAAKC,WAAhC,GAA+C;AAD9C,aAAd;;AAGA,gBAAI,KAAKD,gBAAL,KAA0B,KAAKC,WAAnC,EAAgD;AAC5C,mBAAKxF,QAAL,CAAc;AACVZ,gBAAAA,aAAa,EAAE,IADL;AAEVF,gBAAAA,OAAO,EAAET,MAAM,CAACU;AAFN,eAAd;AAIAsG,cAAAA,YAAY,CAACV,iBAAD,CAAZ;AACA,kBAAI,KAAK5B,aAAL,KAAuB,OAA3B,EAAoC,KAAK/B,UAAL,GAApC,KACK,KAAKgB,KAAL;AACR;AACJ,WAbD;AAcH;AACJ;AACJ,KA5YsB;;AAAA,SA8YvBsD,sBA9YuB,GA8YE,MAAM;AAC3B,WAAK1F,QAAL,CAAc;AACVX,QAAAA,SAAS,EAAE;AADD,OAAd;;AAIA,UAAI,KAAKsG,YAAT,EAAuB;AACnB,aAAK5D,YAAL,CAAkB5B,IAAlB;AACH;AACJ,KAtZsB;;AAAA,SAwZvByF,qBAxZuB,GAwZC,MAAM;AAC1B,WAAK5F,QAAL,CAAc;AACVV,QAAAA,aAAa,EAAE;AADL,OAAd;AAGA,WAAK8B,UAAL;AACAnB,MAAAA,UAAU,CAAC,MAAM,KAAKyC,SAAL,EAAP,EAAyB,IAAzB,CAAV;AACH,KA9ZsB;;AAAA,SAgavBmD,mBAhauB,GAgaD,MAAM;AACxB,WAAK7F,QAAL,CAAc;AACVX,QAAAA,SAAS,EAAE;AADD,OAAd;;AAIA,UAAI,CAAC,CAAC,KAAK0C,YAAP,IAAuB,CAAC,KAAKA,YAAL,CAAkB+D,MAA9C,EAAsD;AAClD,aAAK/D,YAAL,CAAkBgE,KAAlB;AACA,aAAKJ,YAAL,GAAoB,IAApB;AACH;AACJ,KAzasB;;AAAA,SA2avBK,sBA3auB,GA2aE,MAAM;AAC3B,UAAI,KAAK1F,KAAL,CAAWrB,WAAf,EAA4B;AACxBsB,QAAAA,MAAM,CAACC,MAAP,CAAcyF,oBAAd;AACH;AACJ,KA/asB;;AAEnB,SAAKvE,QAAL,GAAgBP,KAAK,CAAC+E,MAAN,CAAaC,IAA7B;AACA,SAAKhD,aAAL,GAAqBhC,KAAK,CAAC+E,MAAN,CAAa/C,aAAlC;AACA,SAAKjD,qBAAL,GAA6B,IAAI8B,KAAJ,CAAUtD,WAAW,CAAC0H,eAAtB,CAA7B;AACA,SAAKzC,mBAAL,GAA2B,IAAI3B,KAAJ,CAAUtD,WAAW,CAAC2H,aAAtB,CAA3B;AACA,SAAKxE,IAAL,GAAY,IAAZ;AACA,SAAKf,WAAL,GAAmB,IAAnB;AACA,SAAKrB,YAAL,GAAoB,CAApB;AACA,SAAKsC,YAAL,GAAoB,IAApB;AACA,SAAKwB,WAAL,GAAmB,IAAnB;AACA,SAAKc,UAAL,GAAkB,IAAlB;AACA,SAAKS,OAAL,GAAe;AAAEtG,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAf;AACA,SAAK+G,WAAL,GAAmBc,MAAM,CAACC,IAAP,CAAY,KAAKzB,OAAL,CAAatG,EAAzB,EAA6B2D,MAA7B,GAAsCmE,MAAM,CAACC,IAAP,CAAY,KAAKzB,OAAL,CAAarG,MAAzB,EAAiC0D,MAA1F;AACA,SAAKoD,gBAAL,GAAwB,CAAxB;AACA,SAAKI,YAAL,GAAoB,KAApB;AACA,SAAKrF,KAAL,GAAavB,UAAb;AACH;;AAED,QAAMyH,iBAAN,GAA0B;AACtB,UAAM;AAAE7F,MAAAA;AAAF,QAAW,KAAKD,KAAtB;;AAEA,QAAI,CAACC,IAAI,CAACA,IAAL,CAAU8F,IAAX,IAAmB,CAAC9F,IAAI,CAACC,OAAL,CAAaW,IAArC,EAA2C;AACvC,WAAKb,KAAL,CAAWsE,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACA;AACH;;AAED,SAAKJ,gBAAL,CAAsB,KAAKC,OAA3B;AAEAvE,IAAAA,MAAM,CAAC2B,gBAAP,CAAwB,SAAxB,EAAmC,KAAKkB,eAAxC;AACA7C,IAAAA,MAAM,CAAC2B,gBAAP,CAAwB,sBAAxB,EAAgD,KAAKuB,aAArD;AACH;;AAEDiD,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKpG,KAAL,CAAWrB,WAAf,EAA4B;AACxBsB,MAAAA,MAAM,CAACC,MAAP,CAAcyF,oBAAd;AACH;;AACD,QAAI,CAAC,CAAC,KAAKlE,YAAX,EAAyB;AACrB,WAAKA,YAAL,CAAkBgE,KAAlB;AACA,WAAKhE,YAAL,CAAkB6C,MAAlB;AACA,WAAK7C,YAAL,GAAoB,IAApB;AACH;;AACD,QAAI,CAAC,CAAC,KAAKsC,UAAX,EAAuB;AACnB,WAAKA,UAAL,CAAgB0B,KAAhB;AACA,WAAK1B,UAAL,CAAgBO,MAAhB;AACA,WAAKP,UAAL,GAAkB,IAAlB;AACH;;AAED,QAAI,CAAC,CAAC,KAAKvB,KAAX,EAAkB;AACd,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,KAAL,CAAWX,MAA/B,EAAuCa,CAAC,EAAxC,EAA4C;AACxC,YAAI,CAAC,CAAC,KAAKF,KAAL,CAAWE,CAAX,CAAN,EAAqB;AACjB,eAAKF,KAAL,CAAWE,CAAX,EAAc+C,KAAd;AACA,eAAKjD,KAAL,CAAWE,CAAX,EAAc4B,MAAd;AACA,eAAK9B,KAAL,CAAWE,CAAX,IAAgB,IAAhB;AACH;AACJ;AACJ;;AACDzC,IAAAA,MAAM,CAACoG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKvD,eAA3C;AACA7C,IAAAA,MAAM,CAACoG,mBAAP,CAA2B,sBAA3B,EAAmD,KAAKlD,aAAxD;AACH;;AAEDmD,EAAAA,iBAAiB,CAAC/G,GAAD,EAAMC,SAAN,EAAiB;AAC9BuB,IAAAA,OAAO,CAACwF,KAAR,CAAchH,GAAd;AACA,SAAKG,QAAL,CAAc,OAAO;AACjBH,MAAAA,GAAG,EAAE,IADY;AAEjBC,MAAAA,SAAS,EAAEA;AAFM,KAAP,CAAd;;AAKA,QAAIgH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC1I,MAAAA,MAAM,CAAC2I,gBAAP,CAAwBpH,GAAxB,EAA6B;AAAEqH,QAAAA,KAAK,EAAEpH;AAAT,OAA7B;AACH;AACJ;;AA0WDqH,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnI,MAAAA,QAAF;AAAYE,MAAAA,OAAZ;AAAqBU,MAAAA,eAArB;AAAsCR,MAAAA,aAAtC;AAAqDO,MAAAA,SAArD;AACFN,MAAAA,SADE;AACSC,MAAAA,aADT;AACwBC,MAAAA,cADxB;AACwCC,MAAAA,OADxC;AAEFC,MAAAA,YAFE;AAEYC,MAAAA;AAFZ,QAEyB,KAAKY,KAFpC;;AAIA,QAAI,KAAKA,KAAL,CAAWT,GAAf,EAAoB;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;;AAED,QAAIT,aAAJ,EAAmB;AACf,0BAAQ,oBAAC,aAAD;AACJ,QAAA,UAAU,EAAEZ,EAAE,CAAC4I,aADX;AAC0B,QAAA,OAAO,EAAE5I,EAAE,CAAC6I,UADtC;AACkD,QAAA,WAAW,EAAE7I,EAAE,CAAC8I,WADlE;AAEJ,QAAA,MAAM,EAAEpI,OAFJ;AAEa,QAAA,SAAS,EAAES,SAFxB;AAGJ,QAAA,IAAI,EAAEX,QAHF;AAGY,QAAA,eAAe,EAAEY,eAH7B;AAIJ,QAAA,sBAAsB,EAAE,KAAKoG,sBAJzB;AAKJ,QAAA,sBAAsB,EAAE,KAAKN,sBALzB;AAMJ,QAAA,qBAAqB,EAAE,KAAKE,qBANxB;AAOJ,QAAA,mBAAmB,EAAE,KAAKC,mBAPtB;AAQJ,QAAA,SAAS,EAAExG,SARP;AASJ,QAAA,cAAc,EAAEE,cATZ;AAUJ,QAAA,aAAa,EAAED,aAVX;AAWJ,QAAA,YAAY,EAAEG,YAXV;AAYJ,QAAA,QAAQ,EAAEC,QAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAcH,KAfD,MAgBK;AACD,0BAAO,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAnd8B;;AAA7BwB,I,CACKuG,S,GAAY;AACf5G,EAAAA,IAAI,EAAEvC,SAAS,CAACoJ,QAAV,CAAmBpJ,SAAS,CAACqJ,GAA7B,EAAkCC,UADzB;AAEfC,EAAAA,QAAQ,EAAEvJ,SAAS,CAACwJ,IAAV,CAAeF;AAFV,C;;AAqdvB,SAASG,eAAT,CAAyBvH,KAAzB,EAAgC;AAC5B,SAAO;AAAEK,IAAAA,IAAI,EAAEL,KAAK,CAACK;AAAd,GAAP;AACH;;AAED,eAAetC,OAAO,CAACwJ,eAAD,CAAP,CAAyB1J,UAAU,CAAC6C,IAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport WordPresenter from './WordPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL, T_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nconst inistState = {\n    cureText: null,\n    isRecording: false,\n    TTobaki: TTobak.ttobak1_1,\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n    isPlaying: false,\n    RecordingCircle: false,\n    err: false,\n    errorInfo: false,\n};\n\nconst currentAudioListner = () => {\n    this.setState({\n        TTobaki: TTobak.ttobak1_1,\n        isPlaying: false,\n    });\n    setTimeout(() => {\n        this.recording_start_sound.play();\n        this.setState({\n            isRecording: true,\n            RecordingCircle: true,\n        })\n        this.setRecording = setInterval(() => {\n            this.setState({\n                RecordingCircle: !this.state.RecordingCircle,\n            });\n        }, 500);\n        setTimeout(() => {\n            window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_word);\n        }, 200);\n    }, 800);\n};\n\nclass Word extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match }) {\n        super();\n        this.idx_text = match.params.type;\n        this.learning_type = match.params.learning_type;\n        this.recording_start_sound = new Audio(SoundEffect.recording_start);\n        this.recording_end_sound = new Audio(SoundEffect.recording_end);\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n        this.retryAudio = null;\n        this.picture = { T1, TTobak };\n        this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n        this.numOfLoadedImage = 0;\n        this.continuePlay = false;\n        this.state = inistState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener('android', this.androidResponse);\n        window.addEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentWillUnmount() {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio.remove();\n            this.currentAudio = null;\n        }\n        if (!!this.retryAudio) {\n            this.retryAudio.pause();\n            this.retryAudio.remove();\n            this.retryAudio = null;\n        }\n\n        if (!!this.voice) {\n            for (let i = 0; i < this.voice.length; i++) {\n                if (!!this.voice[i]) {\n                    this.voice[i].pause();\n                    this.voice[i].remove();\n                    this.voice[i] = null;\n                }\n            }\n        }\n        window.removeEventListener('android', this.androidResponse);\n        window.removeEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentDidCatch(err, errorInfo) {\n        console.error(err);\n        this.setState(() => ({\n            err: true,\n            errorInfo: errorInfo,\n        }));\n\n        if (process.env.NODE_ENV === 'production') {\n            Sentry.captureException(err, { extra: errorInfo });\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { data } = await T1_Api.ask(s_id, this.idx_text);\n        console.log(data);\n\n        if (data.code === 'tutorial') {\n            this.tutorial(data);\n            return;\n        }\n\n        if (data.code === 'specified' || data.code === 1) {\n            this.currentIndex = 0;\n            this.cure = data.cure;\n            this.currentCure = data.cure[this.currentIndex];\n            this.currentCure.is_first = 'T';\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            this.currentAudio.addEventListener('ended', currentAudioListner);\n\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_word,\n                totalNum: this.cure.length,\n                currentIndex: this.currentIndex + 1,\n            });\n        }\n    }\n\n    daily = () => {\n        console.log(this.props.location.state.data);\n\n        if (this.props.location.state.data.code === 'tutorial') {\n            this.tutorial(this.props.location.state.data);\n            return;\n        }\n\n        this.cure = this.props.location.state.data.read;\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        this.currentAudio.addEventListener('ended', currentAudioListner);\n\n        this.setState({\n            totalNum: this.cure.length,\n            cureText: this.currentCure.cure_word,\n            currentIndex: this.currentIndex + 1,\n        });\n    }\n\n    intro = (data) => {\n        this.read_voice = null;\n        this.read_voice = [\n            new Audio(soundURL + data[0].voc_path),\n        ];\n\n        this.read_voice[0].addEventListener('ended', () => {\n            setTimeout(() => this.playSound(), 1000);\n        });\n\n        if (!!this.read_voice[0]) this.read_voice[0].play();\n    }\n\n    tutorial = (data) => {\n        this.setState({\n            cureText: data.sample_ques.cure_word,\n            gameState: 'tutorial',\n        });\n\n        this.currentCure = data.sample_ques;\n        this.tutorialAudio = new Audio(soundURL + this.currentCure.cure_path);\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        this.voice = [\n            new Audio(soundURL + data.tut_voice[0].voc_path),\n            new Audio(soundURL + data.tut_voice[1].voc_path),\n            new Audio(soundURL + data.tut_voice[2].voc_path),\n            new Audio(soundURL + data.tut_voice[3].voc_path),\n            new Audio(soundURL + data.tut_voice[4].voc_path),\n            new Audio(soundURL + data.tut_voice[5].voc_path),\n        ];\n\n        this.voice[0].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.tutorialAudio.play();\n            }, 1000);\n        });\n\n        this.tutorialAudio.addEventListener('ended', () => {\n            setTimeout(() => {\n                this.voice[1].play();\n            }, 1000);\n        });\n\n        this.voice[1].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.recording_start_sound.play();\n                this.setState({\n                    isRecording: true,\n                    RecordingCircle: true,\n                })\n                this.setRecording = setInterval(() => {\n                    this.setState({\n                        RecordingCircle: !this.state.RecordingCircle,\n                    });\n                }, 500);\n                setTimeout(() => {\n                    window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_word);\n                }, 200);\n            }, 800);\n        });\n\n        for (let i = 2; i < 5; i++) {\n            this.voice[i].addEventListener('ended', () => {\n                setTimeout(() => {\n                    this.setState({\n                        TTobaki: TTobak.ttobak3_1,\n                    })\n                    setTimeout(() => {\n                        if (!!this.currentAudio) {\n                            this.playSound();\n                            this.setState({\n                                TTobaki: TTobak.ttobak3_2,\n                                isPlaying: true,\n                            })\n                        }\n                    }, 1000);\n                }, 800);\n            })\n        }\n\n        this.voice[5].addEventListener('ended', () => {\n            setTimeout(() => {\n                if (this.learning_type !== 'daily') this.newRequest();\n                else this.daily();\n            }, 1000);\n        })\n\n        setTimeout(() => {\n            this.voice[0].play();\n        }, 1000);\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    stopRecording = (e) => {\n        console.log(e.detail);\n        clearInterval(this.setRecording);\n        this.recording_end_sound.play();\n        this.setState({\n            isRecording: false,\n            RecordingCircle: false,\n        });\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        if (this.audioResult.status === 'Success') {\n            if (this.state.gameState === 'tutorial') {\n                if (this.audioResult.score < 85) {\n                    this.voice[2].play();\n                } else if (this.audioResult.rhythm_score < 0) {\n                    this.voice[3].play();\n                } else if (this.audioResult.speed_score < -5) {\n                    this.voice[4].play();\n                } else {\n                    this.voice[5].play();\n                    this.setState({\n                        gameState: false,\n                    })\n                }\n                return;\n            }\n\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const { data } = await T1_Api.answer(\n                s_id,\n                this.audioResult.score,\n                this.audioResult.phone_score,\n                this.audioResult.speed_score,\n                this.audioResult.rhythm_score,\n                this.learning_type === 'review' ? 'T' : 'F',\n                this.currentCure.cure_id,\n                this.idx_text,\n                this.learning_type === 'daily' ? 'T' : 'F',\n                this.currentCure.is_first\n            );\n            console.log(data);\n\n            if (data.code === 1) {\n                if (data.retry) {\n                    this.currentCure.is_first = 'F';\n                    this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n                    this.retryAudio.addEventListener('ended', () => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak3_1,\n                        })\n                        setTimeout(() => {\n                            if (!!this.currentAudio) {\n                                this.currentAudio.play();\n                                this.setState({\n                                    TTobaki: TTobak.ttobak3_2,\n                                    isPlaying: true,\n                                })\n                            }\n                        }, 3000);\n                    });\n\n                    setTimeout(() => {\n                        if (!!this.retryAudio) {\n                            this.retryAudio.play();\n                            this.setState({\n                                TTobaki: TTobak.ttobak3_2,\n                            });\n                        }\n                    }, 1000);\n                    return;\n                } else {\n                    this.good_script = new Audio(soundURL + data.class_voice.voc_path);\n                    this.good_script.addEventListener('ended', () => this.nextStep());\n                    setTimeout(() => {\n                        if (!!this.good_script) this.good_script.play();\n                        this.setState({\n                            TTobaki: TTobak.ttobak2_2,\n                        });\n                    }, 1000);\n                }\n\n            } else if (data.code === 2) {\n                this.gameDone();\n            }\n            else console.log(data.message);\n\n        } else {\n            console.log(this.audioResult.message);\n        }\n    }\n\n    nextStep = () => {\n        if (this.currentIndex < this.cure.length - 1) {\n            this.currentIndex++;\n        } else {\n            this.gameDone();\n            return;\n        }\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        if (!!this.currentAudio) {\n            this.currentAudio.remove();\n            this.currentAudio = null;\n        }\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        this.currentAudio.addEventListener('ended', currentAudioListner);\n\n        setTimeout(() => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_word,\n                currentIndex: this.currentIndex + 1\n            });\n        }, 2000);\n\n        setTimeout(() => {\n            this.playSound();\n        }, 4000);\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n                isPlaying: true,\n            });\n            this.currentAudio.play();\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.push('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                            TTobaki: TTobak.ttobak1_1,\n                        });\n                        clearTimeout(timeoutPreloading);\n                        if (this.learning_type !== 'daily') this.newRequest();\n                        else this.daily();\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        });\n\n        if (this.continuePlay) {\n            this.currentAudio.play();\n        }\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        });\n\n        if (!!this.currentAudio && !this.currentAudio.paused) {\n            this.currentAudio.pause();\n            this.continuePlay = true;\n        }\n    }\n\n    onCompleteButtonHandle = () => {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n    }\n\n    render() {\n        const { cureText, TTobaki, RecordingCircle, isImageLoaded, isPlaying,\n            showPopup, showDonePopup, showDailyPopup, percent,\n            currentIndex, totalNum } = this.state;\n\n        if (this.state.err) {\n            return <div>error</div>;\n        }\n\n        if (isImageLoaded) {\n            return (<WordPresenter\n                Background={T1.t1_background} TextBox={T1.t1_textbox} bt_complete={T1.bt_complete}\n                TTobak={TTobaki} isPlaying={isPlaying}\n                text={cureText} RecordingCircle={RecordingCircle}\n                onCompleteButtonHandle={this.onCompleteButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Word));"]},"metadata":{},"sourceType":"module"}