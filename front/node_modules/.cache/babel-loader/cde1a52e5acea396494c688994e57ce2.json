{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T6_ConsoMatch/ConsoMatchContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ConsoMatchPresenter from './ConsoMatchPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport { T6, Characters } from 'images';\nimport { T_Api4, soundURL } from 'api';\n\nclass ConsoMatch extends React.Component {\n  constructor({\n    match,\n    location\n  }) {\n    super();\n\n    this.getListFilter = (key, value) => {\n      return this.cure.filter(object => {\n        return object[key] === value;\n      })[0];\n    };\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await T_Api4.ask(s_id);\n        console.log(data);\n\n        if (data.code === 'specified' || data.code === 1) {\n          this.currentIndex = 0;\n          this.answer = data.answer;\n          this.cure = data.cure;\n          this.totalImages += this.cure.length;\n          this.pictursPreloading(this.cure);\n          this.setCurrent(0);\n          this.setState({\n            totalNum: this.cure.length\n          });\n        } else console.log('data message: ' + data.message);\n      } catch (e) {\n        console.log('error: ' + e);\n      }\n    };\n\n    this.setCurrent = timeout => {\n      this.currentCure = this.answer[this.currentIndex];\n      this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n      this.currentAudio.addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          Worm: Characters.worm2_2\n        });\n      });\n      setTimeout(() => {\n        this.setState({\n          PicBoxList: [soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2],\n          currentIndex: this.currentIndex + 1\n        });\n      }, timeout);\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          gameState: false,\n          Worm: Characters.worm2_1\n        });\n        this.currentAudio.play();\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('done!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.onFrameTouchHandle = async id => {\n      const {\n        gameState\n      } = this.state;\n      if (!gameState) return;\n      this.setState({\n        gameState: false\n      });\n\n      try {\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const cure_id = [this.getListFilter('cure_tid', this.currentCure[0]).cure_id, this.getListFilter('cure_tid', this.currentCure[1]).cure_id, this.getListFilter('cure_tid', this.currentCure[2]).cure_id];\n        const {\n          data\n        } = await T_Api4.answer(s_id, cure_id, this.getListFilter('cure_tid', this.currentCure[id]).cure_word, this.getListFilter('cure_tid', this.currentCure[3][0]).cure_word, this.learning_type === 'review' ? 'T' : 'F');\n        console.log(data);\n\n        switch (data.code) {\n          case 1:\n            if (this.currentIndex < this.answer.length - 1) this.currentIndex++;else {\n              this.gameDone();\n              return;\n            }\n            this.setCurrent(2000);\n            setTimeout(() => {\n              this.playSound();\n            }, 3000);\n            break;\n\n          case 2:\n            console.log(data.message);\n            this.gameDone();\n            break;\n\n          default:\n            this.props.history.replace('/main/main');\n            break;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.onWormTouchHandle = () => {\n      if (this.state.gameState) this.playSound();\n    };\n\n    this.pictursPreloading = picture => {\n      try {\n        for (let i in picture) {\n          let img = new Image();\n          img.src = soundURL + picture[i].cure_path2;\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 1000);\n            }\n          };\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 1000);\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.learning_type = match.params.learning_type;\n    this.cure = null;\n    this.answer = null;\n    this.currentCure = null;\n    this.currentAudio = null;\n    this.currentIndex = 0;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      T6,\n      Characters\n    };\n    this.totalImages = Object.keys(T6).length + Object.keys(Characters).length;\n    this.state = {\n      gameState: false,\n      PicBoxList: null,\n      Worm: Characters.worm2_2,\n      isImageLoaded: false,\n      showPopup: false,\n      showDonePopup: false,\n      showDailyPopup: false,\n      percent: 0,\n      currentIndex: 1,\n      totalNum: 0\n    };\n\n    if (this.learning_type === 'daily') {\n      console.log(location.state.data.cure);\n      this.answer = location.state.data.answer;\n      this.cure = location.state.data.cure;\n      this.currentCure = this.answer[this.currentIndex];\n      console.log(soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2);\n      this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n      this.currentAudio.addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          Worm: Characters.worm2_2\n        });\n      });\n      this.state = { ...this.state,\n        totalNum: this.cure.length\n      };\n    }\n  }\n\n  componentDidCatch() {}\n\n  async componentDidMount() {\n    this.imagesPreloading(this.picture);\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    if (this.learning_type !== 'daily') this.newRequest();else {\n      this.setState({\n        PicBoxList: [soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2]\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n  }\n\n  render() {\n    const {\n      PicBoxList,\n      Worm,\n      isImageLoaded,\n      showPopup,\n      percent,\n      gameState,\n      showDailyPopup,\n      showDonePopup,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(ConsoMatchPresenter, {\n        Background: T6.t6_background,\n        Worm: Worm,\n        onWormTouchHandle: this.onWormTouchHandle,\n        frameList: PicBoxList || [T6.t6_excpic, T6.t6_excpic, T6.t6_excpic],\n        onFrameTouchHandle: this.onFrameTouchHandle,\n        showPopup: showPopup,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        gameState: gameState,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nConsoMatch.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(ConsoMatch));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T6_ConsoMatch/ConsoMatchContainer.js"],"names":["React","withRouter","ConsoMatchPresenter","PropTypes","connect","LoadingComp","T6","Characters","T_Api4","soundURL","ConsoMatch","Component","constructor","match","location","getListFilter","key","value","cure","filter","object","newRequest","console","log","user","props","s_id","student","data","ask","code","currentIndex","answer","totalImages","length","pictursPreloading","setCurrent","setState","totalNum","message","e","timeout","currentCure","currentAudio","Audio","cure_path","addEventListener","gameState","Worm","worm2_2","setTimeout","PicBoxList","cure_path2","playSound","worm2_1","play","gameDone","learning_type","showDonePopup","showDailyPopup","onFrameTouchHandle","id","state","cure_id","cure_word","history","replace","onWormTouchHandle","picture","i","img","Image","src","onload","percent","numOfLoadedImage","isImageLoaded","imagesPreloading","prop","onContinueButtonHandle","showPopup","onRestartButtonHandle","onPauseButtonHandle","params","Object","keys","componentDidCatch","componentDidMount","u_id","push","componentWillUnmount","pause","render","t6_background","t6_excpic","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ConsoMatchPresenter from './ConsoMatchPresenter';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport { T6, Characters } from 'images';\nimport { T_Api4, soundURL } from 'api';\n\nclass ConsoMatch extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match, location }) {\n        super();\n        this.learning_type = match.params.learning_type;\n        this.cure = null;\n        this.answer = null;\n        this.currentCure = null;\n        this.currentAudio = null;\n        this.currentIndex = 0;\n        this.numOfLoadedImage = 0;\n        this.picture = { T6, Characters };\n        this.totalImages = Object.keys(T6).length + Object.keys(Characters).length;\n\n        this.state = {\n            gameState: false,\n            PicBoxList: null,\n            Worm: Characters.worm2_2,\n            isImageLoaded: false,\n            showPopup: false,\n            showDonePopup: false,\n            showDailyPopup: false,\n            percent: 0,\n            currentIndex: 1,\n            totalNum: 0,\n        };\n\n        if (this.learning_type === 'daily') {\n            console.log(location.state.data.cure);\n            this.answer = location.state.data.answer;\n            this.cure = location.state.data.cure;\n\n            this.currentCure = this.answer[this.currentIndex];\n            console.log(soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2);\n\n            this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    gameState: true,\n                    Worm: Characters.worm2_2,\n                })\n            })\n            this.state = {\n                ...this.state,\n                totalNum: this.cure.length,\n            }\n        }\n    }\n\n    componentDidCatch() {\n\n    }\n\n    async componentDidMount() {\n        this.imagesPreloading(this.picture);\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        if (this.learning_type !== 'daily') this.newRequest();\n        else {\n            this.setState({\n                PicBoxList: [\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2,\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2,\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2,\n                ]\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n    }\n\n    getListFilter = (key, value) => {\n        return this.cure.filter((object) => { return object[key] === value })[0]\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await T_Api4.ask(s_id);\n            console.log(data);\n\n            if (data.code === 'specified' || data.code === 1) {\n                this.currentIndex = 0;\n                this.answer = data.answer;\n                this.cure = data.cure;\n\n                this.totalImages += this.cure.length;\n                this.pictursPreloading(this.cure);\n                this.setCurrent(0);\n\n                this.setState({\n                    totalNum: this.cure.length,\n                })\n            }\n            else console.log('data message: ' + data.message);\n        } catch (e) {\n            console.log('error: ' + e);\n        }\n    }\n\n    setCurrent = (timeout) => {\n        this.currentCure = this.answer[this.currentIndex];\n\n        this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n        this.currentAudio.addEventListener('ended', () => {\n            this.setState({\n                gameState: true,\n                Worm: Characters.worm2_2,\n            })\n        })\n\n        setTimeout(() => {\n            this.setState({\n                PicBoxList: [\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2,\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2,\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2,\n                ],\n                currentIndex: this.currentIndex + 1\n            })\n        }, timeout);\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                gameState: false,\n                Worm: Characters.worm2_1,\n            });\n            this.currentAudio.play();\n        }\n    }\n\n    gameDone = () => {\n        console.log('done!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    onFrameTouchHandle = async (id) => {\n        const { gameState } = this.state;\n        if (!gameState) return;\n        this.setState({\n            gameState: false,\n        });\n\n        try {\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const cure_id = [\n                this.getListFilter('cure_tid', this.currentCure[0]).cure_id,\n                this.getListFilter('cure_tid', this.currentCure[1]).cure_id,\n                this.getListFilter('cure_tid', this.currentCure[2]).cure_id,\n            ];\n            const { data } = await T_Api4.answer(\n                s_id,\n                cure_id,\n                this.getListFilter('cure_tid', this.currentCure[id]).cure_word,\n                this.getListFilter('cure_tid', this.currentCure[3][0]).cure_word,\n                this.learning_type === 'review' ? 'T' : 'F'\n            );\n            console.log(data);\n\n            switch (data.code) {\n                case 1:\n                    if (this.currentIndex < this.answer.length - 1) this.currentIndex++;\n                    else {\n                        this.gameDone();\n                        return;\n                    }\n                    this.setCurrent(2000);\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 3000);\n                    break;\n                case 2:\n                    console.log(data.message);\n                    this.gameDone();\n                    break;\n                default:\n                    this.props.history.replace('/main/main')\n                    break;\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    onWormTouchHandle = () => {\n        if (this.state.gameState) this.playSound();\n    }\n\n    pictursPreloading = (picture) => {\n        try {\n            for (let i in picture) {\n                let img = new Image();\n                img.src = soundURL + picture[i].cure_path2;\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 1000);\n                    }\n                };\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 1000);\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { PicBoxList, Worm, isImageLoaded, showPopup, percent, gameState, showDailyPopup, showDonePopup,\n            currentIndex, totalNum } = this.state;\n\n        if (isImageLoaded) {\n            return (\n                <ConsoMatchPresenter\n                    Background={T6.t6_background}\n                    Worm={Worm}\n                    onWormTouchHandle={this.onWormTouchHandle}\n                    frameList={PicBoxList || [T6.t6_excpic, T6.t6_excpic, T6.t6_excpic]}\n                    onFrameTouchHandle={this.onFrameTouchHandle}\n                    showPopup={showPopup}\n                    onContinueButtonHandle={this.onContinueButtonHandle}\n                    onPauseButtonHandle={this.onPauseButtonHandle}\n                    onRestartButtonHandle={this.onRestartButtonHandle}\n                    showDailyPopup={showDailyPopup}\n                    showDonePopup={showDonePopup}\n                    gameState={gameState}\n                    currentIndex={currentIndex}\n                    totalNum={totalNum}\n                />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(ConsoMatch));"]},"metadata":{},"sourceType":"module"}