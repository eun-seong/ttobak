{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js\";\nimport React from 'react';\nimport ShadowingPresenter from './ShadowingPresenter';\nimport recording_end from 'recording_end.mp3';\nimport recording_start from 'recording_start.mp3';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { T1, TTobak } from 'images';\nimport { T1_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nclass Shadowing extends React.Component {\n  constructor({\n    match,\n    location\n  }) {\n    super();\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.stopRecording();\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.stopRecording = e => {\n      this.recording_end_sound.play();\n      this.setState({\n        isRecording: false\n      });\n    };\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await T1_Api.ask(s_id, this.idx_text);\n        console.log(data);\n\n        if (data.code === 'specified' || data.code === 1) {\n          this.currentIndex = 0;\n          this.cure = data.cure;\n          this.currentCure = data.cure[this.currentIndex];\n          this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n          if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            cureText: this.currentCure.cure_text,\n            totalNum: this.cure.length\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      try {\n        if (this.audioResult.status === 'Success') {\n          const {\n            user\n          } = this.props;\n          const s_id = user.student.s_id;\n          const {\n            data\n          } = await T1_Api.answer(s_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score, this.learning_type === 'review' ? 'T' : 'F', this.currentCure.cure_id, this.idx_text);\n          console.log(data);\n\n          if (data.code === 1) {\n            if (this.currentIndex < this.cure.length - 1) {\n              this.currentIndex++;\n            } else {\n              this.gameDone();\n              return;\n            }\n\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = null;\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n            setTimeout(() => {\n              this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text,\n                currentIndex: this.currentIndex + 1\n              });\n            }, 3000);\n            setTimeout(() => {\n              this.playSound();\n            }, 5500);\n          } else if (data.code === 2) {\n            this.gameDone();\n          } else console.log(data.message);\n        } else {\n          console.log(this.audioResult.message);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2\n        });\n        this.currentAudio.play();\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1\n          });\n          setTimeout(() => {\n            console.log('이제 따라 읽어볼까요?');\n            this.recording_start_sound.play();\n            this.setState({\n              isRecording: true\n            });\n            window.BRIDGE.recordAudio('m', this.currentCure.cure_text);\n          }, 1000);\n        });\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.replace('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n            console.log(this.totalImages);\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true,\n                TTobaki: TTobak.ttobak1_1\n              });\n              setTimeout(() => this.playSound(), 1000);\n              clearTimeout(timeoutPreloading);\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.onCompleteButtonHandle = () => {\n      if (this.state.isRecording) {\n        window.BRIDGE.requestStopRecording();\n      }\n    };\n\n    this.idx_text = match.params.type;\n    this.learning_type = match.params.learning_type;\n    this.recording_start_sound = new Audio(recording_start);\n    this.recording_end_sound = new Audio(recording_end);\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.picture = {\n      T1,\n      TTobak\n    };\n    this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n    this.numOfLoadedImage = 0;\n    this.state = {\n      cureText: null,\n      isRecording: false,\n      TTobaki: TTobak.ttobak1_1,\n      isImageLoaded: false,\n      showPopup: false,\n      showDonePopup: false,\n      showDailyPopup: false,\n      percent: 0,\n      currentIndex: 1,\n      totalNum: 0\n    };\n\n    if (this.learning_type === 'daily') {\n      console.log(location.state.data.read);\n      this.cure = location.state.data.read;\n      this.state = { ...this.state,\n        totalNum: this.cure.length\n      };\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    if (this.learning_type !== 'daily') this.newRequest();else {\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n      this.state = {\n        cureText: this.currentCure.cure_text\n      };\n    }\n    this.imagesPreloading(this.picture);\n    window.addEventListener('android', this.androidResponse);\n    window.addEventListener('androidStopRecording', this.androidStopRecording);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n\n    window.removeEventListener('android', this.androidResponse);\n    window.removeEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  render() {\n    const {\n      type,\n      cureText,\n      TTobaki,\n      isRecording,\n      isImageLoaded,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(ShadowingPresenter, {\n        Background: T1.t1_background,\n        TextBox: T1.t1_textbox,\n        TTobak: TTobaki,\n        type: type,\n        text: cureText,\n        isRecording: isRecording,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        bt_complete: T1.bt_complete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nShadowing.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js"],"names":["React","ShadowingPresenter","recording_end","recording_start","withRouter","PropTypes","connect","T1","TTobak","T1_Api","soundURL","LoadingComp","Shadowing","Component","constructor","match","location","androidResponse","e","console","log","detail","stopRecording","audioResult","andriodListener","recording_end_sound","play","setState","isRecording","newRequest","user","props","s_id","student","data","ask","idx_text","code","currentIndex","cure","currentCure","currentAudio","Audio","cure_path","cure_text","cure_word","TTobaki","ttobak1_1","cureText","totalNum","length","ttobak2_1","status","answer","score","phone_score","speed_score","rhythm_score","learning_type","cure_id","gameDone","setTimeout","playSound","message","ttobak3_2","addEventListener","recording_start_sound","window","BRIDGE","recordAudio","showDonePopup","showDailyPopup","imagesPreloading","picture","timeoutPreloading","history","replace","i","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","isImageLoaded","clearTimeout","onContinueButtonHandle","showPopup","onRestartButtonHandle","onPauseButtonHandle","onCompleteButtonHandle","state","requestStopRecording","params","type","Object","keys","read","componentDidMount","u_id","push","androidStopRecording","componentWillUnmount","pause","removeEventListener","render","t1_background","t1_textbox","bt_complete","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ShadowingPresenter from './ShadowingPresenter';\nimport recording_end from 'recording_end.mp3';\nimport recording_start from 'recording_start.mp3';\n\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { T1, TTobak } from 'images';\nimport { T1_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nclass Shadowing extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match, location }) {\n        super();\n        this.idx_text = match.params.type;\n        this.learning_type = match.params.learning_type;\n        this.recording_start_sound = new Audio(recording_start);\n        this.recording_end_sound = new Audio(recording_end);\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n        this.picture = { T1, TTobak };\n        this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n        this.numOfLoadedImage = 0;\n\n        this.state = {\n            cureText: null,\n            isRecording: false,\n            TTobaki: TTobak.ttobak1_1,\n            isImageLoaded: false,\n            showPopup: false,\n            showDonePopup: false,\n            showDailyPopup: false,\n            percent: 0,\n            currentIndex: 1,\n            totalNum: 0,\n        }\n\n        if (this.learning_type === 'daily') {\n            console.log(location.state.data.read);\n            this.cure = location.state.data.read;\n            this.state = {\n                ...this.state,\n                totalNum: this.cure.length,\n            }\n        }\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        if (this.learning_type !== 'daily') this.newRequest();\n        else {\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                this.currentCure.cure_text = this.currentCure.cure_word;\n            this.state = {\n                cureText: this.currentCure.cure_text\n            };\n        }\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener('android', this.androidResponse);\n        window.addEventListener('androidStopRecording', this.androidStopRecording);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n        window.removeEventListener('android', this.androidResponse);\n        window.removeEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.stopRecording();\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    stopRecording = (e) => {\n        this.recording_end_sound.play();\n        this.setState({\n            isRecording: false,\n        });\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await T1_Api.ask(s_id, this.idx_text);\n            console.log(data);\n\n            if (data.code === 'specified' || data.code === 1) {\n                this.currentIndex = 0;\n                this.cure = data.cure;\n                this.currentCure = data.cure[this.currentIndex];\n                this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n                if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                    this.currentCure.cure_text = this.currentCure.cure_word;\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    cureText: this.currentCure.cure_text,\n                    totalNum: this.cure.length,\n                });\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        try {\n            if (this.audioResult.status === 'Success') {\n                const { user } = this.props;\n                const s_id = user.student.s_id;\n                const { data } = await T1_Api.answer(\n                    s_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score,\n                    this.learning_type === 'review' ? 'T' : 'F',\n                    this.currentCure.cure_id,\n                    this.idx_text\n                );\n                console.log(data);\n\n                if (data.code === 1) {\n                    if (this.currentIndex < this.cure.length - 1) {\n                        this.currentIndex++;\n                    } else {\n                        this.gameDone();\n                        return;\n                    }\n                    this.currentCure = this.cure[this.currentIndex];\n                    this.currentAudio = null;\n                    this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n                    if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                        this.currentCure.cure_text = this.currentCure.cure_word;\n\n                    setTimeout(() => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak1_1,\n                            cureText: this.currentCure.cure_text,\n                            currentIndex: this.currentIndex + 1\n                        });\n                    }, 3000);\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 5500);\n\n                } else if (data.code === 2) {\n                    this.gameDone();\n                }\n                else console.log(data.message);\n\n            } else {\n                console.log(this.audioResult.message);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n            });\n            this.currentAudio.play();\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                });\n                setTimeout(() => {\n                    console.log('이제 따라 읽어볼까요?');\n                    this.recording_start_sound.play();\n                    this.setState({\n                        isRecording: true,\n                    });\n                    window.BRIDGE.recordAudio('m', this.currentCure.cure_text);\n                }, 1000);\n            });\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.replace('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    console.log(this.totalImages)\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                            TTobaki: TTobak.ttobak1_1,\n                        })\n                        setTimeout(() => this.playSound(), 1000);\n                        clearTimeout(timeoutPreloading);\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    onCompleteButtonHandle = () => {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n    }\n\n    render() {\n        const { type, cureText, TTobaki, isRecording, isImageLoaded,\n            showPopup, showDonePopup, showDailyPopup, percent,\n            currentIndex, totalNum } = this.state;\n\n        if (isImageLoaded) {\n            return (<ShadowingPresenter\n                Background={T1.t1_background}\n                TextBox={T1.t1_textbox}\n                TTobak={TTobaki}\n                type={type}\n                text={cureText}\n                isRecording={isRecording}\n                onCompleteButtonHandle={this.onCompleteButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n                bt_complete={T1.bt_complete}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));"]},"metadata":{},"sourceType":"module"}