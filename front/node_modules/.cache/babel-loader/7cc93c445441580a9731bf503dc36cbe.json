{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Sweep/SweepContainer.js\";\nimport React from 'react';\nimport SweepPresenter from './SweepPresenter';\nimport { D1_Api, soundURL } from 'api';\nimport { D1, TTobak } from 'images';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nconst UP = 'up';\nconst DOWN = 'down';\nconst initState = {\n  gameState: false,\n  // 게임 상태\n  UpButton: D1.d1_UpButton_UP,\n  // 버튼 이미지 상태\n  DownButton: D1.d1_DownButton_UP,\n  // 버튼 이미지 상태\n  stdAnswer: [],\n  // 학습자 정답\n  Answer: [],\n  // 정답 상자\n  TTobaki: TTobak.ttobak1_1,\n  // 또박이 이미지 상태\n  swpSound: null,\n  isImageLoaded: false,\n  percent: 0,\n  showPopup: false,\n  showNextPopup: false,\n  currentIndex: 1,\n  totalNum: 0\n};\n\nclass Sweep extends React.PureComponent {\n  constructor(_props) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        // console.log(s_id);\n        const {\n          data\n        } = await D1_Api.ask(s_id);\n        console.log(data);\n\n        switch (data.code) {\n          case 1:\n            const {\n              answers,\n              swp: {\n                ques_id,\n                ques_path1,\n                ques_path2\n              }\n            } = data;\n            this.currentIndex = 0;\n            this.ques_id = ques_id;\n            this.ques_path = [ques_path2, ques_path1];\n            this.oriAnswer = answers;\n            this.buttonSound = [new Audio(soundURL + this.ques_path[0]), new Audio(soundURL + this.ques_path[1])];\n            this.setState({\n              totalNum: this.oriAnswer.length\n            });\n            this.setListener();\n            setTimeout(() => this.playSound(), 3000);\n            break;\n\n          case 2:\n            break;\n\n          case 3:\n            break;\n\n          case 'tutorial':\n            this.tutorial(data);\n            break;\n\n          default:\n            console.log('data message: ' + data.message);\n            break;\n        }\n      } catch (e) {\n        console.log('error: ' + e);\n      }\n    };\n\n    this.tutorial = data => {\n      let voice;\n      let swp = [new Audio(soundURL + data.sample_ques.ques_path2), new Audio(soundURL + data.sample_ques.ques_path1)];\n\n      for (let props in data.voice) {\n        voice.push(new Audio(soundURL + props.voc_path));\n      }\n\n      voice[0].addEventListener('ended', () => {\n        setTimeout(() => {\n          setInterval(() => {\n            if (this.state.UpButton === D1.d1_UpButton_UP) {\n              swp[0].play();\n              this.setState({\n                UpButton: D1.d1_UpButton_DOWN\n              });\n              setTimeout(() => {\n                this.setState({\n                  UpButton: D1.d1_UpButton_UP\n                });\n              }, 500);\n            }\n          }, 1000);\n        }, 1000);\n      });\n      setTimeout(() => {\n        voice[0].play();\n      }, 1000);\n\n      for (let i = 0; i < data.voice.length; i++) {\n        voice[i] = null;\n      }\n\n      this.newRequest();\n    };\n\n    this.setListener = () => {\n      try {\n        this.setState({\n          swpSound: [UP === this.oriAnswer[this.currentIndex][0] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1]), UP === this.oriAnswer[this.currentIndex][1] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1])],\n          currentIndex: this.currentIndex + 1\n        });\n        this.state.swpSound[0].addEventListener('ended', () => {\n          setTimeout(() => {\n            if (!!this.state.swpSound[1]) this.state.swpSound[1].play();\n          }, 900);\n        });\n        this.state.swpSound[1].addEventListener('ended', () => {\n          this.setState({\n            gameState: true,\n            TTobaki: TTobak.ttobak1_1\n          });\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.onTouchStart = id => {\n      const {\n        Answer,\n        stdAnswer,\n        gameState\n      } = this.state;\n      if (!gameState) return;\n\n      switch (id) {\n        case DOWN:\n          // console.log('down-down');\n          this.setState({\n            DownButton: D1.d1_DownButton_DOWN,\n            Answer: Answer.concat(gameState ? D1.d1_AnswerDown : []),\n            stdAnswer: stdAnswer.concat(gameState ? DOWN : [])\n          });\n          break;\n\n        case UP:\n          // console.log('up-down');\n          this.setState({\n            UpButton: D1.d1_UpButton_DOWN,\n            Answer: Answer.concat(gameState ? D1.d1_AnswerUp : []),\n            stdAnswer: stdAnswer.concat(gameState ? UP : [])\n          });\n          break;\n\n        default:\n      }\n    };\n\n    this.onTouchEnd = id => {\n      const {\n        gameState\n      } = this.state;\n      if (!gameState) return;\n\n      switch (id) {\n        case DOWN:\n          // console.log('down-up');\n          this.setState({\n            DownButton: D1.d1_DownButton_UP\n          });\n          if (gameState && !!this.buttonSound[1]) this.buttonSound[1].play();\n          break;\n\n        case UP:\n          // console.log('up-up');\n          this.setState({\n            UpButton: D1.d1_UpButton_UP\n          });\n          if (gameState && !!this.buttonSound[0]) this.buttonSound[0].play();\n          break;\n\n        default:\n      }\n\n      if (this.state.Answer.length === 2) this.finished();\n    };\n\n    this.TTobakiTouch = async () => {\n      if (this.state.gameState) {\n        this.playSound();\n      }\n    };\n\n    this.playSound = () => {\n      this.setState({\n        gameState: false\n      });\n      if (!!this.state.swpSound[0]) this.state.swpSound[0].play();\n    };\n\n    this.finished = async () => {\n      this.setState({\n        gameState: false,\n        TTobaki: TTobak.ttobak2_1\n      });\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        stdAnswer\n      } = this.state;\n      const answer = [this.oriAnswer[this.currentIndex][0], this.oriAnswer[this.currentIndex][1]];\n\n      try {\n        console.log(s_id, this.ques_id, answer, stdAnswer);\n        const {\n          data\n        } = await D1_Api.answer(s_id, this.ques_id, answer, stdAnswer);\n        console.log(data);\n        setTimeout(() => {\n          this.setState({\n            gameState: false,\n            Answer: [],\n            sweep: [],\n            path: [],\n            stdAnswer: [],\n            TTobaki: TTobak.ttobak1_1\n          });\n        }, 1500);\n\n        if (data.code === 1) {\n          if (data.to_next || data.to_next_freq) {\n            this.newRequest();\n            console.log('next');\n          } else if (data.is_stop || data.to_next === '모든 단계를 풀었습니다.') {\n            this.setState({\n              showNextPopup: true\n            });\n          } else if (!data.to_next && !data.to_next_freq) {\n            this.setState({\n              showNextPopup: true\n            });\n            return;\n          } else {\n            if (this.currentIndex < this.oriAnswer.length - 1) this.currentIndex++;else {\n              this.setState({\n                showNextPopup: true\n              });\n              return;\n            }\n            this.setListener();\n            setTimeout(() => {\n              this.playSound();\n            }, 2000);\n          }\n        }\n      } catch (e) {\n        console.log(e); // TODO 에러 처리\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n            }\n          };\n        }\n      }\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.replace('/diagnose/recognition');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.buttonSound = null; // up_sweep, down_sweep 소리 경로\n\n    this.currentIndex = 0;\n    this.oriAnswer = null;\n    this.ques_id = null;\n    this.ques_path = null;\n    this.currentIndex = 0;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D1,\n      TTobak\n    };\n    this.totalImages = Object.keys(D1).length + Object.keys(TTobak).length;\n    this.state = initState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n    this.newRequest();\n  }\n\n  componentWillUnmount() {\n    if (!!this.state.swpSound) {\n      this.state.swpSound[0].pause();\n      this.state.swpSound[1].pause();\n    }\n\n    this.setState({\n      swpSound: null\n    });\n  }\n\n  render() {\n    const {\n      UpButton,\n      DownButton,\n      Answer,\n      TTobaki,\n      isImageLoaded,\n      showPopup,\n      showNextPopup,\n      percent\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(SweepPresenter, {\n        Background: D1.d1_background,\n        UP: UP,\n        DOWN: DOWN,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        UpButton: UpButton,\n        DownButton: DownButton,\n        Answer: Answer,\n        TTobak: TTobaki,\n        TTobakiTouch: this.TTobakiTouch,\n        AnswerBox: D1.d1_box,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        currentIndex: this.state.currentIndex,\n        totalNum: this.state.totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nSweep.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Sweep));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Sweep/SweepContainer.js"],"names":["React","SweepPresenter","D1_Api","soundURL","D1","TTobak","withRouter","PropTypes","connect","LoadingComp","UP","DOWN","initState","gameState","UpButton","d1_UpButton_UP","DownButton","d1_DownButton_UP","stdAnswer","Answer","TTobaki","ttobak1_1","swpSound","isImageLoaded","percent","showPopup","showNextPopup","currentIndex","totalNum","Sweep","PureComponent","constructor","props","newRequest","console","log","user","s_id","student","data","ask","code","answers","swp","ques_id","ques_path1","ques_path2","ques_path","oriAnswer","buttonSound","Audio","setState","length","setListener","setTimeout","playSound","tutorial","message","e","voice","sample_ques","push","voc_path","addEventListener","setInterval","state","play","d1_UpButton_DOWN","i","onTouchStart","id","d1_DownButton_DOWN","concat","d1_AnswerDown","d1_AnswerUp","onTouchEnd","finished","TTobakiTouch","ttobak2_1","answer","sweep","path","to_next","to_next_freq","is_stop","imagesPreloading","picture","prop","img","Image","src","onload","numOfLoadedImage","totalImages","onPopupButtonHandle","history","replace","onContinueButtonHandle","onPauseButtonHandle","Object","keys","componentDidMount","u_id","componentWillUnmount","pause","render","d1_background","d1_box","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SweepPresenter from './SweepPresenter';\nimport { D1_Api, soundURL } from 'api';\nimport { D1, TTobak } from 'images';\nimport { withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\n\nconst UP = 'up';\nconst DOWN = 'down';\nconst initState = {\n    gameState: false,                           // 게임 상태\n    UpButton: D1.d1_UpButton_UP,                // 버튼 이미지 상태\n    DownButton: D1.d1_DownButton_UP,            // 버튼 이미지 상태\n    stdAnswer: [],                              // 학습자 정답\n    Answer: [],                                 // 정답 상자\n    TTobaki: TTobak.ttobak1_1,                  // 또박이 이미지 상태\n    swpSound: null,\n    isImageLoaded: false,\n    percent: 0,\n    showPopup: false,\n    showNextPopup: false,\n    currentIndex: 1,\n    totalNum: 0,\n};\n\nclass Sweep extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super();\n        this.buttonSound = null;                           // up_sweep, down_sweep 소리 경로\n        this.currentIndex = 0;\n        this.oriAnswer = null;\n        this.ques_id = null;\n        this.ques_path = null;\n        this.currentIndex = 0;\n        this.numOfLoadedImage = 0;\n        this.picture = { D1, TTobak };\n        this.totalImages = Object.keys(D1).length + Object.keys(TTobak).length;\n\n        this.state = initState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n        this.newRequest();\n    }\n\n    componentWillUnmount() {\n        if (!!this.state.swpSound) {\n            this.state.swpSound[0].pause();\n            this.state.swpSound[1].pause();\n        }\n        this.setState({\n            swpSound: null,\n        })\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            // console.log(s_id);\n            const { data } = await D1_Api.ask(s_id);\n            console.log(data);\n\n            switch (data.code) {\n                case 1:\n                    const { answers, swp: { ques_id, ques_path1, ques_path2 } } = data;\n                    this.currentIndex = 0;\n                    this.ques_id = ques_id;\n                    this.ques_path = [ques_path2, ques_path1];\n                    this.oriAnswer = answers;\n                    this.buttonSound = [new Audio(soundURL + this.ques_path[0]), new Audio(soundURL + this.ques_path[1])];\n                    this.setState({\n                        totalNum: this.oriAnswer.length,\n                    });\n                    this.setListener();\n                    setTimeout(() => this.playSound(), 3000);\n                    break;\n                case 2:\n                    break;\n                case 3:\n                    break;\n                case 'tutorial':\n                    this.tutorial(data);\n                    break;\n                default:\n                    console.log('data message: ' + data.message);\n                    break;\n            }\n        } catch (e) {\n            console.log('error: ' + e);\n        }\n    }\n\n    tutorial = (data) => {\n        let voice;\n        let swp = [new Audio(soundURL + data.sample_ques.ques_path2), new Audio(soundURL + data.sample_ques.ques_path1)];\n        for (let props in data.voice) {\n            voice.push(new Audio(soundURL + props.voc_path));\n        }\n\n        voice[0].addEventListener('ended', () => {\n            setTimeout(() => {\n                setInterval(() => {\n                    if (this.state.UpButton === D1.d1_UpButton_UP) {\n                        swp[0].play();\n                        this.setState({\n                            UpButton: D1.d1_UpButton_DOWN,\n                        });\n                        setTimeout(() => {\n                            this.setState({\n                                UpButton: D1.d1_UpButton_UP,\n                            })\n                        }, 500);\n                    }\n                }, 1000);\n            }, 1000);\n        })\n\n        setTimeout(() => {\n            voice[0].play();\n        }, 1000);\n\n        for (let i = 0; i < data.voice.length; i++) {\n            voice[i] = null;\n        }\n        this.newRequest();\n    }\n\n    setListener = () => {\n        try {\n            this.setState({\n                swpSound: [\n                    (UP === this.oriAnswer[this.currentIndex][0] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1])),\n                    (UP === this.oriAnswer[this.currentIndex][1] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1]))\n                ],\n                currentIndex: this.currentIndex + 1,\n            })\n\n            this.state.swpSound[0].addEventListener('ended', () => {\n                setTimeout(() => {\n                    if (!!this.state.swpSound[1]) this.state.swpSound[1].play();\n                }, 900)\n            });\n\n            this.state.swpSound[1].addEventListener('ended', () => {\n                this.setState({\n                    gameState: true,\n                    TTobaki: TTobak.ttobak1_1\n                });\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    onTouchStart = (id) => {\n        const { Answer, stdAnswer, gameState } = this.state;\n        if (!gameState) return;\n\n        switch (id) {\n            case DOWN:\n                // console.log('down-down');\n                this.setState({\n                    DownButton: D1.d1_DownButton_DOWN,\n                    Answer: Answer.concat(gameState ? D1.d1_AnswerDown : []),\n                    stdAnswer: stdAnswer.concat(gameState ? DOWN : [])\n                });\n                break;\n            case UP:\n                // console.log('up-down');\n                this.setState({\n                    UpButton: D1.d1_UpButton_DOWN,\n                    Answer: Answer.concat(gameState ? D1.d1_AnswerUp : []),\n                    stdAnswer: stdAnswer.concat(gameState ? UP : [])\n                });\n                break;\n            default:\n        }\n    }\n\n    onTouchEnd = (id) => {\n        const { gameState } = this.state;\n        if (!gameState) return;\n\n        switch (id) {\n            case DOWN:\n                // console.log('down-up');\n                this.setState({\n                    DownButton: D1.d1_DownButton_UP\n                });\n                if (gameState && !!this.buttonSound[1]) this.buttonSound[1].play();\n                break;\n            case UP:\n                // console.log('up-up');\n                this.setState({\n                    UpButton: D1.d1_UpButton_UP\n                });\n                if (gameState && !!this.buttonSound[0]) this.buttonSound[0].play();\n                break;\n            default:\n        }\n        if (this.state.Answer.length === 2) this.finished();\n    }\n\n    TTobakiTouch = async () => {\n        if (this.state.gameState) {\n            this.playSound();\n        }\n    }\n\n    playSound = () => {\n        this.setState({\n            gameState: false,\n        });\n\n        if (!!this.state.swpSound[0]) this.state.swpSound[0].play();\n    }\n\n    finished = async () => {\n        this.setState({\n            gameState: false,\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { stdAnswer } = this.state;\n        const answer = [this.oriAnswer[this.currentIndex][0], this.oriAnswer[this.currentIndex][1]];\n\n        try {\n            console.log(s_id, this.ques_id, answer, stdAnswer)\n            const { data } = await D1_Api.answer(s_id, this.ques_id, answer, stdAnswer);\n            console.log(data);\n\n            setTimeout(() => {\n                this.setState({\n                    gameState: false,\n                    Answer: [],\n                    sweep: [],\n                    path: [],\n                    stdAnswer: [],\n                    TTobaki: TTobak.ttobak1_1,\n                });\n            }, 1500);\n\n            if (data.code === 1) {\n                if (data.to_next || data.to_next_freq) {\n                    this.newRequest();\n                    console.log('next');\n                }\n                else if (data.is_stop || data.to_next === '모든 단계를 풀었습니다.') {\n                    this.setState({\n                        showNextPopup: true,\n                    });\n                } else if (!data.to_next && !data.to_next_freq) {\n                    this.setState({\n                        showNextPopup: true,\n                    });\n                    return;\n                } else {\n                    if (this.currentIndex < this.oriAnswer.length - 1) this.currentIndex++;\n                    else {\n                        this.setState({\n                            showNextPopup: true,\n                        });\n                        return;\n                    }\n\n                    this.setListener();\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 2000);\n                }\n            }\n        } catch (e) {\n            console.log(e);\n            // TODO 에러 처리\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                    }\n                };\n            }\n        }\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.replace('/diagnose/recognition');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { UpButton, DownButton, Answer, TTobaki, isImageLoaded, showPopup, showNextPopup, percent } = this.state;\n\n        if (isImageLoaded) {\n            return (\n                <SweepPresenter\n                    Background={D1.d1_background}\n                    UP={UP} DOWN={DOWN}\n                    onTouchStart={this.onTouchStart}\n                    onTouchEnd={this.onTouchEnd}\n                    UpButton={UpButton}\n                    DownButton={DownButton}\n                    Answer={Answer}\n                    TTobak={TTobaki}\n                    TTobakiTouch={this.TTobakiTouch}\n                    AnswerBox={D1.d1_box}\n                    showPopup={showPopup}\n                    showNextPopup={showNextPopup}\n                    onPopupButtonHandle={this.onPopupButtonHandle}\n                    onContinueButtonHandle={this.onContinueButtonHandle}\n                    onPauseButtonHandle={this.onPauseButtonHandle}\n                    currentIndex={this.state.currentIndex}\n                    totalNum={this.state.totalNum}\n                />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Sweep));"]},"metadata":{},"sourceType":"module"}