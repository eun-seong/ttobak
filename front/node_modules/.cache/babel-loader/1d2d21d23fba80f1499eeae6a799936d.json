{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/Root/AddStudent/AddStudentContainer.js\";\nimport React from 'react';\nimport AddStudentPresenter from './AddStudentPresenter';\nimport Alert from 'Components/Alert';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { student_add, response_clear } from 'Sessions/action.js';\nimport moment from 'moment';\n\nclass AddStudent extends React.Component {\n  /* \n  모든 로직 추가 \n  api 가져오기\n  error 처리 등 모든 것\n   */\n  constructor() {\n    super();\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSubmit = (e, state) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n      const {\n        name,\n        birth,\n        gender\n      } = state;\n      this.setState({\n        name,\n        birth,\n        gender\n      });\n      const icon = this.props.match.params.icon;\n\n      if (!icon) {\n        this.makeAlert('아이콘을 선택해주세요.', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      if (!name || !birth || !gender) {\n        this.makeAlert('빠진 부분 없이 입력해 주세요.', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      if (birth.length !== 4 || isNaN(birth) || !moment(birth, 'YYYY', true).isValid()) {\n        this.makeAlert('올바른 년도를 입력해 주세요.', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      dispatch(student_add(name, birth, gender, icon, user.user.u_id));\n      this.isStudentAddCalled = true;\n      return true;\n    };\n\n    this.enableAlert = false;\n    this.isStudentAddCalled = false;\n    this.state = {\n      name: '',\n      birth: '',\n      gender: 'm'\n    };\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.makeAlert('잘못된 접근입니다.', false, () => {\n        this.props.history.push('/root/signin');\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n\n    if (this.isStudentAddCalled && user.student.s_id && user.user.u_id) {\n      dispatch(response_clear());\n      this.makeAlert('학습자 추가가 완료되었습니다.', false, () => {\n        this.props.history.push('/main/main');\n      });\n      this.isStudentAddCalled = false;\n      return;\n    }\n\n    if (this.isStudentAddCalled && user.response.data && user.response.data.code === 2) {\n      dispatch(response_clear());\n      this.makeAlert('존재하지 않는 회원입니다.', false, () => {\n        this.enableAlert = false;\n        this.forceUpdate();\n      });\n      this.isStudentAddCalled = false;\n    }\n\n    if (this.isStudentAddCalled && user.response.data && user.response.data.code === 3) {\n      dispatch(response_clear());\n      this.makeAlert('학습자는 3명까지 추가 가능합니다.', false, () => {\n        this.enableAlert = false;\n        this.forceUpdate();\n      });\n      this.isStudentAddCalled = false;\n    }\n  }\n\n  render() {\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n    const alertComp = this.enableAlert ? /*#__PURE__*/React.createElement(Alert, {\n      text: this.alertText,\n      isConfirm: this.isConfirm,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 47\n      }\n    }) : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, alertComp, /*#__PURE__*/React.createElement(AddStudentPresenter, {\n      handleSubmit: this.handleSubmit,\n      iconNum: this.props.match.params.icon,\n      state: this.state,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nAddStudent.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(AddStudent));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/Root/AddStudent/AddStudentContainer.js"],"names":["React","AddStudentPresenter","Alert","withRouter","PropTypes","connect","student_add","response_clear","moment","AddStudent","Component","constructor","goBack","props","history","handleSubmit","e","state","preventDefault","user","dispatch","name","birth","gender","setState","icon","match","params","makeAlert","enableAlert","forceUpdate","length","isNaN","isValid","u_id","isStudentAddCalled","text","isConfirm","onSubmit","onCancel","alertText","componentDidMount","push","componentDidUpdate","student","s_id","response","data","code","render","alertComp","propTypes","objectOf","any","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AddStudentPresenter from './AddStudentPresenter';\nimport Alert from 'Components/Alert';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { student_add, response_clear } from 'Sessions/action.js';\nimport moment from 'moment';\n\nclass AddStudent extends React.Component {\n    /* \n    모든 로직 추가 \n    api 가져오기\n    error 처리 등 모든 것\n     */\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.enableAlert = false;\n        this.isStudentAddCalled = false;\n\n        this.state = {\n            name: '', \n            birth: '', \n            gender: 'm'\n        };\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n\n    handleSubmit = (e, state) => {\n        e.preventDefault();\n        const { user } = this.props;\n        const { dispatch } = this.props;\n\n        const {name, birth, gender} = state;\n        this.setState({name, birth, gender});\n        \n        const icon = this.props.match.params.icon;\n        if (!icon) {\n            \n            this.makeAlert('아이콘을 선택해주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        if (!name || !birth || !gender) {\n            this.makeAlert('빠진 부분 없이 입력해 주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        if (birth.length !== 4 || isNaN(birth) || !moment(birth, 'YYYY', true).isValid()) {\n            this.makeAlert('올바른 년도를 입력해 주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        dispatch(student_add(name, birth, gender, icon, user.user.u_id));\n        this.isStudentAddCalled = true;\n\n        return true;\n    }\n\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        if (!user.user.u_id) {\n            this.makeAlert('잘못된 접근입니다.', false, (() => {\n                this.props.history.push('/root/signin');\n            }));\n        }\n    }\n\n    componentDidUpdate() {\n        const { user } = this.props;\n        const { dispatch } = this.props;\n\n        if (this.isStudentAddCalled && user.student.s_id && user.user.u_id) {\n            dispatch(response_clear());\n            this.makeAlert('학습자 추가가 완료되었습니다.', false, (() => {\n                this.props.history.push('/main/main');\n            }));\n            this.isStudentAddCalled = false;\n            return;\n        }\n\n        if (this.isStudentAddCalled && user.response.data && user.response.data.code === 2) {\n            dispatch(response_clear());\n            this.makeAlert('존재하지 않는 회원입니다.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            this.isStudentAddCalled = false;\n        }\n\n        if (this.isStudentAddCalled && user.response.data && user.response.data.code === 3) {\n            dispatch(response_clear());\n            this.makeAlert('학습자는 3명까지 추가 가능합니다.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            this.isStudentAddCalled = false;\n        }\n    }\n\n    render() {\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n\n        const alertComp = this.enableAlert ? (<Alert\n            text={this.alertText}\n            isConfirm={this.isConfirm}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n        />) : '';\n        \n        return (\n            <div>\n                {alertComp}\n                <AddStudentPresenter\n                    handleSubmit={this.handleSubmit}\n                    iconNum={this.props.match.params.icon}\n                    state={this.state}\n                    goBack={this.goBack}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(AddStudent));"]},"metadata":{},"sourceType":"module"}