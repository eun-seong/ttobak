{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignIn/SignInContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SignInPresenter from './SignInPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_autologin, user_signin } from 'Sessions/action.js';\n\nclass SignIn extends React.Component {\n  /* \n  모든 로직 추가 \n  api 가져오기\n  error 처리 등 모든 것\n   */\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = (e, {\n      email,\n      pw\n    }) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n      dispatch(user_signin(email, pw));\n    };\n\n    const {\n      dispatch: _dispatch\n    } = this.props;\n\n    _dispatch(user_autologin());\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n    const {\n      history\n    } = this.props;\n\n    if ('u_id' in user.user) {\n      window.localStorage.setItem('uid', user.user.u_id);\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    if (!user.fetchingUpdate && user.response.data && user.response.data.code !== 1) {\n      alert('이메일과 비밀번호를 다시 확인해주세요.');\n    }\n  }\n\n  render() {\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n    return /*#__PURE__*/React.createElement(SignInPresenter, {\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nSignIn.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SignIn));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignIn/SignInContainer.js"],"names":["React","withRouter","SignInPresenter","PropTypes","connect","user_autologin","user_signin","SignIn","Component","constructor","props","handleSubmit","e","email","pw","preventDefault","user","dispatch","componentDidUpdate","history","window","localStorage","setItem","u_id","push","fetchingUpdate","response","data","code","alert","render","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,oBAA5C;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACjC;AACJ;AACA;AACA;AACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,YAbmB,GAaJ,CAACC,CAAD,EAAI;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAJ,KAAoB;AAC/BF,MAAAA,CAAC,CAACG,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKN,KAAtB;AACA,YAAM;AAACO,QAAAA;AAAD,UAAa,KAAKP,KAAxB;AAEAO,MAAAA,QAAQ,CAACX,WAAW,CAACO,KAAD,EAAQC,EAAR,CAAZ,CAAR;AACH,KAnBkB;;AAEf,UAAM;AAAEG,MAAAA,QAAQ,EAARA;AAAF,QAAe,KAAKP,KAA1B;;AAEAO,IAAAA,SAAQ,CAACZ,cAAc,EAAf,CAAR;AACH;;AAeDa,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEF,MAAAA;AAAF,QAAW,KAAKN,KAAtB;AACA,UAAM;AAAES,MAAAA;AAAF,QAAc,KAAKT,KAAzB;;AAEA,QAAG,UAAUM,IAAI,CAACA,IAAlB,EAAwB;AACpBI,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,EAAmCN,IAAI,CAACA,IAAL,CAAUO,IAA7C;AACA,WAAKb,KAAL,CAAWS,OAAX,CAAmBK,IAAnB,CAAwB,iBAAxB;AACA;AACH;;AAED,QAAG,CAACR,IAAI,CAACS,cAAN,IAAwBT,IAAI,CAACU,QAAL,CAAcC,IAAtC,IAA8CX,IAAI,CAACU,QAAL,CAAcC,IAAd,CAAmBC,IAAnB,KAA4B,CAA7E,EAAgF;AAC5EC,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACH;AACJ;;AAGDC,EAAAA,MAAM,GAAG;AACL;AACR;AACA;AACA;AAEQ,wBAAQ,oBACJ,eADI;AAEJ,MAAA,YAAY,EAAE,KAAKnB,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAIH;;AArDgC;;AAA/BJ,M,CAcKwB,S,GAAY;AACff,EAAAA,IAAI,EAAEb,SAAS,CAAC6B,QAAV,CAAmB7B,SAAS,CAAC8B,GAA7B,EAAkCC,UADzB;AAEfjB,EAAAA,QAAQ,EAAEd,SAAS,CAACgC,IAAV,CAAeD;AAFV,C;;AA0CvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAErB,IAAAA,IAAI,EAAEqB,KAAK,CAACrB;AAAd,GAAP;AACD;;AAED,eAAeZ,OAAO,CAACgC,eAAD,CAAP,CAAyBnC,UAAU,CAACM,MAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SignInPresenter from './SignInPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_autologin, user_signin } from 'Sessions/action.js';\n\nclass SignIn extends React.Component {\n    /* \n    모든 로직 추가 \n    api 가져오기\n    error 처리 등 모든 것\n     */\n\n    constructor(props) {\n        super(props);\n        const { dispatch } = this.props;\n\n        dispatch(user_autologin());\n    }\n\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n\n    handleSubmit = (e, {email, pw}) => {\n        e.preventDefault(); \n        const { user } = this.props;\n        const {dispatch} = this.props;\n\n        dispatch(user_signin(email, pw));\n    }\n    componentDidUpdate() {\n        const { user } = this.props;\n        const { history } = this.props;\n        \n        if('u_id' in user.user) {\n            window.localStorage.setItem('uid', user.user.u_id);\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        if(!user.fetchingUpdate && user.response.data && user.response.data.code !== 1) {\n            alert('이메일과 비밀번호를 다시 확인해주세요.');\n        }\n    }\n\n\n    render() {\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n\n        return (<\n            SignInPresenter\n            handleSubmit={this.handleSubmit}\n        />);\n    }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SignIn));"]},"metadata":{},"sourceType":"module"}