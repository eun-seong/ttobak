{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T2_Count/CountContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DndProvider } from 'react-dnd';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport { T2, TTobak } from 'images';\nimport { T_Api2, soundURL, T_tutorial } from 'api';\nimport { SoundEffect } from 'images';\nimport CountPresenter from './CountPresenter';\nconst touch_sound = new Audio(SoundEffect.touch_effect);\nconst effect_sound = new Audio(SoundEffect.twinkle);\nconst idx_txt = 'count';\nconst initState = {\n  gameState: false,\n  isDragging: false,\n  touchPosition: [],\n  Apple: {\n    randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n    applesInBasket: [],\n    numOfApples: 0\n  },\n  TTobaki: TTobak.ttobak1_1,\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0\n};\n\nclass Count extends React.Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.daily = () => {\n      if (this.props.location.state.data.code === 'tutorial') {\n        this.tutorial(this.props.location.state.data);\n        return;\n      }\n\n      this.cure = this.props.location.state.data.cure;\n      console.log(this.cure.length);\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentCure.is_first = 'T';\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      this.setState({\n        totalNum: this.cure.length,\n        currentIndex: this.currentIndex + 1,\n        cureText: this.currentCure.cure_text\n      });\n      setTimeout(() => this.playSound(), 1000);\n    };\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T_Api2.ask(s_id, idx_txt);\n      console.log(data);\n\n      if (data.code === 'tutorial') {\n        this.tutorial(data);\n        return;\n      }\n\n      if (data.code === 'specified' || data.code === 1) {\n        this.currentIndex = 0;\n        this.cure = data.cure;\n        this.currentCure = data.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        this.setState({\n          totalNum: this.cure.length,\n          currentIndex: this.currentIndex + 1\n        });\n        setTimeout(() => this.playSound(), 1000);\n      } else console.log('data message: ' + data.message);\n    };\n\n    this.tutorial = data => {\n      this.setState({\n        gameState: 'tutorial'\n      });\n      this.currentCure = data.sample_ques;\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      this.voice = [new Audio(soundURL + data.tut_voice[0].voc_path), new Audio(soundURL + data.tut_voice[1].voc_path), new Audio(soundURL + data.tut_voice[2].voc_path)];\n      this.voice[0].addEventListener('ended', () => {\n        setTimeout(() => {\n          if (!!this.currentAudio) this.currentAudio.play();\n          this.setState({\n            TTobaki: TTobak.ttobak2_2\n          });\n        }, 1000);\n      });\n      this.currentAudio.addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.voice[1]) this.voice[1].play();\n        }, 1000);\n      });\n      this.voice[2].addEventListener('ended', async () => {\n        const {\n          data\n        } = await T_tutorial.answer(this.props.user.student.s_id, idx_txt, this.currentCure.cure_id);\n        console.log(data);\n        this.setState({ ...initState,\n          isImageLoaded: true\n        });\n        if (this.learning_type === 'daily') this.daily();else this.newRequest();\n        this.currentCure = null;\n        this.sample_ques = null;\n        this.voice = null;\n      });\n      setTimeout(() => {\n        if (!!this.voice[0]) this.voice[0].play();\n      }, 2000);\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.currentAudio.play();\n        this.changeTTobaki(TTobak.ttobak3_2);\n        this.setState({\n          gameState: false\n        });\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            gameState: true,\n            TTobaki: TTobak.ttobak1_1\n          });\n        });\n      }\n    };\n\n    this.TTobakiTouch = () => {\n      const {\n        gameState\n      } = this.state;\n\n      if (gameState) {\n        this.playSound();\n      }\n    };\n\n    this.changeTTobaki = ttobaki => {\n      this.setState({\n        TTobaki: ttobaki\n      });\n    };\n\n    this.answer = async () => {\n      effect_sound.play();\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      if (this.state.gameState === 'tutorial') {\n        if (!!this.voice[2]) this.voice[2].play();\n        return;\n      }\n\n      const {\n        Apple: {\n          numOfApples\n        }\n      } = this.state;\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T_Api2.answer(s_id, this.cure[this.currentIndex].cure_word.length.toString(), numOfApples.toString(), this.cure[this.currentIndex].cure_id, this.learning_type === 'review' ? 'T' : 'F', idx_txt, this.learning_type === 'daily' ? 'T' : 'F', this.currentCure.is_first);\n      console.log(data);\n\n      if (data.code === 1) {\n        if (data.correct_voice.voc_desc === 'retry') {\n          this.currentCure.is_first = 'F';\n          this.retry_script = new Audio(soundURL + data.correct_voice.voc_path);\n          this.retry_script.addEventListener('ended', () => {\n            this.setState({\n              TTobaki: TTobak.ttobak1_1,\n              Apple: {\n                randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n                applesInBasket: [],\n                numOfApples: 0\n              }\n            });\n            setTimeout(() => {\n              if (!!this.currentAudio) this.currentAudio.play();\n              this.setState({\n                TTobaki: TTobak.ttobak3_2\n              });\n            }, 1000);\n          });\n          setTimeout(() => {\n            if (!!this.retry_script) this.retry_script.play();\n            this.setState({\n              TTobaki: TTobak.ttobak3_2\n            });\n          }, 1200);\n          return;\n        } else {\n          this.good_script = new Audio(soundURL + data.correct_voice.voc_path);\n          this.good_script.addEventListener('ended', () => this.nextStep());\n          setTimeout(() => {\n            if (!!this.good_script) this.good_script.play();\n            this.setState({\n              TTobaki: TTobak.ttobak2_2\n            });\n          }, 1000);\n        }\n      }\n    };\n\n    this.nextStep = () => {\n      if (this.currentIndex < this.cure.length - 1) this.currentIndex++;else {\n        this.gameDone();\n        return;\n      }\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentCure.is_first = 'T';\n      this.currentAudio = new Audio(soundURL + this.cure[this.currentIndex].cure_path);\n      setTimeout(() => {\n        this.setState({\n          gameState: false,\n          timeOut: null,\n          isDragging: false,\n          touchPosition: [],\n          TTobaki: TTobak.ttobak1_1,\n          Apple: {\n            randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n            applesInBasket: [],\n            numOfApples: 0\n          },\n          currentIndex: this.currentIndex + 1\n        });\n      }, 1000);\n      setTimeout(() => {\n        this.playSound();\n      }, 2000);\n    };\n\n    this.createRandomApple = () => {\n      const newApple = T2.t2_Apples[Math.floor(Math.random() * 4)];\n      this.setState({\n        Apple: { ...this.state.Apple,\n          randomApple: newApple\n        }\n      });\n      return newApple;\n    };\n\n    this.dropApple = () => {\n      const {\n        Apple: {\n          applesInBasket,\n          numOfApples,\n          randomApple\n        }\n      } = this.state;\n      if (this.timeOut) clearTimeout(this.timeOut);\n      this.timeOut = setTimeout(() => {\n        this.answer();\n      }, 3000);\n      this.setState({\n        Apple: { ...this.state.Apple,\n          numOfApples: numOfApples <= 5 ? numOfApples + 1 : 5,\n          applesInBasket: applesInBasket.concat(randomApple)\n        }\n      });\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.onTreeTouchStartHandle = e => {\n      touch_sound.play();\n      this.setState({\n        isDragging: true,\n        touchPosition: [e.changedTouches[0].pageX, e.changedTouches[0].pageY]\n      });\n    };\n\n    this.onTreeTouchEndHandle = () => {\n      this.setState({\n        isDragging: false\n      });\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.push('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          if (typeof picture[i][prop] === 'object') {\n            let arr = picture[i][prop];\n\n            for (let i in arr) {\n              let img = new Image();\n              img.src = arr[i];\n\n              img.onload = () => {\n                this.setState({\n                  percent: ++this.numOfLoadedImage / this.totalImages * 100\n                });\n\n                if (this.numOfLoadedImage === this.totalImages) {\n                  this.setState({\n                    isImageLoaded: true\n                  });\n                  if (this.learning_type === 'daily') this.daily();else this.newRequest();\n                  clearTimeout(timeoutPreloading);\n                }\n              };\n            }\n          } else {\n            let img = new Image();\n            img.src = picture[i][prop];\n\n            img.onload = () => {\n              this.setState({\n                percent: ++this.numOfLoadedImage / this.totalImages * 100\n              });\n\n              if (this.numOfLoadedImage === this.totalImages) {\n                this.setState({\n                  isImageLoaded: true\n                });\n                if (this.learning_type === 'daily') this.daily();else this.newRequest();\n                clearTimeout(timeoutPreloading);\n              }\n            };\n          }\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => {\n        this.setState({\n          gameState: false,\n          timeOut: null,\n          isDragging: false,\n          touchPosition: [],\n          TTobaki: TTobak.ttobak1_1,\n          Apple: {\n            randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n            applesInBasket: [],\n            numOfApples: 0\n          }\n        });\n      }, 2000);\n      setTimeout(() => this.playSound(), 4000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n      let audioArr = [this.currentAudio, this.currentAudio, this.retryAudio, this.good_script];\n\n      for (let i = 0; i < audioArr.length; i++) {\n        if (!!audioArr[i] && !audioArr[i].paused && audioArr[i].duration > 0) {\n          audioArr[i].pause();\n          this.continuePlay = audioArr[i];\n          break;\n        }\n      }\n\n      if (!!this.voice) {\n        for (let i = 0; i < this.voice.length; i++) {\n          if (!!this.voice[i] && !this.voice[i].paused && this.voice[i].duration > 0) {\n            this.voice[i].pause();\n            this.continuePlay = this.voice[i];\n            break;\n          }\n        }\n      }\n    };\n\n    this.onCompleteButtonHandle = () => {\n      this.answer();\n      clearTimeout(this.timeOut);\n    };\n\n    this.learning_type = match.params.learning_type;\n    this.cure = null;\n    this.cureLength = 0;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.currentCure = 0;\n    this.timeOut = null;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      T2,\n      TTobak\n    };\n    this.totalImages = Object.keys(T2).length + Object.keys(TTobak).length + 3;\n    this.voc_script = null;\n    this.state = initState;\n    this.continuePlay = null;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio.remove();\n      this.currentAudio = null;\n    }\n\n    this.sample_ques = null;\n    this.voice = null;\n\n    if (!!this.voice) {\n      for (let i = 0; i < this.voice.length; i++) {\n        if (!!this.voice[i]) {\n          this.voice[i].pause();\n          this.voice[i].remove();\n          this.voice[i] = null;\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      isDragging,\n      touchPosition,\n      Apple,\n      answer,\n      TTobaki,\n      isImageLoaded,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(DndProvider, {\n        backend: TouchBackend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CountPresenter, {\n        Background: T2.t2_background,\n        Basket: T2.t2_basket,\n        TTobak: TTobaki,\n        TTobakiTouch: this.TTobakiTouch,\n        onTreeTouchStartHandle: this.onTreeTouchStartHandle,\n        onTreeTouchEndHandle: this.onTreeTouchEndHandle,\n        isDragging: isDragging,\n        touchPosition: touchPosition,\n        createRandomApple: this.createRandomApple,\n        dropApple: this.dropApple,\n        Apple: Apple,\n        answer: answer,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        bt_complete: T2.bt_complete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nCount.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Count));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T2_Count/CountContainer.js"],"names":["React","withRouter","DndProvider","TouchBackend","PropTypes","connect","LoadingComp","T2","TTobak","T_Api2","soundURL","T_tutorial","SoundEffect","CountPresenter","touch_sound","Audio","touch_effect","effect_sound","twinkle","idx_txt","initState","gameState","isDragging","touchPosition","Apple","randomApple","t2_Apples","Math","floor","random","applesInBasket","numOfApples","TTobaki","ttobak1_1","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","Count","Component","constructor","match","daily","props","location","state","data","code","tutorial","cure","console","log","length","currentCure","is_first","currentAudio","cure_path","setState","cureText","cure_text","setTimeout","playSound","newRequest","user","s_id","student","ask","message","sample_ques","voice","tut_voice","voc_path","addEventListener","play","ttobak2_2","answer","cure_id","learning_type","changeTTobaki","ttobak3_2","TTobakiTouch","ttobaki","ttobak2_1","cure_word","toString","correct_voice","voc_desc","retry_script","good_script","nextStep","gameDone","timeOut","createRandomApple","newApple","dropApple","clearTimeout","concat","onTreeTouchStartHandle","e","changedTouches","pageX","pageY","onTreeTouchEndHandle","imagesPreloading","picture","timeoutPreloading","history","push","i","prop","arr","img","Image","src","onload","numOfLoadedImage","totalImages","onContinueButtonHandle","onRestartButtonHandle","onPauseButtonHandle","audioArr","retryAudio","paused","duration","pause","continuePlay","onCompleteButtonHandle","params","cureLength","Object","keys","voc_script","componentDidMount","u_id","componentWillUnmount","remove","render","t2_background","t2_basket","bt_complete","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DndProvider } from 'react-dnd'\nimport { TouchBackend } from 'react-dnd-touch-backend';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport { T2, TTobak } from 'images';\nimport { T_Api2, soundURL, T_tutorial } from 'api';\nimport { SoundEffect } from 'images';\n\nimport CountPresenter from './CountPresenter';\n\nconst touch_sound = new Audio(SoundEffect.touch_effect);\nconst effect_sound = new Audio(SoundEffect.twinkle);\n\nconst idx_txt = 'count';\nconst initState = {\n    gameState: false,\n    isDragging: false,\n    touchPosition: [],\n    Apple: {\n        randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n        applesInBasket: [],\n        numOfApples: 0,\n    },\n    TTobaki: TTobak.ttobak1_1,\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n};\n\nclass Count extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match }) {\n        super();\n        this.learning_type = match.params.learning_type;\n        this.cure = null;\n        this.cureLength = 0;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.currentCure = 0;\n        this.timeOut = null;\n        this.numOfLoadedImage = 0;\n        this.picture = { T2, TTobak };\n        this.totalImages = Object.keys(T2).length + Object.keys(TTobak).length + 3;\n        this.voc_script = null;\n        this.state = initState;\n        this.continuePlay = null;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n        this.imagesPreloading(this.picture);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio.remove();\n            this.currentAudio = null;\n        }\n\n        this.sample_ques = null;\n        this.voice = null;\n        if (!!this.voice) {\n            for (let i = 0; i < this.voice.length; i++) {\n                if (!!this.voice[i]) {\n                    this.voice[i].pause();\n                    this.voice[i].remove();\n                    this.voice[i] = null;\n                }\n            }\n        }\n    }\n\n    daily = () => {\n        if (this.props.location.state.data.code === 'tutorial') {\n            this.tutorial(this.props.location.state.data);\n            return;\n        }\n        this.cure = this.props.location.state.data.cure;\n        console.log(this.cure.length);\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        this.setState({\n            totalNum: this.cure.length,\n            currentIndex: this.currentIndex + 1,\n            cureText: this.currentCure.cure_text,\n        });\n        setTimeout(() => this.playSound(), 1000);\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { data } = await T_Api2.ask(s_id, idx_txt);\n        console.log(data);\n\n        if (data.code === 'tutorial') {\n            this.tutorial(data);\n            return;\n        }\n\n        if (data.code === 'specified' || data.code === 1) {\n            this.currentIndex = 0;\n            this.cure = data.cure;\n            this.currentCure = data.cure[this.currentIndex];\n            this.currentCure.is_first = 'T';\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n\n            this.setState({\n                totalNum: this.cure.length,\n                currentIndex: this.currentIndex + 1,\n            });\n            setTimeout(() => this.playSound(), 1000);\n        }\n        else console.log('data message: ' + data.message);\n    }\n\n    tutorial = (data) => {\n        this.setState({\n            gameState: 'tutorial',\n        });\n\n        this.currentCure = data.sample_ques;\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n\n        this.voice = [\n            new Audio(soundURL + data.tut_voice[0].voc_path),\n            new Audio(soundURL + data.tut_voice[1].voc_path),\n            new Audio(soundURL + data.tut_voice[2].voc_path),\n        ];\n\n        this.voice[0].addEventListener('ended', () => {\n            setTimeout(() => {\n                if (!!this.currentAudio) this.currentAudio.play();\n                this.setState({\n                    TTobaki: TTobak.ttobak2_2,\n                })\n            }, 1000);\n        });\n\n        this.currentAudio.addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n            })\n            setTimeout(() => {\n                if (!!this.voice[1]) this.voice[1].play();\n            }, 1000);\n        })\n\n        this.voice[2].addEventListener('ended', async () => {\n            const { data } = await T_tutorial.answer(this.props.user.student.s_id, idx_txt, this.currentCure.cure_id);\n            console.log(data);\n            this.setState({\n                ...initState,\n                isImageLoaded: true,\n            });\n            if (this.learning_type === 'daily') this.daily();\n            else this.newRequest();\n\n            this.currentCure = null;\n            this.sample_ques = null;\n            this.voice = null;\n        });\n\n        setTimeout(() => {\n            if (!!this.voice[0]) this.voice[0].play();\n        }, 2000);\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.currentAudio.play();\n            this.changeTTobaki(TTobak.ttobak3_2);\n\n            this.setState({\n                gameState: false,\n            });\n\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    gameState: true,\n                    TTobaki: TTobak.ttobak1_1,\n                })\n            });\n        }\n    }\n\n    TTobakiTouch = () => {\n        const { gameState } = this.state;\n        if (gameState) {\n            this.playSound();\n        }\n    }\n\n    changeTTobaki = (ttobaki) => {\n        this.setState({\n            TTobaki: ttobaki\n        });\n    }\n\n    answer = async () => {\n        effect_sound.play();\n        this.setState({\n            TTobaki: TTobak.ttobak2_1\n        });\n        if (this.state.gameState === 'tutorial') {\n            if (!!this.voice[2]) this.voice[2].play();\n            return;\n        }\n        const { Apple: { numOfApples } } = this.state;\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { data } = await T_Api2.answer(\n            s_id,\n            this.cure[this.currentIndex].cure_word.length.toString(),\n            numOfApples.toString(),\n            this.cure[this.currentIndex].cure_id,\n            this.learning_type === 'review' ? 'T' : 'F',\n            idx_txt,\n            this.learning_type === 'daily' ? 'T' : 'F',\n            this.currentCure.is_first\n        );\n        console.log(data);\n\n        if (data.code === 1) {\n            if (data.correct_voice.voc_desc === 'retry') {\n                this.currentCure.is_first = 'F';\n                this.retry_script = new Audio(soundURL + data.correct_voice.voc_path);\n                this.retry_script.addEventListener('ended', () => {\n                    this.setState({\n                        TTobaki: TTobak.ttobak1_1,\n                        Apple: {\n                            randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n                            applesInBasket: [],\n                            numOfApples: 0,\n                        },\n                    });\n                    setTimeout(() => {\n                        if (!!this.currentAudio) this.currentAudio.play();\n                        this.setState({\n                            TTobaki: TTobak.ttobak3_2,\n                        });\n                    }, 1000);\n                });\n                setTimeout(() => {\n                    if (!!this.retry_script) this.retry_script.play();\n                    this.setState({\n                        TTobaki: TTobak.ttobak3_2,\n                    });\n                }, 1200);\n                return;\n            } else {\n                this.good_script = new Audio(soundURL + data.correct_voice.voc_path);\n                this.good_script.addEventListener('ended', () => this.nextStep());\n                setTimeout(() => {\n                    if (!!this.good_script) this.good_script.play();\n                    this.setState({\n                        TTobaki: TTobak.ttobak2_2,\n                    });\n                }, 1000);\n            }\n        }\n    }\n\n    nextStep = () => {\n        if (this.currentIndex < this.cure.length - 1) this.currentIndex++;\n        else {\n            this.gameDone();\n            return;\n        }\n\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        this.currentAudio = new Audio(soundURL + this.cure[this.currentIndex].cure_path);\n\n        setTimeout(() => {\n            this.setState({\n                gameState: false,\n                timeOut: null,\n                isDragging: false,\n                touchPosition: [],\n                TTobaki: TTobak.ttobak1_1,\n                Apple: {\n                    randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n                    applesInBasket: [],\n                    numOfApples: 0,\n                },\n                currentIndex: this.currentIndex + 1\n            });\n        }, 1000);\n\n        setTimeout(() => {\n            this.playSound();\n        }, 2000);\n    }\n\n    createRandomApple = () => {\n        const newApple = T2.t2_Apples[Math.floor(Math.random() * 4)];\n\n        this.setState({\n            Apple: {\n                ...this.state.Apple,\n                randomApple: newApple,\n            }\n        })\n        return newApple;\n    }\n\n    dropApple = () => {\n        const { Apple: { applesInBasket, numOfApples, randomApple } } = this.state;\n        if (this.timeOut) clearTimeout(this.timeOut);\n\n        this.timeOut = setTimeout(() => {\n            this.answer();\n        }, 3000);\n\n        this.setState({\n            Apple: {\n                ...this.state.Apple,\n                numOfApples: numOfApples <= 5 ? numOfApples + 1 : 5,\n                applesInBasket: applesInBasket.concat(randomApple),\n            },\n        });\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    onTreeTouchStartHandle = e => {\n        touch_sound.play();\n        this.setState({\n            isDragging: true,\n            touchPosition: [e.changedTouches[0].pageX, e.changedTouches[0].pageY],\n        })\n    }\n\n    onTreeTouchEndHandle = () => {\n        this.setState({\n            isDragging: false,\n        })\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.push('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                if (typeof (picture[i][prop]) === 'object') {\n                    let arr = picture[i][prop];\n                    for (let i in arr) {\n                        let img = new Image();\n                        img.src = arr[i];\n                        img.onload = () => {\n                            this.setState({\n                                percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                            })\n                            if (this.numOfLoadedImage === this.totalImages) {\n                                this.setState({\n                                    isImageLoaded: true,\n                                });\n                                if (this.learning_type === 'daily') this.daily();\n                                else this.newRequest();\n                                clearTimeout(timeoutPreloading);\n                            }\n                        };\n                    }\n                } else {\n                    let img = new Image();\n                    img.src = picture[i][prop];\n                    img.onload = () => {\n                        this.setState({\n                            percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                        })\n                        if (this.numOfLoadedImage === this.totalImages) {\n                            this.setState({\n                                isImageLoaded: true,\n                            })\n                            if (this.learning_type === 'daily') this.daily();\n                            else this.newRequest();\n                            clearTimeout(timeoutPreloading);\n                        }\n                    };\n                }\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => {\n            this.setState({\n                gameState: false,\n                timeOut: null,\n                isDragging: false,\n                touchPosition: [],\n                TTobaki: TTobak.ttobak1_1,\n                Apple: {\n                    randomApple: T2.t2_Apples[Math.floor(Math.random() * 4)],\n                    applesInBasket: [],\n                    numOfApples: 0,\n                },\n            });\n        }, 2000);\n        setTimeout(() => this.playSound(), 4000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        });\n\n        let audioArr = [this.currentAudio, this.currentAudio, this.retryAudio, this.good_script];\n\n        for (let i = 0; i < audioArr.length; i++) {\n            if (!!audioArr[i] && !audioArr[i].paused && audioArr[i].duration > 0) {\n                audioArr[i].pause();\n                this.continuePlay = audioArr[i];\n                break;\n            }\n        }\n\n        if (!!this.voice) {\n            for (let i = 0; i < this.voice.length; i++) {\n                if (!!this.voice[i] && !this.voice[i].paused && this.voice[i].duration > 0) {\n                    this.voice[i].pause();\n                    this.continuePlay = this.voice[i];\n                    break;\n                }\n            }\n        }\n    }\n\n    onCompleteButtonHandle = () => {\n        this.answer();\n        clearTimeout(this.timeOut);\n    }\n\n    render() {\n        const { isDragging, touchPosition, Apple, answer, TTobaki, isImageLoaded,\n            showPopup, showDonePopup, showDailyPopup, percent,\n            currentIndex, totalNum } = this.state;\n        if (isImageLoaded) {\n            return (\n                <DndProvider backend={TouchBackend}>\n                    <CountPresenter\n                        Background={T2.t2_background}\n                        Basket={T2.t2_basket}\n                        TTobak={TTobaki}\n                        TTobakiTouch={this.TTobakiTouch}\n                        onTreeTouchStartHandle={this.onTreeTouchStartHandle}\n                        onTreeTouchEndHandle={this.onTreeTouchEndHandle}\n                        isDragging={isDragging}\n                        touchPosition={touchPosition}\n                        createRandomApple={this.createRandomApple}\n                        dropApple={this.dropApple}\n                        Apple={Apple}\n                        answer={answer}\n                        onContinueButtonHandle={this.onContinueButtonHandle}\n                        onRestartButtonHandle={this.onRestartButtonHandle}\n                        onPauseButtonHandle={this.onPauseButtonHandle}\n                        onCompleteButtonHandle={this.onCompleteButtonHandle}\n                        showPopup={showPopup}\n                        showDailyPopup={showDailyPopup}\n                        showDonePopup={showDonePopup}\n                        currentIndex={currentIndex} totalNum={totalNum}\n                        bt_complete={T2.bt_complete}\n                    />\n                </DndProvider>\n            );\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Count));"]},"metadata":{},"sourceType":"module"}