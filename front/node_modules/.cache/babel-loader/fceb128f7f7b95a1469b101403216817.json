{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/User/SelectStudent/SelectStudentContainer.js\";\nimport React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'Components/Alert';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n  /* \n  모든 로직 추가 \n  api 가져오기\n  error 처리 등 모든 것\n   */\n  constructor() {\n    super();\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.enableAlert = false;\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.makeAlert('잘못된 접근입니다.', false, () => {\n        this.props.history.push('/root/signin');\n      });\n      return;\n    }\n\n    dispatch(user_get(user.user.u_id));\n  }\n\n  render() {\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n    const {\n      user\n    } = this.props;\n    const alertComp = this.enableAlert ? /*#__PURE__*/React.createElement(Alert, {\n      text: this.alertText,\n      isConfirm: this.isConfirm,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 47\n      }\n    }) : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, alertComp, /*#__PURE__*/React.createElement(SelectStudentPresenter, {\n      students: user.user.students || [],\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nSelectStudent.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/User/SelectStudent/SelectStudentContainer.js"],"names":["React","SelectStudentPresenter","withRouter","Alert","PropTypes","connect","user_get","student_get","SelectStudent","Component","constructor","goBack","props","history","enableAlert","makeAlert","text","isConfirm","onSubmit","onCancel","alertText","forceUpdate","componentDidMount","user","dispatch","u_id","push","render","alertComp","students","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AACxC;AACJ;AACA;AACA;AACA;AAMIC,EAAAA,WAAW,GAAG;AACV;;AADU,SAMdC,MANc,GAML,MAAM;AACX,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,MAAnB;AACH,KARa;;AAGV,SAAKG,WAAL,GAAmB,KAAnB;AACH;;AAMDC,EAAAA,SAAS,CAACC,IAAD,EAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAKL,WAAL,GAAmB,IAAnB;AACA,SAAKM,SAAL,GAAiBJ,IAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AAEA,SAAKE,WAAL;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKX,KAAtB;AACA,UAAM;AAACY,MAAAA;AAAD,QAAa,KAAKZ,KAAxB;;AAEA,QAAG,CAACW,IAAI,CAACA,IAAL,CAAUE,IAAd,EAAoB;AAChB,WAAKV,SAAL,CAAe,YAAf,EAA6B,KAA7B,EAAqC,MAAM;AACvC,aAAKH,KAAL,CAAWC,OAAX,CAAmBa,IAAnB,CAAwB,cAAxB;AACH,OAFD;AAGA;AACH;;AAEDF,IAAAA,QAAQ,CAAClB,QAAQ,CAACiB,IAAI,CAACA,IAAL,CAAUE,IAAX,CAAT,CAAR;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL;AACR;AACA;AACA;AACQ,UAAM;AAAEJ,MAAAA;AAAF,QAAW,KAAKX,KAAtB;AACA,UAAMgB,SAAS,GAAG,KAAKd,WAAL,gBAAoB,oBAAC,KAAD;AAClC,MAAA,IAAI,EAAE,KAAKM,SADuB;AAElC,MAAA,SAAS,EAAE,KAAKH,SAFkB;AAGlC,MAAA,QAAQ,EAAE,KAAKC,QAHmB;AAIlC,MAAA,QAAQ,EAAE,KAAKC,QAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,GAKZ,EALN;AAOA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,SADL,eAEI,oBAAC,sBAAD;AACI,MAAA,QAAQ,EAAEL,IAAI,CAACA,IAAL,CAAUM,QAAV,IAAsB,EADpC;AAEI,MAAA,MAAM,EAAE,KAAKlB,MAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AAnEuC;;AAAtCH,a,CAMKsB,S,GAAY;AACfP,EAAAA,IAAI,EAAEnB,SAAS,CAAC2B,QAAV,CAAmB3B,SAAS,CAAC4B,GAA7B,EAAkCC,UADzB;AAEfT,EAAAA,QAAQ,EAAEpB,SAAS,CAAC8B,IAAV,CAAeD;AAFV,C;;AAgEvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEb,IAAAA,IAAI,EAAEa,KAAK,CAACb;AAAd,GAAP;AACD;;AAED,eAAelB,OAAO,CAAC8B,eAAD,CAAP,CAAyBjC,UAAU,CAACM,aAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'Components/Alert';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n    /* \n    모든 로직 추가 \n    api 가져오기\n    error 처리 등 모든 것\n     */\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.enableAlert = false;\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        const {dispatch} = this.props;\n\n        if(!user.user.u_id) {\n            this.makeAlert('잘못된 접근입니다.', false, (() => {\n                this.props.history.push('/root/signin');\n            }));\n            return;\n        }\n\n        dispatch(user_get(user.user.u_id));\n    }\n\n    render() {\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n        const { user } = this.props;\n        const alertComp = this.enableAlert ? (<Alert \n            text={this.alertText}\n            isConfirm={this.isConfirm}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n        />) : '';\n\n        return (\n            <div>\n                {alertComp}\n                <SelectStudentPresenter\n                    students={user.user.students || []}\n                    goBack={this.goBack}\n                />\n            </div>\n            );\n    }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));"]},"metadata":{},"sourceType":"module"}