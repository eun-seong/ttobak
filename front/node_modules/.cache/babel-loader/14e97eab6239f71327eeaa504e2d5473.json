{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/StdStatistics/StdStatisticsContainer.js\";\nimport React, { useReducer } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport StdStatisticsPresenter from './StdStatisticsPresenter';\nimport Alert from 'Components/Alert';\nimport { Stat_Api } from 'api';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass StdStatstics extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.Stat = async (is_cure, period) => {\n      const {\n        user\n      } = this.props;\n      const data = await Stat_Api.ask(user.student.s_id, is_cure, period);\n\n      if (data.data.code == 'cure') {\n        this.setState({\n          amount: data.data.amount,\n          score: data.data.score,\n          voice_score: data.data.voice_score,\n          class: data.data.class,\n          code: data.data.code,\n          period: period,\n          is_ready: true\n        });\n      } else if (data.data.code === 'diagnose') {\n        this.setState({\n          score_swp: data.data.score_swp,\n          score_ph: data.data.score_ph,\n          score_foc: data.data.score_foc,\n          class: data.data.class,\n          code: data.data.code,\n          is_ready: true\n        });\n      }\n\n      console.log(data.data);\n    };\n\n    this.state = {\n      amount: {},\n      score: {},\n      voice_score: {},\n      class: {},\n      score_swp: {},\n      score_ph: {},\n      score_foc: {},\n      is_cure: true,\n      period: 'day',\n      is_ready: false\n    };\n    this.enableAlert = false;\n    const {\n      user: _user\n    } = props;\n\n    if (!_user.user.u_id || !_user.student.s_id) {\n      this.makeAlert('잘못된 접근입니다.', false, () => {\n        props.history.push('/root/signin');\n      });\n      return;\n    }\n\n    this.Stat(true, 'day');\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  render() {\n    console.log(this.props.history);\n    const {\n      user\n    } = this.props;\n    const alertComp = this.enableAlert ? /*#__PURE__*/React.createElement(Alert, {\n      text: this.alertText,\n      isConfirm: this.isConfirm,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 47\n      }\n    }) : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, alertComp, /*#__PURE__*/React.createElement(StdStatisticsPresenter, {\n      student: user.student,\n      goBack: this.goBack,\n      state: this.state,\n      Stat: this.Stat,\n      isReady: this.state.is_ready,\n      isCure: this.state.is_cure,\n      period: this.state.period,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nStdStatstics.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(StdStatstics));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/StdStatistics/StdStatisticsContainer.js"],"names":["React","useReducer","withRouter","StdStatisticsPresenter","Alert","Stat_Api","PropTypes","connect","StdStatstics","Component","constructor","props","goBack","history","Stat","is_cure","period","user","data","ask","student","s_id","code","setState","amount","score","voice_score","class","is_ready","score_swp","score_ph","score_foc","console","log","state","enableAlert","u_id","makeAlert","push","text","isConfirm","onSubmit","onCancel","alertText","forceUpdate","render","alertComp","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport StdStatisticsPresenter from './StdStatisticsPresenter';\nimport Alert from 'Components/Alert';\n\nimport { Stat_Api } from 'api';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass StdStatstics extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            amount: {},\n            score: {},\n            voice_score: {},\n            class: {},\n            score_swp: {},\n            score_ph: {},\n            score_foc: {},\n            is_cure: true,\n            period: 'day',\n            is_ready: false\n        };\n        this.enableAlert = false;\n\n        const { user } = props;\n        \n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.makeAlert('잘못된 접근입니다.', false, (() => {\n                props.history.push('/root/signin');\n            }));\n            return;\n        }\n        this.Stat(true, 'day');\n    }\n\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n\n    Stat = async (is_cure, period) => {\n        const { user } = this.props;\n        const data = await Stat_Api.ask(user.student.s_id, is_cure, period);\n        if (data.data.code == 'cure') {\n            this.setState({\n                amount: data.data.amount,\n                score: data.data.score,\n                voice_score: data.data.voice_score,\n                class: data.data.class,\n                code: data.data.code,\n                period: period,\n                is_ready: true\n            });\n        } else if (data.data.code === 'diagnose') {\n            this.setState({\n                score_swp: data.data.score_swp,\n                score_ph: data.data.score_ph,\n                score_foc: data.data.score_foc,\n                class: data.data.class,\n                code: data.data.code,\n                is_ready: true\n            });\n        }\n        console.log(data.data);\n    }\n\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    render() {\n        console.log(this.props.history);\n        const { user } = this.props;\n\n        const alertComp = this.enableAlert ? (<Alert \n            text={this.alertText}\n            isConfirm={this.isConfirm}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n        />) : '';\n\n        return (\n            <div>\n                {alertComp}\n                <StdStatisticsPresenter\n                    student={user.student}\n                    goBack={this.goBack}\n                    state={this.state}\n                    Stat={this.Stat}\n                    isReady={this.state.is_ready}\n                    isCure={this.state.is_cure}\n                    period={this.state.period}\n                    history={this.props.history}\n                />\n            </div>\n            );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(StdStatstics));"]},"metadata":{},"sourceType":"module"}