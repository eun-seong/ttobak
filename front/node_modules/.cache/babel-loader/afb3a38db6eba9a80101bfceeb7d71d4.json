{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Result/ResultContent.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport StdLevel from 'Components/StdLevel';\nimport level from 'const';\n/* styled-components */\n\nconst Component = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\nconst DiagHeader = styled.div`\n    margin: 0px 0px 20px 0px;\n    display: flex;\n    flex-direction: row;\n`;\nconst DiagSummary = styled.div`\n    padding: 1% 0% 3% 0%;\n`;\nconst DiagTitle = styled.div`\n    font-weight: bold;\n    font-size: 1.1rem;\n    margin-bottom: 5px;\n`;\nconst DiagExplain = styled.div`\n    flex: 1;\n    margin: 0px 0px 0px 3%;\n    padding: 13px;\n    border-radius: 10px;\n    font-size: 0.75rem;\n    background-color: #DFD7C4;\n`;\nconst ResultExplain = styled.div`\n    font-size: 0.9rem;\n`;\n\nconst ResultContent = ({\n  student,\n  result,\n  diagnose\n}) => {\n  document.body.style.overflow = \"visible\";\n  return /*#__PURE__*/React.createElement(Component, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DiagHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DiagSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DiagTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, diagnose.title)), /*#__PURE__*/React.createElement(DiagExplain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, diagnose.explain)), /*#__PURE__*/React.createElement(ResultExplain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, diagnose.title === '선택적집중력' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"\\uCD1D \\uBB38\\uC81C \\uC218\\uB294 \", result['총 문제 개수'], \"\\uAC1C\\uB85C, \\uD3C9\\uADE0 \\uBC1C\\uC74C \\uC815\\uD655\\uB3C4\\uB294 \", result['평균 발음 정확도'], \"% \\uC785\\uB2C8\\uB2E4.\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"\\uCD1D \\uBB38\\uC81C \\uC218\\uB294 \", result['총 문제 개수'], \"\\uAC1C\\uB85C, \\uB9DE\\uCD98 \\uBB38\\uC81C\\uC758 \\uC218\\uB294 \", result['맞은 개수'], \"\\uAC1C\\uC785\\uB2C8\\uB2E4.\")));\n};\n\nexport default ResultContent;","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Result/ResultContent.js"],"names":["React","styled","StdLevel","level","Component","div","DiagHeader","DiagSummary","DiagTitle","DiagExplain","ResultExplain","ResultContent","student","result","diagnose","document","body","style","overflow","title","explain"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;AACA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA,CAHA;AAKA,MAAMC,UAAU,GAAGL,MAAM,CAACI,GAAI;AAC9B;AACA;AACA;AACA,CAJA;AAMA,MAAME,WAAW,GAAGN,MAAM,CAACI,GAAI;AAC/B;AACA,CAFA;AAIA,MAAMG,SAAS,GAAGP,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA,CAJA;AAMA,MAAMI,WAAW,GAAGR,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMK,aAAa,GAAGT,MAAM,CAACI,GAAI;AACjC;AACA,CAFA;;AAIA,MAAMM,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AACrDC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,SAA/B;AAEA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYJ,QAAQ,CAACK,KAArB,CADJ,CADJ,eAKI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,QAAQ,CAACM,OADd,CALJ,CADJ,eAUI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESN,QAAQ,CAACK,KAAT,KAAmB,QAApB,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAcN,MAAM,CAAC,SAAD,CAApB,uEAAgDA,MAAM,CAAC,WAAD,CAAtD,0BADJ,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAcA,MAAM,CAAC,SAAD,CAApB,iEAA+CA,MAAM,CAAC,OAAD,CAArD,8BAJZ,CAVJ,CADJ;AAoBH,CAvBD;;AAyBA,eAAeF,aAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport StdLevel from 'Components/StdLevel';\n\nimport level from 'const';\n\n/* styled-components */\nconst Component = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst DiagHeader = styled.div`\n    margin: 0px 0px 20px 0px;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst DiagSummary = styled.div`\n    padding: 1% 0% 3% 0%;\n`;\n\nconst DiagTitle = styled.div`\n    font-weight: bold;\n    font-size: 1.1rem;\n    margin-bottom: 5px;\n`;\n\nconst DiagExplain = styled.div`\n    flex: 1;\n    margin: 0px 0px 0px 3%;\n    padding: 13px;\n    border-radius: 10px;\n    font-size: 0.75rem;\n    background-color: #DFD7C4;\n`;\n\nconst ResultExplain = styled.div`\n    font-size: 0.9rem;\n`;\n\nconst ResultContent = ({ student, result, diagnose }) => {\n    document.body.style.overflow = \"visible\"\n\n    return (\n        <Component>\n            <DiagHeader>\n                <DiagSummary>\n                    <DiagTitle>{diagnose.title}</DiagTitle>\n                    {/* <StdLevel text={level.level2.text} /> */}\n                </DiagSummary>\n                <DiagExplain>\n                    {diagnose.explain}\n                </DiagExplain>\n            </DiagHeader>\n            <ResultExplain>\n                {\n                    (diagnose.title === '선택적집중력') ?\n                        <div>총 문제 수는 {result['총 문제 개수']}개로, 평균 발음 정확도는 {result['평균 발음 정확도']}% 입니다.</div> :\n                        <div>총 문제 수는 {result['총 문제 개수']}개로, 맞춘 문제의 수는 {result['맞은 개수']}개입니다.</div>\n                }\n            </ResultExplain>\n        </Component>\n    );\n}\n\nexport default ResultContent;\n"]},"metadata":{},"sourceType":"module"}