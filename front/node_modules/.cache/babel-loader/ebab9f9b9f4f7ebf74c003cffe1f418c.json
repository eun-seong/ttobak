{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/AddStudent/AddStudentContainer.js\";\nimport React from 'react';\nimport AddStudentPresenter from './AddStudentPresenter';\nimport Alert from 'Components/Alert';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { student_add, response_clear } from 'Sessions/action.js';\nimport moment from 'moment';\n\nclass AddStudent extends React.Component {\n  /* \n  모든 로직 추가 \n  api 가져오기\n  error 처리 등 모든 것\n   */\n  constructor() {\n    super();\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSubmit = (e, {\n      name,\n      birth,\n      gender\n    }) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n      const icon = this.props.match.params.icon;\n\n      if (!icon) {\n        this.makeAlert('아이콘을 선택해주세요.', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      if (!name || !birth || !gender) {\n        this.makeAlert('빠진 부분 없이 입력해 주세요.', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      if (birth.length !== 8 || isNaN(birth) || !moment(birth, 'YYYYMMDD', true).isValid()) {\n        this.makeAlert('올바른 생일을 입력해 주세요.', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      if (gender !== '남자' && gender !== '여자') {\n        this.makeAlert('올바른 성별을 입력해 주세요.(예시; 여자)', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      gender = gender === '남자' ? 'm' : 'f';\n      birth = moment(birth).format('YYYY-MM-DD');\n      dispatch(student_add(name, birth, gender, icon, user.user.u_id));\n      this.isStudentAddCalled = true;\n      return true;\n    };\n\n    this.enableAlert = false;\n    this.isStudentAddCalled = false;\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.makeAlert('잘못된 접근입니다.', false, () => {\n        this.props.history.push('/root/signin');\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n\n    if (this.isStudentAddCalled && user.student.s_id && user.user.u_id) {\n      dispatch(response_clear());\n      this.makeAlert('학습자 추가가 완료되었습니다.', false, () => {\n        this.props.history.push('/main/main');\n      });\n      this.isStudentAddCalled = false;\n      return;\n    }\n\n    if (this.isStudentAddCalled && user.response.data && user.response.data.code == 2) {\n      dispatch(response_clear());\n      this.makeAlert('존재하지 않는 회원입니다.', false, () => {\n        this.enableAlert = false;\n        this.forceUpdate();\n      });\n      this.isStudentAddCalled = false;\n    }\n\n    if (this.isStudentAddCalled && user.response.data && user.response.data.code == 3) {\n      dispatch(response_clear());\n      this.makeAlert('학습자는 3명까지 추가 가능합니다.', false, () => {\n        this.enableAlert = false;\n        this.forceUpdate();\n      });\n      this.isStudentAddCalled = false;\n    }\n  }\n\n  render() {\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n    const alertComp = this.enableAlert ? /*#__PURE__*/React.createElement(Alert, {\n      text: this.alertText,\n      isConfirm: this.isConfirm,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 47\n      }\n    }) : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, alertComp, /*#__PURE__*/React.createElement(AddStudentPresenter, {\n      handleSubmit: this.handleSubmit,\n      iconNum: this.props.match.params.icon,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nAddStudent.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(AddStudent));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/AddStudent/AddStudentContainer.js"],"names":["React","AddStudentPresenter","Alert","withRouter","PropTypes","connect","student_add","response_clear","moment","AddStudent","Component","constructor","goBack","props","history","handleSubmit","e","name","birth","gender","preventDefault","user","dispatch","icon","match","params","makeAlert","enableAlert","forceUpdate","length","isNaN","isValid","format","u_id","isStudentAddCalled","text","isConfirm","onSubmit","onCancel","alertText","componentDidMount","push","componentDidUpdate","student","s_id","response","data","code","render","alertComp","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AddStudentPresenter from './AddStudentPresenter';\nimport Alert from 'Components/Alert';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { student_add, response_clear } from 'Sessions/action.js';\nimport moment from 'moment';\n\nclass AddStudent extends React.Component {\n    /* \n    모든 로직 추가 \n    api 가져오기\n    error 처리 등 모든 것\n     */\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n\n        this.enableAlert = false;\n        this.isStudentAddCalled = false;\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n\n    handleSubmit = (e, { name, birth, gender }) => {\n        e.preventDefault();\n        const { user } = this.props;\n        const { dispatch } = this.props;\n\n        const icon = this.props.match.params.icon;\n        if (!icon) {\n            this.makeAlert('아이콘을 선택해주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        if (!name || !birth || !gender) {\n            this.makeAlert('빠진 부분 없이 입력해 주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        if (birth.length !== 8 || isNaN(birth) || !moment(birth, 'YYYYMMDD', true).isValid()) {\n            this.makeAlert('올바른 생일을 입력해 주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        if (gender !== '남자' && gender !== '여자') {\n            this.makeAlert('올바른 성별을 입력해 주세요.(예시; 여자)', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        gender = (gender === '남자' ? 'm' : 'f');\n        birth = moment(birth).format('YYYY-MM-DD');\n\n        dispatch(student_add(name, birth, gender, icon, user.user.u_id));\n        this.isStudentAddCalled = true;\n\n        return true;\n    }\n\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        if (!user.user.u_id) {\n            this.makeAlert('잘못된 접근입니다.', false, (() => {\n                this.props.history.push('/root/signin');\n            }));\n        }\n    }\n\n    componentDidUpdate() {\n        const { user } = this.props;\n        const { dispatch } = this.props;\n\n        if (this.isStudentAddCalled && user.student.s_id && user.user.u_id) {\n            dispatch(response_clear());\n            this.makeAlert('학습자 추가가 완료되었습니다.', false, (() => {\n                this.props.history.push('/main/main');\n            }));\n            this.isStudentAddCalled = false;\n            return;\n        }\n\n        if (this.isStudentAddCalled && user.response.data && user.response.data.code == 2) {\n            dispatch(response_clear());\n            this.makeAlert('존재하지 않는 회원입니다.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            this.isStudentAddCalled = false;\n        }\n\n        if (this.isStudentAddCalled && user.response.data && user.response.data.code == 3) {\n            dispatch(response_clear());\n            this.makeAlert('학습자는 3명까지 추가 가능합니다.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            this.isStudentAddCalled = false;\n        }\n    }\n\n    render() {\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n\n        const alertComp = this.enableAlert ? (<Alert\n            text={this.alertText}\n            isConfirm={this.isConfirm}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n        />) : '';\n\n        return (\n            <div>\n                {alertComp}\n                <AddStudentPresenter\n                    handleSubmit={this.handleSubmit}\n                    iconNum={this.props.match.params.icon}\n                    goBack={this.goBack}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(AddStudent));"]},"metadata":{},"sourceType":"module"}