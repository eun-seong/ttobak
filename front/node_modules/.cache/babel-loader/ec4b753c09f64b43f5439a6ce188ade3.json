{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Self/SelfContainer.js\";\nimport React from 'react';\nimport SelfPresenter from './SelfPresenter';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { T1, TTobak } from 'images';\nimport { T1_Api, soundURL } from 'api';\n\nclass Self extends React.Component {\n  constructor({\n    match,\n    location\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await T1_Api.ask(s_id, this.idx_text);\n        console.log(data);\n\n        if (data.code === 'specified' || data.code === 1) {\n          this.cure = data.cure;\n          this.currentCure = data.cure[this.currentIndex];\n          this.setState({\n            cureText: this.currentCure.cure_text\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.audioListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      try {\n        if (this.audioResult.status === 'Success') {\n          const {\n            user\n          } = this.props;\n          const s_id = user.student.s_id;\n          const {\n            data\n          } = await T1_Api.answer(s_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score, this.learning_type === 'review' ? 'T' : 'F', this.currentCure.cure_id, this.idx_text);\n          console.log(data);\n\n          if (data.code === 1) {\n            if (this.currentIndex < this.cure.length - 1) {\n              this.currentIndex++;\n            } else {\n              this.gameDone();\n              return;\n            }\n\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = null;\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            setTimeout(() => {\n              this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text\n              });\n            }, 2000);\n            setTimeout(() => {\n              this.playSound();\n            }, 3500);\n          } else if (data.code === 2) {\n            this.gameDone();\n          } else console.log(data.message);\n        } else {\n          console.log(this.audioResult.message);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2\n        });\n        this.currentAudio.play();\n        this.currentAudio.addEventListener('ended', () => {\n          console.log('이제 따라 읽어볼까요?');\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            isRecording: true\n          }); // window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n        });\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('done!!');\n    };\n\n    this.idx_text = match.params.type;\n    this.learning_type = match.params.learning_type;\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.state = {\n      cureText: null,\n      isRecording: false,\n      TTobaki: TTobak.ttobak1_1\n    };\n    if (this.learning_type === 'daily') this.setState({\n      data: location.state.data\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.newRequest(); // setTimeout(() => window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text), 1000);\n\n    window.addEventListener(\"android\", async e => {\n      console.log(e.detail);\n      this.setState({\n        isRecording: false\n      });\n      this.audioResult = e.detail;\n      this.audioListener();\n    });\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n  }\n\n  render() {\n    const {\n      type,\n      cureText,\n      TTobaki,\n      isRecording\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SelfPresenter, {\n      Background: T1.t1_background,\n      TTobak: TTobaki,\n      TextBox: T1.t1_textbox,\n      type: type,\n      text: cureText,\n      isRecording: isRecording,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nSelf.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Self));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Self/SelfContainer.js"],"names":["React","SelfPresenter","withRouter","PropTypes","connect","T1","TTobak","T1_Api","soundURL","Self","Component","constructor","match","location","newRequest","console","log","user","props","s_id","student","data","ask","idx_text","code","cure","currentCure","currentIndex","setState","cureText","cure_text","e","audioListener","TTobaki","ttobak2_1","audioResult","status","answer","score","phone_score","speed_score","rhythm_score","learning_type","cure_id","length","gameDone","currentAudio","Audio","cure_path","setTimeout","ttobak1_1","playSound","message","ttobak3_2","play","addEventListener","isRecording","params","type","state","componentDidMount","u_id","history","push","window","detail","componentWillUnmount","pause","render","t1_background","t1_textbox","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SelfPresenter from './SelfPresenter';\n\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { T1, TTobak } from 'images';\nimport { T1_Api, soundURL } from 'api';\n\nclass Self extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match, location }) {\n        super();\n        this.idx_text = match.params.type;\n        this.learning_type = match.params.learning_type;\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n\n        this.state = {\n            cureText: null,\n            isRecording: false,\n            TTobaki: TTobak.ttobak1_1,\n        }\n\n        if (this.learning_type === 'daily') this.setState({\n            data: location.state.data,\n        })\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.newRequest();\n        // setTimeout(() => window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text), 1000);\n\n        window.addEventListener(\"android\", async (e) => {\n            console.log(e.detail);\n            this.setState({\n                isRecording: false,\n            })\n            this.audioResult = e.detail;\n            this.audioListener();\n        });\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await T1_Api.ask(s_id, this.idx_text);\n            console.log(data);\n\n            if (data.code === 'specified' || data.code === 1) {\n                this.cure = data.cure;\n                this.currentCure = data.cure[this.currentIndex];\n                this.setState({\n                    cureText: this.currentCure.cure_text\n                });\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    audioListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        try {\n            if (this.audioResult.status === 'Success') {\n                const { user } = this.props;\n                const s_id = user.student.s_id;\n                const { data } = await T1_Api.answer(\n                    s_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score,\n                    this.learning_type === 'review' ? 'T' : 'F',\n                    this.currentCure.cure_id,\n                    this.idx_text\n                );\n                console.log(data);\n\n                if (data.code === 1) {\n                    if (this.currentIndex < this.cure.length - 1) {\n                        this.currentIndex++;\n                    } else {\n                        this.gameDone();\n                        return;\n                    }\n                    this.currentCure = this.cure[this.currentIndex];\n                    this.currentAudio = null;\n                    this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n\n                    setTimeout(() => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak1_1,\n                            cureText: this.currentCure.cure_text\n                        });\n                    }, 2000);\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 3500);\n\n                } else if (data.code === 2) {\n                    this.gameDone();\n                }\n                else console.log(data.message);\n\n            } else {\n                console.log(this.audioResult.message);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n            });\n            this.currentAudio.play();\n            this.currentAudio.addEventListener('ended', () => {\n                console.log('이제 따라 읽어볼까요?');\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    isRecording: true,\n                })\n                // window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n            });\n        }\n    }\n\n    gameDone = () => {\n        console.log('done!!');\n    }\n\n    render() {\n        const { type, cureText, TTobaki, isRecording } = this.state;\n\n        return (<SelfPresenter\n            Background={T1.t1_background}\n            TTobak={TTobaki}\n            TextBox={T1.t1_textbox}\n            type={type}\n            text={cureText}\n            isRecording={isRecording}\n        />);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Self));"]},"metadata":{},"sourceType":"module"}