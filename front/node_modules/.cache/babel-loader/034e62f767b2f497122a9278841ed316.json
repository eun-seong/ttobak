{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignIn/SignInContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'Components/Alert';\nimport SignInPresenter from './SignInPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_autologin, user_signin, response_clear } from 'Sessions/action.js';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = (e, {\n      email,\n      pw\n    }) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n\n      if (!email || !pw) {\n        this.makeAlert('빠진 부분 없이 입력해 주세요.', false, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n        return false;\n      }\n\n      dispatch(user_signin(email, pw));\n      this.isSigninCalled = true;\n    };\n\n    const {\n      dispatch: _dispatch\n    } = this.props;\n    this.enableAlert = false;\n    this.isSigninCalled = false;\n\n    _dispatch(user_autologin());\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n    const {\n      history\n    } = this.props;\n\n    if (user.isLoggedIn) {\n      this.props.history.push('/root/selectstd');\n      this.isSigninCalled = false;\n      return;\n    }\n\n    if (this.isSigninCalled && user.response.data && user.response.data.code !== 1) {\n      dispatch(response_clear());\n      this.makeAlert('이메일과 비밀번호를 다시 확인해주세요.', false, () => {\n        this.enableAlert = false;\n        this.forceUpdate();\n      });\n      this.isSigninCalled = false;\n    }\n  }\n\n  render() {\n    const alertComp = this.enableAlert ? /*#__PURE__*/React.createElement(Alert, {\n      text: this.alertText,\n      isConfirm: this.isConfirm,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 47\n      }\n    }) : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, alertComp, /*#__PURE__*/React.createElement(SignInPresenter, {\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nSignIn.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SignIn));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignIn/SignInContainer.js"],"names":["React","withRouter","Alert","SignInPresenter","PropTypes","connect","user_autologin","user_signin","response_clear","SignIn","Component","constructor","props","handleSubmit","e","email","pw","preventDefault","user","dispatch","makeAlert","enableAlert","forceUpdate","isSigninCalled","text","isConfirm","onSubmit","onCancel","alertText","componentDidUpdate","history","isLoggedIn","push","response","data","code","render","alertComp","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'Components/Alert';\nimport SignInPresenter from './SignInPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_autologin, user_signin, response_clear } from 'Sessions/action.js';\n\nclass SignIn extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const { dispatch } = this.props;\n\n        this.enableAlert = false;\n        this.isSigninCalled = false;\n\n        dispatch(user_autologin());\n    }\n\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n\n    handleSubmit = (e, { email, pw }) => {\n        e.preventDefault();\n        const { user } = this.props;\n        const { dispatch } = this.props;\n\n        if (!email || !pw ) {\n            this.makeAlert('빠진 부분 없이 입력해 주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            return false;\n        }\n\n        dispatch(user_signin(email, pw));\n        this.isSigninCalled = true;\n    }\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    componentDidUpdate() {\n        const { user } = this.props;\n        const { dispatch } = this.props;\n        const { history } = this.props;\n        \n        if (user.isLoggedIn) {\n            this.props.history.push('/root/selectstd');\n            this.isSigninCalled = false;\n            return;\n        }\n\n        if (this.isSigninCalled && user.response.data && user.response.data.code !== 1) {\n            dispatch(response_clear());\n            this.makeAlert('이메일과 비밀번호를 다시 확인해주세요.', false, (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n            this.isSigninCalled = false;\n        }\n    }\n\n\n    render() {\n\n        const alertComp = this.enableAlert ? (<Alert \n            text={this.alertText}\n            isConfirm={this.isConfirm}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n        />) : '';\n\n        return (\n            <div>\n                {alertComp}\n                <SignInPresenter\n                    handleSubmit={this.handleSubmit}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SignIn));"]},"metadata":{},"sourceType":"module"}