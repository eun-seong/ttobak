{"ast":null,"code":"import { api } from '../api.js';\nimport { USER_AUTOLOGIN } from './action';\nimport { USER_LOGOUT } from './action';\nimport { USER_DELETE } from './action';\nexport default (() => {\n  return next => action => {\n    if (!action.promise) {\n      const {\n        type,\n        ...rest\n      } = action;\n\n      if (type === USER_AUTOLOGIN) {\n        const u_id = window.localStorage.getItem('uid');\n        console.log(action);\n\n        if (u_id) {\n          return next({ ...rest,\n            data: {\n              u_id\n            },\n            type: `${type}_SUCCESS`\n          });\n        } else {\n          return next({ ...rest,\n            type: `${type}_FAILURE`\n          });\n        }\n      } else if (type === USER_LOGOUT) {\n        window.localStorage.removeItem('uid');\n        return next({ ...rest,\n          type: `${type}_SUCCESS`\n        });\n      } else {\n        return next({ ...rest,\n          type: `${type}_SUCCESS`\n        });\n      }\n    }\n\n    const {\n      promise,\n      type,\n      ...rest\n    } = action;\n\n    if (type === USER_DELETE) {\n      window.localStorage.removeItem('uid');\n    }\n\n    next({ ...rest,\n      type: `${type}_REQUEST`\n    });\n    return api.post(promise.url, promise.data).then(result => {\n      if (result.data.code === 1) next({ ...rest,\n        result,\n        type: `${type}_SUCCESS`\n      });else next({ ...rest,\n        result,\n        type: `${type}_FAILURE`\n      });\n    }).catch(error => {\n      next({ ...rest,\n        error,\n        type: `${type}_FAILURE`\n      });\n    });\n  };\n});","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Sessions/promiseMiddleware.js"],"names":["api","USER_AUTOLOGIN","USER_LOGOUT","USER_DELETE","next","action","promise","type","rest","u_id","window","localStorage","getItem","console","log","data","removeItem","post","url","then","result","code","catch","error"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,gBAAe,MAAM;AACnB,SAAOC,IAAI,IAAIC,MAAM,IAAI;AACvB,QAAG,CAACA,MAAM,CAACC,OAAX,EAAoB;AAClB,YAAM;AAACC,QAAAA,IAAD;AAAO,WAAGC;AAAV,UAAkBH,MAAxB;;AACA,UAAGE,IAAI,KAAKN,cAAZ,EAA4B;AAC1B,cAAMQ,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,CAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;;AACA,YAAGI,IAAH,EAAS;AACP,iBAAOL,IAAI,CAAC,EAAC,GAAGI,IAAJ;AAAUO,YAAAA,IAAI,EAAE;AAACN,cAAAA;AAAD,aAAhB;AAAwBF,YAAAA,IAAI,EAAG,GAAEA,IAAK;AAAtC,WAAD,CAAX;AACD,SAFD,MAEO;AACL,iBAAOH,IAAI,CAAC,EAAC,GAAGI,IAAJ;AAAUD,YAAAA,IAAI,EAAG,GAAEA,IAAK;AAAxB,WAAD,CAAX;AACD;AACF,OARD,MAQO,IAAGA,IAAI,KAAKL,WAAZ,EAAyB;AAC9BQ,QAAAA,MAAM,CAACC,YAAP,CAAoBK,UAApB,CAA+B,KAA/B;AACA,eAAOZ,IAAI,CAAC,EAAC,GAAGI,IAAJ;AAAUD,UAAAA,IAAI,EAAG,GAAEA,IAAK;AAAxB,SAAD,CAAX;AACD,OAHM,MAGA;AACL,eAAOH,IAAI,CAAC,EAAC,GAAGI,IAAJ;AAAUD,UAAAA,IAAI,EAAG,GAAEA,IAAK;AAAxB,SAAD,CAAX;AACD;AACF;;AAED,UAAM;AAAED,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiB,SAAGC;AAApB,QAA6BH,MAAnC;;AACA,QAAGE,IAAI,KAAKJ,WAAZ,EAAyB;AACvBO,MAAAA,MAAM,CAACC,YAAP,CAAoBK,UAApB,CAA+B,KAA/B;AACD;;AAEDZ,IAAAA,IAAI,CAAC,EAAE,GAAGI,IAAL;AAAWD,MAAAA,IAAI,EAAG,GAAEA,IAAK;AAAzB,KAAD,CAAJ;AACA,WAAOP,GAAG,CAACiB,IAAJ,CAASX,OAAO,CAACY,GAAjB,EAAsBZ,OAAO,CAACS,IAA9B,EACJI,IADI,CACCC,MAAM,IAAI;AACd,UAAGA,MAAM,CAACL,IAAP,CAAYM,IAAZ,KAAqB,CAAxB,EAA2BjB,IAAI,CAAC,EAAE,GAAGI,IAAL;AAAWY,QAAAA,MAAX;AAAmBb,QAAAA,IAAI,EAAG,GAAEA,IAAK;AAAjC,OAAD,CAAJ,CAA3B,KACKH,IAAI,CAAC,EAAE,GAAGI,IAAL;AAAWY,QAAAA,MAAX;AAAmBb,QAAAA,IAAI,EAAG,GAAEA,IAAK;AAAjC,OAAD,CAAJ;AACN,KAJI,EAKJe,KALI,CAKEC,KAAK,IAAI;AACdnB,MAAAA,IAAI,CAAC,EAAE,GAAGI,IAAL;AAAWe,QAAAA,KAAX;AAAkBhB,QAAAA,IAAI,EAAG,GAAEA,IAAK;AAAhC,OAAD,CAAJ;AACD,KAPI,CAAP;AAQD,GAjCD;AAkCD,CAnCD","sourcesContent":["import { api } from '../api.js';\nimport { USER_AUTOLOGIN } from './action';\nimport { USER_LOGOUT } from './action';\nimport { USER_DELETE } from './action';\n\nexport default () => {\n  return next => action => {\n    if(!action.promise) {\n      const {type, ...rest} = action;\n      if(type === USER_AUTOLOGIN) {\n        const u_id = window.localStorage.getItem('uid');\n        console.log(action);\n        if(u_id) {\n          return next({...rest, data: {u_id}, type: `${type}_SUCCESS`});\n        } else {\n          return next({...rest, type: `${type}_FAILURE`});\n        }\n      } else if(type === USER_LOGOUT) {\n        window.localStorage.removeItem('uid');\n        return next({...rest, type: `${type}_SUCCESS`});\n      } else {\n        return next({...rest, type: `${type}_SUCCESS`});\n      }\n    }\n\n    const { promise, type, ...rest } = action;\n    if(type === USER_DELETE) {\n      window.localStorage.removeItem('uid');\n    }\n\n    next({ ...rest, type: `${type}_REQUEST` });\n    return api.post(promise.url, promise.data)\n      .then(result => {\n        if(result.data.code === 1) next({ ...rest, result, type: `${type}_SUCCESS` });\n        else next({ ...rest, result, type: `${type}_FAILURE` });\n      })\n      .catch(error => {\n        next({ ...rest, error, type: `${type}_FAILURE` });\n      });\n  };\n};"]},"metadata":{},"sourceType":"module"}