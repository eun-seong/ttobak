{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Recognition/RecognitionContainer.js\";\nimport React from 'react';\nimport RecognitionPresenter from './RecognitionPresenter';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TTobak, D2 } from 'images';\nimport { D2_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nclass Recognition extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await D2_Api.ask(s_id);\n        console.log(data);\n\n        if (data.code === 1) {\n          this.answers = data.answers;\n          this.phs = data.phs;\n          this.currentIndex = 0;\n          this.currentDiag = [this.getListFilter('ques_id', this.answers[this.currentIndex][0]), this.getListFilter('ques_id', this.answers[this.currentIndex][1]), this.getListFilter('ques_id', this.answers[this.currentIndex][2])];\n          this.setState({\n            gameState: false,\n            Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n            stdAnswer: null,\n            TTobaki: TTobak.ttobak1_1,\n            answerIndex: this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1\n          });\n          this.setListener();\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.setListener = () => {\n      this.phSound = [new Audio(soundURL + this.currentDiag[0].ques_path1), new Audio(soundURL + this.currentDiag[1].ques_path1), new Audio(soundURL + this.currentDiag[2].ques_path1)];\n      this.phSound[2].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.phSound[0]) {\n            this.phSound[0].play();\n            this.setState({\n              isAnimate: [true, false],\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 800);\n      });\n      this.phSound[0].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.phSound[1]) {\n            this.phSound[1].play();\n            this.setState({\n              isAnimate: [false, true],\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 300);\n      });\n      this.phSound[1].addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n    };\n\n    this.getListFilter = (key, value) => {\n      return this.phs.filter(object => {\n        return object[key] === value;\n      })[0];\n    };\n\n    this.TTobakiTouch = async () => {\n      if (!!this.state.gameState) {\n        this.playSound();\n        this.setState({\n          gameState: false,\n          isAnimate: [false, false]\n        });\n      }\n    };\n\n    this.onBoxTouchHandle = async id => {\n      const {\n        Box,\n        answerIndex,\n        TTobaki,\n        gameState\n      } = this.state;\n      if (!gameState) return;\n\n      switch (id) {\n        case 0:\n          this.setState({\n            gameState: false,\n            Box: [answerIndex === id ? D2.d2_Box1_3 : D2.d2_Box1_2, Box[1]],\n            TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki]\n          });\n          break;\n\n        case 1:\n          this.setState({\n            gameState: false,\n            Box: [Box[0], answerIndex === id ? D2.d2_Box2_3 : D2.d2_Box2_2],\n            TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki]\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      this.finished(id);\n    };\n\n    this.animateBox = index => {\n      if (!index) this.setState({\n        isAnimate: [true, false]\n      });else this.setState({\n        isAnimate: [true, true]\n      });\n    };\n\n    this.playSound = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak3_2\n      });\n      if (!!this.phSound[2]) this.phSound[2].play();\n    };\n\n    this.diagDone = () => {\n      console.log('diagnose done!');\n      this.setState({\n        showNextPopup: true\n      });\n    };\n\n    this.finished = async id => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const [ph, oriAnswer, stdAnswer] = [[this.currentDiag[0].ques_id, this.currentDiag[1].ques_id], this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? this.currentDiag[0].ques_char : this.currentDiag[1].ques_char, this.currentDiag[id].ques_char];\n\n      try {\n        const {\n          data\n        } = await D2_Api.answer(s_id, oriAnswer, stdAnswer, ph);\n        console.log(data);\n\n        if (data.code === 1) {\n          if (this.currentIndex < this.answers.length - 1) this.currentIndex++;else {\n            this.diagDone();\n            return;\n          }\n          this.currentDiag = [this.getListFilter('ques_id', this.answers[this.currentIndex][0]), this.getListFilter('ques_id', this.answers[this.currentIndex][1]), this.getListFilter('ques_id', this.answers[this.currentIndex][2])];\n          this.setListener();\n          setTimeout(() => {\n            this.setState({\n              gameState: false,\n              Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n              stdAnswer: null,\n              TTobaki: TTobak.ttobak3_1,\n              answerIndex: this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1\n            });\n          }, 2000);\n          setTimeout(() => {\n            this.playSound();\n          }, 3000);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 1000);\n            }\n          };\n        }\n      }\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.replace('/diagnose/attention');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.state = {\n      gameState: false,\n      Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n      // Box 이미지\n      TTobaki: TTobak.ttobak3_1,\n      oriAnswer: null,\n      // 정답\n      stdAnswer: null,\n      // 학생 답\n      answerIndex: 0,\n      isAnimate: [false, false],\n      isImageLoaded: false,\n      showPopup: false,\n      showNextPopup: true\n    };\n    this.phs = null;\n    this.answers = null;\n    this.phSound = null;\n    this.answer = null;\n    this.currentIndex = 0;\n    this.currentDiag = null;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D2,\n      TTobak\n    };\n    this.totalImages = Object.keys(D2).length + Object.keys(TTobak).length;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    this.newRequest();\n    this.imagesPreloading(this.picture);\n  }\n\n  componentWillUnmount() {\n    for (var i = 0; i < this.phSound.length; i++) {\n      if (!!this.phSound[i]) {\n        this.phSound[i].pause();\n        this.phSound[i] = null;\n      }\n    }\n  }\n\n  render() {\n    const {\n      Box,\n      TTobaki,\n      isAnimate,\n      showPopup,\n      showNextPopup,\n      percent,\n      isImageLoaded\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(RecognitionPresenter, {\n        Background: D2.d2_background,\n        TTobaki: TTobaki,\n        TTobakiTouch: this.TTobakiTouch,\n        Box: Box,\n        Clicked: this.onBoxTouchHandle,\n        isAnimate: isAnimate,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nRecognition.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Recognition));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Recognition/RecognitionContainer.js"],"names":["React","RecognitionPresenter","withRouter","PropTypes","connect","TTobak","D2","D2_Api","soundURL","LoadingComp","Recognition","PureComponent","constructor","newRequest","console","log","user","props","s_id","student","data","ask","code","answers","phs","currentIndex","currentDiag","getListFilter","setState","gameState","Box","d2_Box1_1","d2_Box2_1","stdAnswer","TTobaki","ttobak1_1","answerIndex","ques_id","setListener","e","phSound","Audio","ques_path1","addEventListener","setTimeout","play","isAnimate","ttobak3_2","key","value","filter","object","TTobakiTouch","state","playSound","onBoxTouchHandle","id","d2_Box1_3","d2_Box1_2","ttobak2_1","d2_Box2_3","d2_Box2_2","finished","animateBox","index","diagDone","showNextPopup","ph","oriAnswer","ques_char","answer","length","ttobak3_1","imagesPreloading","picture","i","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","isImageLoaded","onPopupButtonHandle","history","replace","onContinueButtonHandle","showPopup","onPauseButtonHandle","Object","keys","componentDidMount","u_id","push","componentWillUnmount","pause","render","d2_background","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport RecognitionPresenter from './RecognitionPresenter';\nimport { withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { TTobak, D2 } from 'images';\nimport { D2_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nclass Recognition extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n        this.state = {\n            gameState: false,\n            Box: [D2.d2_Box1_1, D2.d2_Box2_1],          // Box 이미지\n            TTobaki: TTobak.ttobak3_1,\n            oriAnswer: null,                            // 정답\n            stdAnswer: null,                            // 학생 답\n            answerIndex: 0,\n            isAnimate: [false, false],\n            isImageLoaded: false,\n            showPopup: false,\n            showNextPopup: true,\n        };\n\n        this.phs = null;\n        this.answers = null;\n        this.phSound = null;\n        this.answer = null;\n        this.currentIndex = 0;\n        this.currentDiag = null;\n        this.numOfLoadedImage = 0;\n        this.picture = { D2, TTobak };\n        this.totalImages = Object.keys(D2).length + Object.keys(TTobak).length;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        this.newRequest();\n        this.imagesPreloading(this.picture);\n    }\n\n    componentWillUnmount() {\n        for (var i = 0; i < this.phSound.length; i++) {\n            if (!!this.phSound[i]) {\n                this.phSound[i].pause();\n                this.phSound[i] = null;\n            }\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await D2_Api.ask(s_id);\n            console.log(data);\n\n            if (data.code === 1) {\n                this.answers = data.answers;\n                this.phs = data.phs;\n                this.currentIndex = 0;\n                this.currentDiag = [\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][0]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][1]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][2]),\n                ];\n                this.setState({\n                    gameState: false,\n                    Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n                    stdAnswer: null,\n                    TTobaki: TTobak.ttobak1_1,\n                    answerIndex: (this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1),\n                });\n                this.setListener();\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    setListener = () => {\n        this.phSound = [\n            new Audio(soundURL + this.currentDiag[0].ques_path1),\n            new Audio(soundURL + this.currentDiag[1].ques_path1),\n            new Audio(soundURL + this.currentDiag[2].ques_path1),\n        ];\n\n        this.phSound[2].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.phSound[0]) {\n                    this.phSound[0].play();\n                    this.setState({\n                        isAnimate: [true, false],\n                        TTobaki: TTobak.ttobak3_2\n                    });\n                }\n            }, 800);\n        })\n\n        this.phSound[0].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.phSound[1]) {\n                    this.phSound[1].play();\n                    this.setState({\n                        isAnimate: [false, true],\n                        TTobaki: TTobak.ttobak3_2\n                    });\n                }\n            }, 300);\n        })\n        this.phSound[1].addEventListener('ended', () => {\n            this.setState({\n                gameState: true,\n                TTobaki: TTobak.ttobak1_1\n            })\n        });\n    }\n\n    getListFilter = (key, value) => {\n        return this.phs.filter((object) => { return object[key] === value })[0]\n    }\n\n    TTobakiTouch = async () => {\n        if (!!this.state.gameState) {\n            this.playSound();\n            this.setState({\n                gameState: false,\n                isAnimate: [false, false]\n            })\n        }\n    }\n\n    onBoxTouchHandle = async (id) => {\n        const { Box, answerIndex, TTobaki, gameState } = this.state;\n        if (!gameState) return;\n\n        switch (id) {\n            case 0:\n                this.setState({\n                    gameState: false,\n                    Box: [answerIndex === id ? D2.d2_Box1_3 : D2.d2_Box1_2, Box[1]],\n                    TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki],\n                });\n                break;\n            case 1:\n                this.setState({\n                    gameState: false,\n                    Box: [Box[0], answerIndex === id ? D2.d2_Box2_3 : D2.d2_Box2_2],\n                    TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki],\n                });\n                break;\n            default:\n                break;\n        }\n\n        this.finished(id);\n    }\n\n    animateBox = (index) => {\n        if (!index)\n            this.setState({\n                isAnimate: [true, false]\n            });\n        else\n            this.setState({\n                isAnimate: [true, true]\n            });\n    }\n\n    playSound = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak3_2,\n        })\n        if (!!this.phSound[2]) this.phSound[2].play();\n    }\n\n    diagDone = () => {\n        console.log('diagnose done!');\n        this.setState({\n            showNextPopup: true,\n        });\n    }\n\n    finished = async (id) => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        })\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n        const [ph, oriAnswer, stdAnswer] = [\n            [this.currentDiag[0].ques_id, this.currentDiag[1].ques_id],\n            this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? this.currentDiag[0].ques_char : this.currentDiag[1].ques_char,\n            this.currentDiag[id].ques_char\n        ];\n\n        try {\n            const { data } = await D2_Api.answer(s_id, oriAnswer, stdAnswer, ph);\n            console.log(data);\n\n            if (data.code === 1) {\n                if (this.currentIndex < this.answers.length - 1) this.currentIndex++;\n                else {\n                    this.diagDone();\n                    return;\n                }\n\n                this.currentDiag = [\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][0]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][1]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][2]),\n                ];\n\n                this.setListener();\n                setTimeout(() => {\n                    this.setState({\n                        gameState: false,\n                        Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n                        stdAnswer: null,\n                        TTobaki: TTobak.ttobak3_1,\n                        answerIndex: (this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1),\n                    });\n                }, 2000);\n\n                setTimeout(() => {\n                    this.playSound();\n                }, 3000);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 1000);\n                    }\n                };\n            }\n        }\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.replace('/diagnose/attention');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { Box, TTobaki, isAnimate, showPopup, showNextPopup, percent, isImageLoaded } = this.state;\n\n        if (isImageLoaded) {\n            return (\n                <RecognitionPresenter\n                    Background={D2.d2_background}\n                    TTobaki={TTobaki}\n                    TTobakiTouch={this.TTobakiTouch}\n                    Box={Box}\n                    Clicked={this.onBoxTouchHandle}\n                    isAnimate={isAnimate}\n                    showPopup={showPopup}\n                    showNextPopup={showNextPopup}\n                    onPopupButtonHandle={this.onPopupButtonHandle}\n                    onContinueButtonHandle={this.onContinueButtonHandle}\n                    onPauseButtonHandle={this.onPauseButtonHandle}\n                />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Recognition));"]},"metadata":{},"sourceType":"module"}