{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL, T_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nconst inistState = {\n  cureText: null,\n  isRecording: false,\n  TTobaki: TTobak.ttobak1_1,\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0,\n  isPlaying: false,\n  RecordingCircle: false,\n  err: false,\n  errorInfo: false\n};\n\nclass Shadowing extends React.Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T1_Api.ask(s_id, this.idx_text);\n      console.log(data);\n\n      if (data.code === 'specified' || data.code === 1 || data.code === 'tutorial') {\n        this.currentIndex = 0;\n        this.cure = data.cure;\n        this.currentCure = data.cure[this.currentIndex];\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n        this.setState({\n          TTobaki: TTobak.ttobak1_1,\n          cureText: this.currentCure.cure_text,\n          totalNum: this.cure.length\n        });\n      }\n\n      this.intro(data.read_voice || data.tut_voice);\n    };\n\n    this.daily = () => {\n      console.log(this.props.location.state.data);\n      this.cure = this.props.location.state.data.read;\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n      this.setState({\n        totalNum: this.cure.length,\n        cureText: this.currentCure.cure_text\n      });\n      this.intro(this.props.location.state.data.read_voice || this.props.location.state.data.tut_voice);\n    };\n\n    this.intro = data => {\n      this.reac_voice = null;\n      this.read_voice = [new Audio(soundURL + data[0].voc_path)];\n      this.read_voice[0].addEventListener('ended', () => {\n        setTimeout(() => this.playSound(), 1000);\n      });\n      if (!!this.read_voice[0]) this.read_voice[0].play();\n    };\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.stopRecording = e => {\n      console.log(e.detail);\n      clearInterval(this.setRecording);\n      this.recording_end_sound.play();\n      this.setState({\n        isRecording: false,\n        RecordingCircle: false\n      });\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      if (this.audioResult.status === 'Success') {\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const {\n          data\n        } = await T1_Api.answer(s_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score, this.learning_type === 'review' ? 'T' : 'F', this.currentCure.cure_id, this.idx_text, this.learning_type === 'daily' ? 'T' : 'F');\n        console.log(data);\n\n        if (data.code === 1) {\n          if (data.retry) {\n            this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n            this.retryAudio.addEventListener('ended', () => {\n              this.setState({\n                TTobaki: TTobak.ttobak3_1\n              });\n              setTimeout(() => {\n                if (!!this.currentAudio) {\n                  this.currentAudio.play();\n                  this.setState({\n                    TTobaki: TTobak.ttobak3_2,\n                    isPlaying: true\n                  });\n                }\n              }, 3000);\n            });\n            setTimeout(() => {\n              if (!!this.retryAudio) {\n                this.retryAudio.play();\n                this.setState({\n                  TTobaki: TTobak.ttobak3_2\n                });\n              }\n            }, 1000);\n            return;\n          } else {\n            this.good_script = new Audio(soundURL + data.class_voice.voc_path);\n            this.good_script.addEventListener('ended', () => this.nextStep());\n            setTimeout(() => {\n              if (!!this.good_script) this.good_script.play();\n              this.setState({\n                TTobaki: TTobak.ttobak2_2\n              });\n            }, 1000);\n          }\n        } else if (data.code === 2) {\n          this.gameDone();\n        } else console.log(data.message);\n      } else {\n        console.log(this.audioResult.message);\n      }\n    };\n\n    this.nextStep = () => {\n      if (this.currentIndex < this.cure.length - 1) {\n        this.currentIndex++;\n      } else {\n        this.gameDone();\n        return;\n      }\n\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentAudio.remove();\n      this.currentAudio = null;\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n      setTimeout(() => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1,\n          cureText: this.currentCure.cure_text,\n          currentIndex: this.currentIndex + 1\n        });\n      }, 2000);\n      setTimeout(() => {\n        this.playSound();\n      }, 4000);\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2,\n          isPlaying: true\n        });\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            isPlaying: false\n          });\n          setTimeout(() => {\n            this.recording_start_sound.play();\n            this.setState({\n              isRecording: true,\n              RecordingCircle: true\n            });\n            this.setRecording = setInterval(() => {\n              this.setState({\n                RecordingCircle: !this.state.RecordingCircle\n              });\n            }, 500);\n            setTimeout(() => {\n              window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n            }, 200);\n          }, 800);\n        });\n        this.currentAudio.play();\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.replace('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true,\n                TTobaki: TTobak.ttobak1_1\n              });\n              clearTimeout(timeoutPreloading);\n              if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n\n      if (this.continuePlay) {\n        this.currentAudio.play();\n      }\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n\n      if (!this.currentAudio.paused) {\n        this.currentAudio.pause();\n        this.continuePlay = true;\n      }\n    };\n\n    this.onCompleteButtonHandle = () => {\n      if (this.state.isRecording) {\n        window.BRIDGE.requestStopRecording();\n      }\n    };\n\n    this.idx_text = match.params.type;\n    this.learning_type = match.params.learning_type;\n    this.recording_start_sound = new Audio(SoundEffect.recording_start);\n    this.recording_end_sound = new Audio(SoundEffect.recording_end);\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.retryAudio = null;\n    this.picture = {\n      T1,\n      TTobak\n    };\n    this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n    this.numOfLoadedImage = 0;\n    this.continuePlay = false;\n    this.state = inistState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n    window.addEventListener('android', this.androidResponse);\n    window.addEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio.remove();\n      this.currentAudio = null;\n    }\n\n    if (!!this.retryAudio) {\n      this.retryAudio.pause();\n      this.retryAudio.remove();\n      this.retryAudio = null;\n    }\n\n    window.removeEventListener('android', this.androidResponse);\n    window.removeEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentDidCatch(err, errorInfo) {\n    console.error(err);\n    this.setState(() => ({\n      err: true,\n      errorInfo: errorInfo\n    }));\n\n    if (process.env.NODE_ENV === 'production') {\n      Sentry.captureException(err, {\n        extra: errorInfo\n      });\n    }\n  }\n\n  render() {\n    const {\n      cureText,\n      TTobaki,\n      RecordingCircle,\n      isImageLoaded,\n      isPlaying,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (this.state.err) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 20\n        }\n      }, \"error\");\n    }\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(ShadowingPresenter, {\n        Background: T1.t1_background,\n        TextBox: T1.t1_textbox,\n        bt_complete: T1.bt_complete,\n        TTobak: TTobaki,\n        isPlaying: isPlaying,\n        text: cureText,\n        RecordingCircle: RecordingCircle,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nShadowing.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js"],"names":["React","withRouter","PropTypes","connect","Sentry","ShadowingPresenter","T1","TTobak","SoundEffect","T1_Api","soundURL","T_tutorial","LoadingComp","inistState","cureText","isRecording","TTobaki","ttobak1_1","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","isPlaying","RecordingCircle","err","errorInfo","Shadowing","Component","constructor","match","newRequest","console","log","user","props","s_id","student","data","ask","idx_text","code","cure","currentCure","currentAudio","Audio","cure_path","cure_text","cure_word","setState","length","intro","read_voice","tut_voice","daily","location","state","read","reac_voice","voc_path","addEventListener","setTimeout","playSound","play","androidResponse","e","detail","audioResult","andriodListener","stopRecording","clearInterval","setRecording","recording_end_sound","ttobak2_1","status","answer","score","phone_score","speed_score","rhythm_score","learning_type","cure_id","retry","retryAudio","class_voice","ttobak3_1","ttobak3_2","good_script","nextStep","ttobak2_2","gameDone","message","remove","recording_start_sound","setInterval","window","BRIDGE","recordAudio","gender","imagesPreloading","picture","timeoutPreloading","history","replace","i","prop","img","Image","src","onload","numOfLoadedImage","totalImages","clearTimeout","onContinueButtonHandle","continuePlay","onRestartButtonHandle","onPauseButtonHandle","paused","pause","onCompleteButtonHandle","requestStopRecording","params","type","recording_start","recording_end","Object","keys","componentDidMount","u_id","push","componentWillUnmount","removeEventListener","componentDidCatch","error","process","env","NODE_ENV","captureException","extra","render","t1_background","t1_textbox","bt_complete","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { T1, TTobak, SoundEffect } from 'images';\nimport { T1_Api, soundURL, T_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nconst inistState = {\n    cureText: null,\n    isRecording: false,\n    TTobaki: TTobak.ttobak1_1,\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n    isPlaying: false,\n    RecordingCircle: false,\n    err: false,\n    errorInfo: false,\n};\n\nclass Shadowing extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match }) {\n        super();\n        this.idx_text = match.params.type;\n        this.learning_type = match.params.learning_type;\n        this.recording_start_sound = new Audio(SoundEffect.recording_start);\n        this.recording_end_sound = new Audio(SoundEffect.recording_end);\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n        this.retryAudio = null;\n        this.picture = { T1, TTobak };\n        this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n        this.numOfLoadedImage = 0;\n        this.continuePlay = false;\n        this.state = inistState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener('android', this.androidResponse);\n        window.addEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio.remove();\n            this.currentAudio = null;\n        }\n        if (!!this.retryAudio) {\n            this.retryAudio.pause();\n            this.retryAudio.remove();\n            this.retryAudio = null;\n        }\n        window.removeEventListener('android', this.androidResponse);\n        window.removeEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentDidCatch(err, errorInfo) {\n        console.error(err);\n        this.setState(() => ({\n            err: true,\n            errorInfo: errorInfo,\n        }));\n\n        if (process.env.NODE_ENV === 'production') {\n            Sentry.captureException(err, { extra: errorInfo });\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { data } = await T1_Api.ask(s_id, this.idx_text);\n        console.log(data);\n\n\n        if (data.code === 'specified' || data.code === 1 || data.code === 'tutorial') {\n            this.currentIndex = 0;\n            this.cure = data.cure;\n            this.currentCure = data.cure[this.currentIndex];\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                this.currentCure.cure_text = this.currentCure.cure_word;\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text,\n                totalNum: this.cure.length,\n            });\n        }\n        this.intro(data.read_voice || data.tut_voice);\n    }\n\n    daily = () => {\n        console.log(this.props.location.state.data);\n\n        this.cure = this.props.location.state.data.read;\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n            this.currentCure.cure_text = this.currentCure.cure_word;\n\n        this.setState({\n            totalNum: this.cure.length,\n            cureText: this.currentCure.cure_text\n        });\n        this.intro(this.props.location.state.data.read_voice || this.props.location.state.data.tut_voice);\n    }\n\n    intro = (data) => {\n        this.reac_voice = null;\n        this.read_voice = [\n            new Audio(soundURL + data[0].voc_path),\n        ];\n\n        this.read_voice[0].addEventListener('ended', () => {\n            setTimeout(() => this.playSound(), 1000);\n        });\n\n        if (!!this.read_voice[0]) this.read_voice[0].play();\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    stopRecording = (e) => {\n        console.log(e.detail);\n        clearInterval(this.setRecording);\n        this.recording_end_sound.play();\n        this.setState({\n            isRecording: false,\n            RecordingCircle: false,\n        });\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        if (this.audioResult.status === 'Success') {\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const { data } = await T1_Api.answer(\n                s_id,\n                this.audioResult.score,\n                this.audioResult.phone_score,\n                this.audioResult.speed_score,\n                this.audioResult.rhythm_score,\n                this.learning_type === 'review' ? 'T' : 'F',\n                this.currentCure.cure_id,\n                this.idx_text,\n                this.learning_type === 'daily' ? 'T' : 'F',\n            );\n            console.log(data);\n\n            if (data.code === 1) {\n                if (data.retry) {\n                    this.retryAudio = new Audio(soundURL + data.class_voice.voc_path);\n                    this.retryAudio.addEventListener('ended', () => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak3_1,\n                        })\n                        setTimeout(() => {\n                            if (!!this.currentAudio) {\n                                this.currentAudio.play();\n                                this.setState({\n                                    TTobaki: TTobak.ttobak3_2,\n                                    isPlaying: true,\n                                })\n                            }\n                        }, 3000);\n                    });\n\n                    setTimeout(() => {\n                        if (!!this.retryAudio) {\n                            this.retryAudio.play();\n                            this.setState({\n                                TTobaki: TTobak.ttobak3_2,\n                            });\n                        }\n                    }, 1000);\n                    return;\n                } else {\n                    this.good_script = new Audio(soundURL + data.class_voice.voc_path);\n                    this.good_script.addEventListener('ended', () => this.nextStep());\n                    setTimeout(() => {\n                        if (!!this.good_script) this.good_script.play();\n                        this.setState({\n                            TTobaki: TTobak.ttobak2_2,\n                        });\n                    }, 1000);\n                }\n\n            } else if (data.code === 2) {\n                this.gameDone();\n            }\n            else console.log(data.message);\n\n        } else {\n            console.log(this.audioResult.message);\n        }\n    }\n\n    nextStep = () => {\n        if (this.currentIndex < this.cure.length - 1) {\n            this.currentIndex++;\n        } else {\n            this.gameDone();\n            return;\n        }\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentAudio.remove();\n        this.currentAudio = null;\n        this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n        if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n            this.currentCure.cure_text = this.currentCure.cure_word;\n\n        setTimeout(() => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text,\n                currentIndex: this.currentIndex + 1\n            });\n        }, 2000);\n\n        setTimeout(() => {\n            this.playSound();\n        }, 4000);\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n                isPlaying: true,\n            });\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    isPlaying: false,\n                });\n                setTimeout(() => {\n                    this.recording_start_sound.play();\n                    this.setState({\n                        isRecording: true,\n                        RecordingCircle: true,\n                    })\n                    this.setRecording = setInterval(() => {\n                        this.setState({\n                            RecordingCircle: !this.state.RecordingCircle,\n                        });\n                    }, 500);\n                    setTimeout(() => {\n                        window.BRIDGE.recordAudio(this.props.user.student.gender, this.currentCure.cure_text);\n                    }, 200);\n                }, 800);\n            });\n            this.currentAudio.play();\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.replace('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                            TTobaki: TTobak.ttobak1_1,\n                        });\n                        clearTimeout(timeoutPreloading);\n                        if (this.learning_type !== 'daily') this.newRequest();\n                        else this.daily();\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        });\n\n        if (this.continuePlay) {\n            this.currentAudio.play();\n        }\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        });\n\n        if (!this.currentAudio.paused) {\n            this.currentAudio.pause();\n            this.continuePlay = true;\n        }\n    }\n\n    onCompleteButtonHandle = () => {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n    }\n\n    render() {\n        const { cureText, TTobaki, RecordingCircle, isImageLoaded, isPlaying,\n            showPopup, showDonePopup, showDailyPopup, percent,\n            currentIndex, totalNum } = this.state;\n\n        if (this.state.err) {\n            return <div>error</div>;\n        }\n\n        if (isImageLoaded) {\n            return (<ShadowingPresenter\n                Background={T1.t1_background} TextBox={T1.t1_textbox} bt_complete={T1.bt_complete}\n                TTobak={TTobaki} isPlaying={isPlaying}\n                text={cureText} RecordingCircle={RecordingCircle}\n                onCompleteButtonHandle={this.onCompleteButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));"]},"metadata":{},"sourceType":"module"}