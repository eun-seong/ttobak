{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SelectStudent/SelectStudentContainer.js\";\nimport React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { Root_Api } from 'api';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPopup: false,\n      text: ''\n    };\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSubmit = (e, s_id) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n      dispatch(student_get(s_id, user.user.u_id));\n    };\n\n    this.onButtonTouchEnd = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n    console.log(user.user.u_id);\n\n    if (!user.user.u_id) {\n      this.setState({\n        text: '잘못된 접근입니다.',\n        showPopup: true\n      });\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    dispatch(user_get(user.user.u_id));\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n\n    if (user.student.s_id) {\n      this.props.history.push('/');\n      return;\n    }\n\n    if (user.response.data && user.response.data.code !== 1) {\n      this.setState({\n        text: '존재하지 않는 회원입니다.',\n        showPopup: true\n      });\n      return;\n    }\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SelectStudentPresenter, {\n      students: user.user.students || [],\n      handler: this.handleSubmit,\n      goBack: this.goBack,\n      showPopup: showPopup,\n      onButtonTouchEnd: this.onButtonTouchEnd,\n      showPopup: this.state.showPopup,\n      text: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nSelectStudent.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SelectStudent/SelectStudentContainer.js"],"names":["React","SelectStudentPresenter","Root_Api","withRouter","PropTypes","connect","user_get","student_get","SelectStudent","Component","state","showPopup","text","goBack","props","history","handleSubmit","e","s_id","preventDefault","user","dispatch","u_id","onButtonTouchEnd","setState","componentDidMount","console","log","push","componentDidUpdate","student","response","data","code","render","students","propTypes","objectOf","any","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { Root_Api } from 'api';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    state = {\n        showPopup: false,\n        text: '',\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n\n    handleSubmit = (e, s_id) => {\n        e.preventDefault();\n\n        const { user } = this.props;\n        const { dispatch } = this.props;\n\n        dispatch(student_get(s_id, user.user.u_id));\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        const { dispatch } = this.props;\n        console.log(user.user.u_id);\n\n        if (!user.user.u_id) {\n            this.setState({\n                text: '잘못된 접근입니다.',\n                showPopup: true,\n            })\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        dispatch(user_get(user.user.u_id));\n    }\n\n    componentDidUpdate() {\n        const { user } = this.props;\n\n        if (user.student.s_id) {\n            this.props.history.push('/');\n            return;\n        }\n\n        if (user.response.data && user.response.data.code !== 1) {\n            this.setState({\n                text: '존재하지 않는 회원입니다.',\n                showPopup: true,\n            })\n            return;\n        }\n    }\n\n    onButtonTouchEnd = () => {\n        this.setState({\n            showPopup: false,\n        });\n    }\n\n    render() {\n        const { user } = this.props;\n\n        return (<\n            SelectStudentPresenter\n            students={user.user.students || []}\n            handler={this.handleSubmit}\n            goBack={this.goBack}\n            showPopup={showPopup}\n            onButtonTouchEnd={this.onButtonTouchEnd}\n            showPopup={this.state.showPopup}\n            text={this.state.text}\n        />);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));"]},"metadata":{},"sourceType":"module"}