{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T3_Common/CommonContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { T3, TTobak } from 'images';\nimport CommonPresenter from './CommonPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport { T_Api2, soundURL } from 'api';\nconst idx_text = 'common';\nconst initState = {\n  TTobaki: TTobak.ttobak1_1,\n  gameState: false,\n  boxTextList: null,\n  isAnimate: [false, false, false, false],\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0\n};\n\nclass Common extends React.Component {\n  constructor({\n    match,\n    location: _location\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await T_Api2.ask(s_id, idx_text);\n        console.log(data);\n\n        if (data.code === 'specified' || data.code === 1) {\n          this.currentIndex = 0;\n          this.cure = data.cure;\n          this.setCurrent(0);\n          this.setState({\n            totalNum: this.cure.length\n          });\n        } else console.log('data message: ' + data.message);\n      } catch (e) {\n        console.log('error: ' + e);\n      }\n    };\n\n    this.daily = () => {\n      console.log(location.state.data.cure);\n      this.cure = location.state.data.cure;\n      this.setState = {\n        totalNum: this.cure.length\n      };\n      this.setCurrent(0);\n    };\n\n    this.setCurrent = timeout => {\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentAudio = [new Audio(soundURL + this.currentCure.com_e1path), new Audio(soundURL + this.currentCure.com_e2path), new Audio(soundURL + this.currentCure.com_e3path), new Audio(soundURL + this.currentCure.com_e4path), new Audio(soundURL + this.currentCure.com_w1path), new Audio(soundURL + this.currentCure.com_w2path), new Audio(soundURL + this.currentCure.com_w3path)];\n      this.setListener();\n      setTimeout(() => {\n        this.setState({\n          boxTextList: [this.cure[this.currentIndex].com_e1, this.cure[this.currentIndex].com_e2, this.cure[this.currentIndex].com_e3, this.cure[this.currentIndex].com_e4],\n          TTobaki: TTobak.ttobak1_1,\n          currentIndex: this.currentIndex + 1\n        });\n      }, timeout);\n    };\n\n    this.setListener = () => {\n      this.currentAudio[0].addEventListener('ended', () => {\n        this.listenerFunc(0, 500);\n      });\n      this.currentAudio[1].addEventListener('ended', () => {\n        this.listenerFunc(1, 500);\n      });\n      this.currentAudio[2].addEventListener('ended', () => {\n        this.listenerFunc(2, 500);\n      });\n      this.currentAudio[3].addEventListener('ended', () => {\n        this.listenerFunc(3, 1500);\n      });\n      this.currentAudio[4].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.currentAudio[5]) {\n            this.currentAudio[5].play();\n            this.setState({\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 1000);\n      });\n      this.currentAudio[5].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.currentAudio[6]) {\n            this.currentAudio[6].play();\n            this.setState({\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 1000);\n      });\n      this.currentAudio[6].addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n    };\n\n    this.listenerFunc = (index, time) => {\n      this.setState({\n        TTobaki: TTobak.ttobak1_1\n      });\n      setTimeout(() => {\n        if (!!this.currentAudio[index + 1]) {\n          this.currentAudio[index + 1].play();\n          this.setState({\n            TTobaki: TTobak.ttobak1_2\n          });\n        }\n      }, time);\n    };\n\n    this.playSound = () => {\n      this.setState({\n        gameState: false,\n        TTobaki: TTobak.ttobak1_2\n      });\n\n      if (!!this.currentAudio[0]) {\n        this.currentAudio[0].play();\n      }\n    };\n\n    this.onTTobakiTouchHandle = () => {\n      const {\n        gameState\n      } = this.state;\n      if (gameState) this.playSound();\n    };\n\n    this.onBoxTouchHandle = async index => {\n      const {\n        gameState\n      } = this.state;\n      if (!gameState) return;\n      this.setState({\n        TTobaki: TTobak.ttobak2_2\n      });\n\n      try {\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const {\n          boxTextList,\n          is_review\n        } = this.state;\n        const {\n          data\n        } = await T_Api2.answer(s_id, this.cure[this.currentIndex].com_ans, boxTextList[index], this.cure[this.currentIndex].com_id, is_review, idx_text, this.learning_type === 'daily' ? 'T' : 'F');\n        console.log(data);\n\n        if (data.code === 1) {\n          if (this.currentIndex < this.cure.length - 1) {\n            this.currentIndex++;\n          } else {\n            this.gameDone();\n            return;\n          }\n\n          this.setCurrent(2000);\n          setTimeout(() => {\n            this.playSound();\n          }, 4000);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.replace('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 1000);\n              clearTimeout(timeoutPreloading);\n              if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.learning_type = match.params.learning_type;\n    this.currentAudio = null;\n    this.cure = null;\n    this.currentIndex = 0;\n    this.currentCure = null;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      T3,\n      TTobak\n    };\n    this.totalImages = Object.keys(T3).length + Object.keys(TTobak).length;\n    this.state = initState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n  }\n\n  componentWillUnmount() {\n    for (var i = 0; i < 7; i++) {\n      if (!!this.currentAudio[i]) {\n        this.currentAudio[i].pause();\n        this.currentAudio[i] = null;\n      }\n    }\n  }\n\n  render() {\n    const {\n      boxTextList,\n      isAnimate,\n      TTobaki,\n      isImageLoaded,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      gameState,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(CommonPresenter, {\n        Background: T3.t3_background,\n        TTobak: TTobaki,\n        onTTobakiTouchHandle: this.onTTobakiTouchHandle,\n        boxTextList: boxTextList || ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ'],\n        onBoxTouchHandle: this.onBoxTouchHandle,\n        BoxImg: T3.t3_textbox,\n        isAnimate: isAnimate,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        gameState: gameState,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nCommon.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Common));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T3_Common/CommonContainer.js"],"names":["React","withRouter","T3","TTobak","CommonPresenter","PropTypes","connect","LoadingComp","T_Api2","soundURL","idx_text","initState","TTobaki","ttobak1_1","gameState","boxTextList","isAnimate","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","Common","Component","constructor","match","location","newRequest","console","log","user","props","s_id","student","data","ask","code","cure","setCurrent","setState","length","message","e","daily","state","timeout","currentCure","currentAudio","Audio","com_e1path","com_e2path","com_e3path","com_e4path","com_w1path","com_w2path","com_w3path","setListener","setTimeout","com_e1","com_e2","com_e3","com_e4","addEventListener","listenerFunc","play","ttobak3_2","index","time","ttobak1_2","playSound","onTTobakiTouchHandle","onBoxTouchHandle","ttobak2_2","is_review","answer","com_ans","com_id","learning_type","gameDone","imagesPreloading","picture","timeoutPreloading","history","replace","i","prop","img","Image","src","onload","numOfLoadedImage","totalImages","clearTimeout","onContinueButtonHandle","onRestartButtonHandle","onPauseButtonHandle","params","Object","keys","componentDidMount","u_id","push","componentWillUnmount","pause","render","t3_background","t3_textbox","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { T3, TTobak } from 'images';\nimport CommonPresenter from './CommonPresenter';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport { T_Api2, soundURL } from 'api';\n\nconst idx_text = 'common';\nconst initState = {\n    TTobaki: TTobak.ttobak1_1,\n    gameState: false,\n    boxTextList: null,\n    isAnimate: [false, false, false, false],\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n};\n\nclass Common extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match, location }) {\n        super();\n        this.learning_type = match.params.learning_type;\n        this.currentAudio = null;\n        this.cure = null;\n        this.currentIndex = 0;\n        this.currentCure = null;\n        this.numOfLoadedImage = 0;\n        this.picture = { T3, TTobak };\n        this.totalImages = Object.keys(T3).length + Object.keys(TTobak).length;\n\n        this.state = initState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n    }\n\n    componentWillUnmount() {\n        for (var i = 0; i < 7; i++) {\n            if (!!this.currentAudio[i]) {\n                this.currentAudio[i].pause();\n                this.currentAudio[i] = null;\n            }\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await T_Api2.ask(s_id, idx_text);\n            console.log(data);\n\n            if (data.code === 'specified' || data.code === 1) {\n                this.currentIndex = 0;\n                this.cure = data.cure;\n                this.setCurrent(0);\n\n                this.setState({\n                    totalNum: this.cure.length,\n                })\n            }\n            else console.log('data message: ' + data.message);\n        } catch (e) {\n            console.log('error: ' + e);\n        }\n    }\n\n    daily = () => {\n        console.log(location.state.data.cure);\n        this.cure = location.state.data.cure;\n        this.setState = {\n            totalNum: this.cure.length,\n        }\n        this.setCurrent(0);\n    }\n\n    setCurrent = (timeout) => {\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentAudio = [\n            new Audio(soundURL + this.currentCure.com_e1path),\n            new Audio(soundURL + this.currentCure.com_e2path),\n            new Audio(soundURL + this.currentCure.com_e3path),\n            new Audio(soundURL + this.currentCure.com_e4path),\n            new Audio(soundURL + this.currentCure.com_w1path),\n            new Audio(soundURL + this.currentCure.com_w2path),\n            new Audio(soundURL + this.currentCure.com_w3path),\n        ];\n\n        this.setListener();\n        setTimeout(() => {\n            this.setState({\n                boxTextList: [\n                    this.cure[this.currentIndex].com_e1,\n                    this.cure[this.currentIndex].com_e2,\n                    this.cure[this.currentIndex].com_e3,\n                    this.cure[this.currentIndex].com_e4],\n                TTobaki: TTobak.ttobak1_1,\n                currentIndex: this.currentIndex + 1\n            })\n        }, timeout);\n    }\n\n    setListener = () => {\n        this.currentAudio[0].addEventListener('ended', () => {\n            this.listenerFunc(0, 500);\n        });\n        this.currentAudio[1].addEventListener('ended', () => {\n            this.listenerFunc(1, 500);\n        });\n        this.currentAudio[2].addEventListener('ended', () => {\n            this.listenerFunc(2, 500);\n        });\n        this.currentAudio[3].addEventListener('ended', () => {\n            this.listenerFunc(3, 1500);\n        });\n        this.currentAudio[4].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.currentAudio[5]) {\n                    this.currentAudio[5].play();\n                    this.setState({\n                        TTobaki: TTobak.ttobak3_2\n                    })\n                }\n            }, 1000);\n        });\n        this.currentAudio[5].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.currentAudio[6]) {\n                    this.currentAudio[6].play();\n                    this.setState({\n                        TTobaki: TTobak.ttobak3_2\n                    })\n                }\n            }, 1000);\n        });\n        this.currentAudio[6].addEventListener('ended', () => {\n            this.setState({\n                gameState: true,\n                TTobaki: TTobak.ttobak1_1\n            })\n        });\n    }\n\n    listenerFunc = (index, time) => {\n        this.setState({\n            TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n            if (!!this.currentAudio[index + 1]) {\n                this.currentAudio[index + 1].play();\n                this.setState({\n                    TTobaki: TTobak.ttobak1_2\n                })\n            }\n        }, time);\n    }\n\n    playSound = () => {\n        this.setState({\n            gameState: false,\n            TTobaki: TTobak.ttobak1_2\n        });\n\n        if (!!this.currentAudio[0]) {\n            this.currentAudio[0].play();\n        }\n    }\n\n    onTTobakiTouchHandle = () => {\n        const { gameState } = this.state;\n        if (gameState) this.playSound();\n    }\n\n    onBoxTouchHandle = async (index) => {\n        const { gameState } = this.state;\n        if (!gameState) return;\n\n        this.setState({\n            TTobaki: TTobak.ttobak2_2\n        })\n\n        try {\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const { boxTextList, is_review } = this.state;\n            const { data } = await T_Api2.answer(\n                s_id,\n                this.cure[this.currentIndex].com_ans,\n                boxTextList[index],\n                this.cure[this.currentIndex].com_id,\n                is_review,\n                idx_text,\n                this.learning_type === 'daily' ? 'T' : 'F',\n            );\n            console.log(data);\n\n            if (data.code === 1) {\n                if (this.currentIndex < this.cure.length - 1) {\n                    this.currentIndex++;\n                } else {\n                    this.gameDone();\n                    return;\n                }\n\n                this.setCurrent(2000);\n\n                setTimeout(() => {\n                    this.playSound();\n                }, 4000);\n\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.replace('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 1000);\n                        clearTimeout(timeoutPreloading);\n\n                        if (this.learning_type !== 'daily') this.newRequest();\n                        else this.daily();\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { boxTextList, isAnimate, TTobaki, isImageLoaded, showPopup, showDonePopup, showDailyPopup, percent, gameState,\n            currentIndex, totalNum } = this.state;\n\n        if (isImageLoaded) {\n            return (<CommonPresenter\n                Background={T3.t3_background}\n                TTobak={TTobaki}\n                onTTobakiTouchHandle={this.onTTobakiTouchHandle}\n                boxTextList={boxTextList || ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ']}\n                onBoxTouchHandle={this.onBoxTouchHandle}\n                BoxImg={T3.t3_textbox}\n                isAnimate={isAnimate}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                gameState={gameState}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Common));"]},"metadata":{},"sourceType":"module"}