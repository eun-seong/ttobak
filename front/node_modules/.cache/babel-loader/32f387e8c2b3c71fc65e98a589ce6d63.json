{"ast":null,"code":"import axios from 'axios';\nexport const soundURL = 'https://ttobakaudio.s3-ap-northeast-2.amazonaws.com';\nexport const api = axios.create({\n  baseURL: 'http://ec2-13-125-100-8.ap-northeast-2.compute.amazonaws.com:8000/api/'\n});\nconst url = {\n  diagnose_ask: 'diagnose/ask',\n  diagnose_answer: 'diagnose/answer',\n  therapy_ask: 'cure/ask',\n  therapy_answer: 'cure/answer',\n  therapy_save: 'cure/save',\n  audio_segscore: 'segscore',\n  diag_result: 'diagnose/result',\n  statistic_ask: 'statistic/get'\n};\nconst idx_txt = {\n  swp: 'swp',\n  ph: 'ph',\n  foc: 'foc',\n  poem: 'poem',\n  text: 'text',\n  selfpoem: 'selfpoem',\n  selftext: 'selfpoem',\n  count: 'count',\n  vowelsound: 'vowelsound',\n  consocommon: 'consocommon',\n  consosound: 'consosound',\n  consomatch: 'consomatch',\n  common: 'common',\n  vowelword: 'vowelword',\n  consoword: 'consoword',\n  review: 'review'\n};\nexport const Root_Api = {\n  user_register: (email, pw, name) => api.post('user/register', {\n    'email': email,\n    'pw': pw,\n    'name': name\n  }),\n  user_signin: (email, pw) => api.post('user/signin', {\n    'email': email,\n    'pw': pw\n  }),\n  user_modify: (email, pw, name, u_id) => api.post('user/modify', {\n    'email': email,\n    'pw': pw,\n    'name': name,\n    'id': u_id\n  }),\n  user_delete: u_id => api.post('user/delete', {\n    'id': u_id\n  }),\n  user_get: u_id => api.post('user/get', {\n    'id': u_id\n  }),\n  student_add: (name, birth, gender, u_id) => api.post('student/add', {\n    'u_id': u_id,\n    'name': name,\n    'birth': birth,\n    'gender': gender\n  }),\n  student_modify: (name, birth, gender, s_id, u_id) => api.post('student/modify', {\n    's_id': s_id,\n    'u_id': u_id,\n    'name': name,\n    'birth': birth,\n    'gender': gender\n  }),\n  student_delete: (s_id, u_id) => api.post('student/delete', {\n    's_id': s_id,\n    'u_id': u_id\n  }),\n  student_get: (s_id, u_id) => api.post('student/get', {\n    's_id': s_id,\n    'u_id': u_id\n  })\n};\nexport const D1_Api = {\n  ask: s_id => api.post(url.diagnose_ask, {\n    's_id': s_id,\n    'idx_txt': idx_txt.swp\n  }),\n  answer: (s_id, ques_id, ori_answer, stu_answer) => api.post(url.diagnose_answer, {\n    's_id': s_id,\n    'ques_id': ques_id,\n    'ori_answer1': ori_answer[0],\n    'ori_answer2': ori_answer[1],\n    'stu_answer1': stu_answer[0],\n    'stu_answer2': stu_answer[1],\n    'is_review': 'F',\n    'idx_txt': idx_txt.swp\n  })\n};\nexport const D2_Api = {\n  ask: s_id => api.post(url.diagnose_ask, {\n    's_id': s_id,\n    'idx_txt': idx_txt.ph\n  }),\n  answer: (s_id, oriAnswer, stdAnswer, ph) => api.post(url.diagnose_answer, {\n    's_id': s_id,\n    'ques_id': ph[0],\n    'ques_id2': ph[1],\n    'ori_answer': oriAnswer,\n    'stu_answer': stdAnswer,\n    'is_review': 'F',\n    'idx_txt': idx_txt.ph\n  })\n};\nexport const D3_Api = {\n  ask: s_id => api.post(url.diagnose_ask, {\n    's_id': s_id,\n    'idx_txt': idx_txt.foc\n  }),\n  answer: (s_id, ques_id, full_score, phone_score, speed_score, rhythm_score) => api.post(url.diagnose_answer, {\n    's_id': s_id,\n    'idx_txt': idx_txt.foc,\n    'ques_id': ques_id,\n    'full_score': full_score,\n    'phone_score': phone_score,\n    'speed_score': speed_score,\n    'rhythm_score': rhythm_score,\n    'is_review': 'F'\n  })\n};\nexport const D_tutorial = {\n  answer: (s_id, idx_txt) => api.post(url.diagnose_answer, {\n    \"s_id\": s_id,\n    \"idx_txt\": idx_txt,\n    \"tutorial\": \"true\"\n  })\n};\nexport const Daily_Api = {\n  ask: s_id => api.post(url.therapy_ask, {\n    's_id': s_id\n  }),\n  save: s_id => api.post(url.therapy_save, {\n    's_id': s_id\n  })\n};\nexport const T_ask_api = s_id => api.post(url.therapy_ask, {\n  's_id': s_id,\n  'idx_txt': idx_txt\n});\nexport const T1_Api = {\n  ask: (s_id, idx_txt) => api.post(url.therapy_ask, {\n    's_id': s_id,\n    'idx_txt': idx_txt\n  }),\n  answer: (s_id, full_score, phone_score, speed_score, rhythm_score, is_review, cure_id, idx_txt) => api.post(url.therapy_answer, {\n    's_id': s_id,\n    'idx_txt': idx_txt,\n    'full_score': full_score,\n    'phone_score': phone_score,\n    'speed_score': speed_score,\n    'rhythm_score': rhythm_score,\n    'is_review': is_review,\n    'cure_id': cure_id\n  })\n};\nexport const T_Api2 = {\n  ask: (s_id, idx_txt) => api.post(url.therapy_ask, {\n    's_id': s_id,\n    'idx_txt': idx_txt\n  }),\n  answer: (s_id, ori_answer, stu_answer, cure_id, is_review, idx_txt) => api.post(url.therapy_answer, {\n    's_id': s_id,\n    'cure_id': cure_id,\n    'idx_txt': idx_txt,\n    'is_review': is_review || 'F',\n    'ori_answer': ori_answer,\n    'stu_answer': stu_answer\n  })\n};\nexport const T_Api3 = {\n  ask: s_id => api.post(url.therapy_ask, {\n    's_id': s_id,\n    'idx_txt': idx_txt.vowelword\n  }),\n  answer: s_id => api.post(url.therapy_answer, {\n    's_id': s_id,\n    'idx_txt': idx_txt.vowelword\n  })\n};\nexport const T_Api4 = {\n  ask: s_id => api.post(url.therapy_ask, {\n    's_id': s_id,\n    'idx_txt': idx_txt.consomatch\n  }),\n  answer: (s_id, cure_id, stu_answer, ori_answer, is_review) => api.post(url.therapy_answer, {\n    's_id': s_id,\n    'idx_txt': idx_txt.consomatch,\n    'cure_id': cure_id[0],\n    'cure_id2': cure_id[1],\n    'cure_id3': cure_id[2],\n    'stu_answer': stu_answer,\n    'ori_answer': ori_answer,\n    'is_review': is_review\n  })\n};\nexport const Result_Api = {\n  ask: s_id => api.post(url.diag_result, {\n    's_id': s_id\n  })\n};\nexport const Stat_Api = {\n  ask: (s_id, is_cure, period) => api.post(url.statistic_ask, {\n    's_id': s_id,\n    'cure_or_test': is_cure ? 'cure' : 'test',\n    'period': period\n  })\n};\nexport default api;","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/api.js"],"names":["axios","soundURL","api","create","baseURL","url","diagnose_ask","diagnose_answer","therapy_ask","therapy_answer","therapy_save","audio_segscore","diag_result","statistic_ask","idx_txt","swp","ph","foc","poem","text","selfpoem","selftext","count","vowelsound","consocommon","consosound","consomatch","common","vowelword","consoword","review","Root_Api","user_register","email","pw","name","post","user_signin","user_modify","u_id","user_delete","user_get","student_add","birth","gender","student_modify","s_id","student_delete","student_get","D1_Api","ask","answer","ques_id","ori_answer","stu_answer","D2_Api","oriAnswer","stdAnswer","D3_Api","full_score","phone_score","speed_score","rhythm_score","D_tutorial","Daily_Api","save","T_ask_api","T1_Api","is_review","cure_id","T_Api2","T_Api3","T_Api4","Result_Api","Stat_Api","is_cure","period"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,qDAAjB;AAGP,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAZ;AAIP,MAAMC,GAAG,GAAG;AACRC,EAAAA,YAAY,EAAE,cADN;AAERC,EAAAA,eAAe,EAAE,iBAFT;AAGRC,EAAAA,WAAW,EAAE,UAHL;AAIRC,EAAAA,cAAc,EAAE,aAJR;AAKRC,EAAAA,YAAY,EAAE,WALN;AAMRC,EAAAA,cAAc,EAAE,UANR;AAORC,EAAAA,WAAW,EAAE,iBAPL;AAQRC,EAAAA,aAAa,EAAE;AARP,CAAZ;AAWA,MAAMC,OAAO,GAAG;AACZC,EAAAA,GAAG,EAAE,KADO;AAEZC,EAAAA,EAAE,EAAE,IAFQ;AAGZC,EAAAA,GAAG,EAAE,KAHO;AAIZC,EAAAA,IAAI,EAAE,MAJM;AAKZC,EAAAA,IAAI,EAAE,MALM;AAMZC,EAAAA,QAAQ,EAAE,UANE;AAOZC,EAAAA,QAAQ,EAAE,UAPE;AAQZC,EAAAA,KAAK,EAAE,OARK;AASZC,EAAAA,UAAU,EAAE,YATA;AAUZC,EAAAA,WAAW,EAAE,aAVD;AAWZC,EAAAA,UAAU,EAAE,YAXA;AAYZC,EAAAA,UAAU,EAAE,YAZA;AAaZC,EAAAA,MAAM,EAAE,QAbI;AAcZC,EAAAA,SAAS,EAAE,WAdC;AAeZC,EAAAA,SAAS,EAAE,WAfC;AAgBZC,EAAAA,MAAM,EAAE;AAhBI,CAAhB;AAmBA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,EAAR,EAAYC,IAAZ,KACXjC,GAAG,CAACkC,IAAJ,CAAS,eAAT,EAA0B;AACtB,aAASH,KADa;AAEtB,UAAMC,EAFgB;AAGtB,YAAQC;AAHc,GAA1B,CAFgB;AAOpBE,EAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,EAAR,KACThC,GAAG,CAACkC,IAAJ,CAAS,aAAT,EAAwB;AACpB,aAASH,KADW;AAEpB,UAAMC;AAFc,GAAxB,CARgB;AAYpBI,EAAAA,WAAW,EAAE,CAACL,KAAD,EAAQC,EAAR,EAAYC,IAAZ,EAAkBI,IAAlB,KACTrC,GAAG,CAACkC,IAAJ,CAAS,aAAT,EAAwB;AACpB,aAASH,KADW;AAEpB,UAAMC,EAFc;AAGpB,YAAQC,IAHY;AAIpB,UAAMI;AAJc,GAAxB,CAbgB;AAmBpBC,EAAAA,WAAW,EAAGD,IAAD,IACTrC,GAAG,CAACkC,IAAJ,CAAS,aAAT,EAAwB;AACpB,UAAMG;AADc,GAAxB,CApBgB;AAuBpBE,EAAAA,QAAQ,EAAGF,IAAD,IACNrC,GAAG,CAACkC,IAAJ,CAAS,UAAT,EAAqB;AACjB,UAAMG;AADW,GAArB,CAxBgB;AA2BpBG,EAAAA,WAAW,EAAE,CAACP,IAAD,EAAOQ,KAAP,EAAcC,MAAd,EAAsBL,IAAtB,KACTrC,GAAG,CAACkC,IAAJ,CAAS,aAAT,EAAwB;AACpB,YAAQG,IADY;AAEpB,YAAQJ,IAFY;AAGpB,aAASQ,KAHW;AAIpB,cAAUC;AAJU,GAAxB,CA5BgB;AAkCpBC,EAAAA,cAAc,EAAE,CAACV,IAAD,EAAOQ,KAAP,EAAcC,MAAd,EAAsBE,IAAtB,EAA4BP,IAA5B,KACZrC,GAAG,CAACkC,IAAJ,CAAS,gBAAT,EAA2B;AACvB,YAAQU,IADe;AAEvB,YAAQP,IAFe;AAGvB,YAAQJ,IAHe;AAIvB,aAASQ,KAJc;AAKvB,cAAUC;AALa,GAA3B,CAnCgB;AA0CpBG,EAAAA,cAAc,EAAE,CAACD,IAAD,EAAOP,IAAP,KACZrC,GAAG,CAACkC,IAAJ,CAAS,gBAAT,EAA2B;AACvB,YAAQU,IADe;AAEvB,YAAQP;AAFe,GAA3B,CA3CgB;AA+CpBS,EAAAA,WAAW,EAAE,CAACF,IAAD,EAAOP,IAAP,KACTrC,GAAG,CAACkC,IAAJ,CAAS,aAAT,EAAwB;AACpB,YAAQU,IADY;AAEpB,YAAQP;AAFY,GAAxB;AAhDgB,CAAjB;AAsDP,OAAO,MAAMU,MAAM,GAAG;AAClBC,EAAAA,GAAG,EAAGJ,IAAD,IACD5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACC,YAAb,EAA2B;AACvB,YAAQwC,IADe;AAEvB,eAAWhC,OAAO,CAACC;AAFI,GAA3B,CAFc;AAMlBoC,EAAAA,MAAM,EAAE,CAACL,IAAD,EAAOM,OAAP,EAAgBC,UAAhB,EAA4BC,UAA5B,KACJpD,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACE,eAAb,EAA8B;AAC1B,YAAQuC,IADkB;AAE1B,eAAWM,OAFe;AAG1B,mBAAeC,UAAU,CAAC,CAAD,CAHC;AAI1B,mBAAeA,UAAU,CAAC,CAAD,CAJC;AAK1B,mBAAeC,UAAU,CAAC,CAAD,CALC;AAM1B,mBAAeA,UAAU,CAAC,CAAD,CANC;AAO1B,iBAAa,GAPa;AAQ1B,eAAWxC,OAAO,CAACC;AARO,GAA9B;AAPc,CAAf;AAmBP,OAAO,MAAMwC,MAAM,GAAG;AAClBL,EAAAA,GAAG,EAAGJ,IAAD,IACD5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACC,YAAb,EAA2B;AACvB,YAAQwC,IADe;AAEvB,eAAWhC,OAAO,CAACE;AAFI,GAA3B,CAFc;AAMlBmC,EAAAA,MAAM,EAAE,CAACL,IAAD,EAAOU,SAAP,EAAkBC,SAAlB,EAA6BzC,EAA7B,KACJd,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACE,eAAb,EAA8B;AAC1B,YAAQuC,IADkB;AAE1B,eAAW9B,EAAE,CAAC,CAAD,CAFa;AAG1B,gBAAYA,EAAE,CAAC,CAAD,CAHY;AAI1B,kBAAcwC,SAJY;AAK1B,kBAAcC,SALY;AAM1B,iBAAa,GANa;AAO1B,eAAW3C,OAAO,CAACE;AAPO,GAA9B;AAPc,CAAf;AAkBP,OAAO,MAAM0C,MAAM,GAAG;AAClBR,EAAAA,GAAG,EAAGJ,IAAD,IACD5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACC,YAAb,EAA2B;AACvB,YAAQwC,IADe;AAEvB,eAAWhC,OAAO,CAACG;AAFI,GAA3B,CAFc;AAMlBkC,EAAAA,MAAM,EAAE,CAACL,IAAD,EAAOM,OAAP,EAAgBO,UAAhB,EAA4BC,WAA5B,EAAyCC,WAAzC,EAAsDC,YAAtD,KACJ5D,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACE,eAAb,EAA8B;AAC1B,YAAQuC,IADkB;AAE1B,eAAWhC,OAAO,CAACG,GAFO;AAG1B,eAAWmC,OAHe;AAI1B,kBAAcO,UAJY;AAK1B,mBAAeC,WALW;AAM1B,mBAAeC,WANW;AAO1B,oBAAgBC,YAPU;AAQ1B,iBAAa;AARa,GAA9B;AAPc,CAAf;AAmBP,OAAO,MAAMC,UAAU,GAAG;AACtBZ,EAAAA,MAAM,EAAE,CAACL,IAAD,EAAOhC,OAAP,KACJZ,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACE,eAAb,EAA8B;AAC1B,YAAQuC,IADkB;AAE1B,eAAWhC,OAFe;AAG1B,gBAAY;AAHc,GAA9B;AAFkB,CAAnB;AASP,OAAO,MAAMkD,SAAS,GAAG;AACrBd,EAAAA,GAAG,EAAGJ,IAAD,IACD5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACG,WAAb,EAA0B;AACtB,YAAQsC;AADc,GAA1B,CAFiB;AAKrBmB,EAAAA,IAAI,EAAGnB,IAAD,IACF5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACK,YAAb,EAA2B;AACvB,YAAQoC;AADe,GAA3B;AANiB,CAAlB;AAWP,OAAO,MAAMoB,SAAS,GAAIpB,IAAD,IACrB5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACG,WAAb,EAA0B;AACtB,UAAQsC,IADc;AAEtB,aAAWhC;AAFW,CAA1B,CADG;AAMP,OAAO,MAAMqD,MAAM,GAAG;AAClBjB,EAAAA,GAAG,EAAE,CAACJ,IAAD,EAAOhC,OAAP,KACDZ,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACG,WAAb,EAA0B;AACtB,YAAQsC,IADc;AAEtB,eAAWhC;AAFW,GAA1B,CAFc;AAMlBqC,EAAAA,MAAM,EAAE,CAACL,IAAD,EAAOa,UAAP,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,YAA7C,EAA2DM,SAA3D,EAAsEC,OAAtE,EAA+EvD,OAA/E,KACJZ,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACI,cAAb,EAA6B;AACzB,YAAQqC,IADiB;AAEzB,eAAWhC,OAFc;AAGzB,kBAAc6C,UAHW;AAIzB,mBAAeC,WAJU;AAKzB,mBAAeC,WALU;AAMzB,oBAAgBC,YANS;AAOzB,iBAAaM,SAPY;AAQzB,eAAWC;AARc,GAA7B;AAPc,CAAf;AAmBP,OAAO,MAAMC,MAAM,GAAG;AAClBpB,EAAAA,GAAG,EAAE,CAACJ,IAAD,EAAOhC,OAAP,KACDZ,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACG,WAAb,EAA0B;AACtB,YAAQsC,IADc;AAEtB,eAAWhC;AAFW,GAA1B,CAFc;AAMlBqC,EAAAA,MAAM,EAAE,CAACL,IAAD,EAAOO,UAAP,EAAmBC,UAAnB,EAA+Be,OAA/B,EAAwCD,SAAxC,EAAmDtD,OAAnD,KACJZ,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACI,cAAb,EAA6B;AACzB,YAAQqC,IADiB;AAEzB,eAAWuB,OAFc;AAGzB,eAAWvD,OAHc;AAIzB,iBAAasD,SAAS,IAAI,GAJD;AAKzB,kBAAcf,UALW;AAMzB,kBAAcC;AANW,GAA7B;AAPc,CAAf;AAiBP,OAAO,MAAMiB,MAAM,GAAG;AAClBrB,EAAAA,GAAG,EAAGJ,IAAD,IACD5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACG,WAAb,EAA0B;AACtB,YAAQsC,IADc;AAEtB,eAAWhC,OAAO,CAACc;AAFG,GAA1B,CAFc;AAMlBuB,EAAAA,MAAM,EAAGL,IAAD,IACJ5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACI,cAAb,EAA6B;AACzB,YAAQqC,IADiB;AAEzB,eAAWhC,OAAO,CAACc;AAFM,GAA7B;AAPc,CAAf;AAaP,OAAO,MAAM4C,MAAM,GAAG;AAClBtB,EAAAA,GAAG,EAAGJ,IAAD,IACD5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACG,WAAb,EAA0B;AACtB,YAAQsC,IADc;AAEtB,eAAWhC,OAAO,CAACY;AAFG,GAA1B,CAFc;AAMlByB,EAAAA,MAAM,EAAE,CAACL,IAAD,EAAOuB,OAAP,EAAgBf,UAAhB,EAA4BD,UAA5B,EAAwCe,SAAxC,KACJlE,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACI,cAAb,EAA6B;AACzB,YAAQqC,IADiB;AAEzB,eAAWhC,OAAO,CAACY,UAFM;AAGzB,eAAW2C,OAAO,CAAC,CAAD,CAHO;AAIzB,gBAAYA,OAAO,CAAC,CAAD,CAJM;AAKzB,gBAAYA,OAAO,CAAC,CAAD,CALM;AAMzB,kBAAcf,UANW;AAOzB,kBAAcD,UAPW;AAQzB,iBAAae;AARY,GAA7B;AAPc,CAAf;AAmBP,OAAO,MAAMK,UAAU,GAAG;AACtBvB,EAAAA,GAAG,EAAGJ,IAAD,IACD5C,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACO,WAAb,EAA0B;AACtB,YAAQkC;AADc,GAA1B;AAFkB,CAAnB;AAOP,OAAO,MAAM4B,QAAQ,GAAG;AACpBxB,EAAAA,GAAG,EAAE,CAACJ,IAAD,EAAO6B,OAAP,EAAgBC,MAAhB,KACD1E,GAAG,CAACkC,IAAJ,CAAS/B,GAAG,CAACQ,aAAb,EAA4B;AACxB,YAAQiC,IADgB;AAExB,oBAAiB6B,OAAO,GAAG,MAAH,GAAY,MAFZ;AAGxB,cAAUC;AAHc,GAA5B;AAFgB,CAAjB;AASP,eAAe1E,GAAf","sourcesContent":["import axios from 'axios';\n\nexport const soundURL = 'https://ttobakaudio.s3-ap-northeast-2.amazonaws.com';\n\n\nexport const api = axios.create({\n    baseURL: 'http://ec2-13-125-100-8.ap-northeast-2.compute.amazonaws.com:8000/api/'\n});\n\nconst url = {\n    diagnose_ask: 'diagnose/ask',\n    diagnose_answer: 'diagnose/answer',\n    therapy_ask: 'cure/ask',\n    therapy_answer: 'cure/answer',\n    therapy_save: 'cure/save',\n    audio_segscore: 'segscore',\n    diag_result: 'diagnose/result',\n    statistic_ask: 'statistic/get',\n}\n\nconst idx_txt = {\n    swp: 'swp',\n    ph: 'ph',\n    foc: 'foc',\n    poem: 'poem',\n    text: 'text',\n    selfpoem: 'selfpoem',\n    selftext: 'selfpoem',\n    count: 'count',\n    vowelsound: 'vowelsound',\n    consocommon: 'consocommon',\n    consosound: 'consosound',\n    consomatch: 'consomatch',\n    common: 'common',\n    vowelword: 'vowelword',\n    consoword: 'consoword',\n    review: 'review',\n}\n\nexport const Root_Api = {\n    user_register: (email, pw, name) =>\n        api.post('user/register', {\n            'email': email,\n            'pw': pw,\n            'name': name\n        }),\n    user_signin: (email, pw) =>\n        api.post('user/signin', {\n            'email': email,\n            'pw': pw\n        }),\n    user_modify: (email, pw, name, u_id) =>\n        api.post('user/modify', {\n            'email': email,\n            'pw': pw,\n            'name': name,\n            'id': u_id\n        }),\n    user_delete: (u_id) =>\n        api.post('user/delete', {\n            'id': u_id\n        }),\n    user_get: (u_id) =>\n        api.post('user/get', {\n            'id': u_id\n        }),\n    student_add: (name, birth, gender, u_id) =>\n        api.post('student/add', {\n            'u_id': u_id,\n            'name': name,\n            'birth': birth,\n            'gender': gender\n        }),\n    student_modify: (name, birth, gender, s_id, u_id) =>\n        api.post('student/modify', {\n            's_id': s_id,\n            'u_id': u_id,\n            'name': name,\n            'birth': birth,\n            'gender': gender\n        }),\n    student_delete: (s_id, u_id) =>\n        api.post('student/delete', {\n            's_id': s_id,\n            'u_id': u_id\n        }),\n    student_get: (s_id, u_id) =>\n        api.post('student/get', {\n            's_id': s_id,\n            'u_id': u_id\n        }),\n};\n\nexport const D1_Api = {\n    ask: (s_id) =>\n        api.post(url.diagnose_ask, {\n            's_id': s_id,\n            'idx_txt': idx_txt.swp\n        }),\n    answer: (s_id, ques_id, ori_answer, stu_answer) =>\n        api.post(url.diagnose_answer, {\n            's_id': s_id,\n            'ques_id': ques_id,\n            'ori_answer1': ori_answer[0],\n            'ori_answer2': ori_answer[1],\n            'stu_answer1': stu_answer[0],\n            'stu_answer2': stu_answer[1],\n            'is_review': 'F',\n            'idx_txt': idx_txt.swp\n        }),\n};\n\nexport const D2_Api = {\n    ask: (s_id) =>\n        api.post(url.diagnose_ask, {\n            's_id': s_id,\n            'idx_txt': idx_txt.ph,\n        }),\n    answer: (s_id, oriAnswer, stdAnswer, ph) =>\n        api.post(url.diagnose_answer, {\n            's_id': s_id,\n            'ques_id': ph[0],\n            'ques_id2': ph[1],\n            'ori_answer': oriAnswer,\n            'stu_answer': stdAnswer,\n            'is_review': 'F',\n            'idx_txt': idx_txt.ph\n        }),\n};\n\nexport const D3_Api = {\n    ask: (s_id) =>\n        api.post(url.diagnose_ask, {\n            's_id': s_id,\n            'idx_txt': idx_txt.foc,\n        }),\n    answer: (s_id, ques_id, full_score, phone_score, speed_score, rhythm_score) =>\n        api.post(url.diagnose_answer, {\n            's_id': s_id,\n            'idx_txt': idx_txt.foc,\n            'ques_id': ques_id,\n            'full_score': full_score,\n            'phone_score': phone_score,\n            'speed_score': speed_score,\n            'rhythm_score': rhythm_score,\n            'is_review': 'F'\n        }),\n};\n\nexport const D_tutorial = {\n    answer: (s_id, idx_txt) =>\n        api.post(url.diagnose_answer, {\n            \"s_id\": s_id,\n            \"idx_txt\": idx_txt,\n            \"tutorial\": \"true\"\n        })\n}\n\nexport const Daily_Api = {\n    ask: (s_id) =>\n        api.post(url.therapy_ask, {\n            's_id': s_id,\n        }),\n    save: (s_id) =>\n        api.post(url.therapy_save, {\n            's_id': s_id,\n        })\n}\n\nexport const T_ask_api = (s_id) =>\n    api.post(url.therapy_ask, {\n        's_id': s_id,\n        'idx_txt': idx_txt,\n    })\n\nexport const T1_Api = {\n    ask: (s_id, idx_txt) =>\n        api.post(url.therapy_ask, {\n            's_id': s_id,\n            'idx_txt': idx_txt,\n        }),\n    answer: (s_id, full_score, phone_score, speed_score, rhythm_score, is_review, cure_id, idx_txt) =>\n        api.post(url.therapy_answer, {\n            's_id': s_id,\n            'idx_txt': idx_txt,\n            'full_score': full_score,\n            'phone_score': phone_score,\n            'speed_score': speed_score,\n            'rhythm_score': rhythm_score,\n            'is_review': is_review,\n            'cure_id': cure_id\n        }),\n};\n\nexport const T_Api2 = {\n    ask: (s_id, idx_txt) =>\n        api.post(url.therapy_ask, {\n            's_id': s_id,\n            'idx_txt': idx_txt,\n        }),\n    answer: (s_id, ori_answer, stu_answer, cure_id, is_review, idx_txt) =>\n        api.post(url.therapy_answer, {\n            's_id': s_id,\n            'cure_id': cure_id,\n            'idx_txt': idx_txt,\n            'is_review': is_review || 'F',\n            'ori_answer': ori_answer,\n            'stu_answer': stu_answer,\n        }),\n};\n\nexport const T_Api3 = {\n    ask: (s_id) =>\n        api.post(url.therapy_ask, {\n            's_id': s_id,\n            'idx_txt': idx_txt.vowelword,\n        }),\n    answer: (s_id) =>\n        api.post(url.therapy_answer, {\n            's_id': s_id,\n            'idx_txt': idx_txt.vowelword,\n        }),\n};\n\nexport const T_Api4 = {\n    ask: (s_id) =>\n        api.post(url.therapy_ask, {\n            's_id': s_id,\n            'idx_txt': idx_txt.consomatch,\n        }),\n    answer: (s_id, cure_id, stu_answer, ori_answer, is_review) =>\n        api.post(url.therapy_answer, {\n            's_id': s_id,\n            'idx_txt': idx_txt.consomatch,\n            'cure_id': cure_id[0],\n            'cure_id2': cure_id[1],\n            'cure_id3': cure_id[2],\n            'stu_answer': stu_answer,\n            'ori_answer': ori_answer,\n            'is_review': is_review\n        }),\n};\n\nexport const Result_Api = {\n    ask: (s_id) =>\n        api.post(url.diag_result, {\n            's_id': s_id,\n        })\n}\n\nexport const Stat_Api = {\n    ask: (s_id, is_cure, period) =>\n        api.post(url.statistic_ask, {\n            's_id': s_id,\n            'cure_or_test': (is_cure ? 'cure' : 'test'),\n            'period': period,\n        }),\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}