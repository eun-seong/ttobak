{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Recognition/RecognitionContainer.js\";\nimport React from 'react';\nimport RecognitionPresenter from './RecognitionPresenter';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TTobak, D2 } from 'images';\nimport { D2_Api, soundURL, D_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nconst idx_txt = 'ph';\nconst initState = {\n  gameState: false,\n  Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n  // Box 이미지\n  TTobaki: TTobak.ttobak3_1,\n  oriAnswer: null,\n  // 정답\n  stdAnswer: null,\n  // 학생 답\n  answerIndex: 0,\n  isAnimate: [false, false],\n  isImageLoaded: false,\n  showPopup: false,\n  showNextPopup: false,\n  currentIndex: 1,\n  totalNum: 0\n};\n\nclass Recognition extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await D2_Api.ask(s_id);\n        console.log(data);\n\n        switch (data.code) {\n          case 1:\n            this.answers = data.answers;\n            this.phs = data.phs;\n            this.currentIndex = 0;\n            this.currentDiag = [this.getListFilter('ques_id', this.answers[this.currentIndex][0]), this.getListFilter('ques_id', this.answers[this.currentIndex][1]), this.getListFilter('ques_id', this.answers[this.currentIndex][2])];\n            this.setState({\n              gameState: false,\n              Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n              stdAnswer: null,\n              TTobaki: TTobak.ttobak1_1,\n              answerIndex: this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1,\n              totalNum: this.answers.length\n            });\n            this.setListener();\n            setTimeout(() => this.playSound(), 2000);\n            break;\n\n          case 2:\n            break;\n\n          case 3:\n            break;\n\n          case 'tutorial':\n            this.tutorial(data);\n            break;\n\n          default:\n            break;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.tutorial = data => {\n      this.setState({\n        gameState: 'tutorial'\n      });\n      this.sample_answer = new Audio(soundURL + data.sample_ques[0].ques_path1);\n      this.sample_ques = [new Audio(soundURL + data.sample_ques[0].ques_path1), new Audio(soundURL + data.sample_ques[1].ques_path1)];\n      this.voice = [new Audio(soundURL + data.voice[0].voc_path), new Audio(soundURL + data.voice[1].voc_path), new Audio(soundURL + data.voice[2].voc_path)];\n      this.voice[0].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.sample_answer) this.sample_answer.play();\n        }, 1000);\n      });\n      this.sample_answer.addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.voice[1]) this.voice[1].play();\n        }, 1000);\n      });\n      this.voice[1].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.sample_ques[0]) this.sample_ques[0].play();\n          this.setState({\n            isAnimate: [true, false],\n            TTobaki: TTobak.ttobak3_2\n          });\n        }, 1000);\n      });\n      this.sample_ques[0].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.sample_ques[1]) this.sample_ques[1].play();\n          this.setState({\n            isAnimate: [false, true],\n            TTobaki: TTobak.ttobak3_2\n          });\n        }, 300);\n      });\n      this.voice[2].addEventListener('ended', async () => {\n        const {\n          data\n        } = await D_tutorial.answer(this.props.user.student.s_id, idx_txt);\n        console.log(data);\n        this.setState({\n          initState\n        });\n        this.newRequest();\n        this.sample_answer = null;\n        this.sample_ques = null;\n        this.voice = null;\n      });\n      setTimeout(() => {\n        if (!!this.voice[0]) {\n          this.voice[0].play();\n          this.setState({\n            TTobaki: TTobak.ttobak3_2\n          });\n        }\n      }, 2000);\n    };\n\n    this.tutorialBoxHandle = () => {\n      setTimeout(() => {\n        this.setState({\n          gameState: false\n        });\n\n        if (!!this.voice[2]) {\n          this.voice[2].play();\n          this.setState({\n            TTobaki: TTobak.ttobak3_2\n          });\n        }\n      }, 1000);\n    };\n\n    this.setListener = () => {\n      if (!!this.phSound) {\n        for (let i = 0; i > this.phSound.length; i++) {\n          this.phSound[i].remove();\n        }\n      }\n\n      this.phSound = [new Audio(soundURL + this.currentDiag[0].ques_path1), new Audio(soundURL + this.currentDiag[1].ques_path1), new Audio(soundURL + this.currentDiag[2].ques_path1)];\n      this.phSound[2].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.phSound[0]) {\n            this.phSound[0].play();\n            this.setState({\n              isAnimate: [true, false],\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 800);\n      });\n      this.phSound[0].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.phSound[1]) {\n            this.phSound[1].play();\n            this.setState({\n              isAnimate: [false, true],\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 300);\n      });\n      this.phSound[1].addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n    };\n\n    this.getListFilter = (key, value) => {\n      return this.phs.filter(object => {\n        return object[key] === value;\n      })[0];\n    };\n\n    this.TTobakiTouch = async () => {\n      if (this.state.gameState === true) {\n        this.playSound();\n        this.setState({\n          gameState: false,\n          isAnimate: [false, false]\n        });\n      }\n    };\n\n    this.onBoxTouchHandle = async id => {\n      const {\n        Box,\n        answerIndex,\n        TTobaki,\n        gameState\n      } = this.state;\n      if (gameState === false) return;\n\n      switch (id) {\n        case 0:\n          this.setState({\n            gameState: false,\n            Box: [answerIndex === id ? D2.d2_Box1_3 : D2.d2_Box1_2, Box[1]],\n            TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki]\n          });\n          break;\n\n        case 1:\n          this.setState({\n            gameState: false,\n            Box: [Box[0], answerIndex === id ? D2.d2_Box2_3 : D2.d2_Box2_2],\n            TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki]\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      if (gameState === 'tutorial') {\n        this.tutorialBoxHandle();\n        return;\n      }\n\n      this.finished(id);\n    };\n\n    this.animateBox = index => {\n      if (!index) this.setState({\n        isAnimate: [true, false]\n      });else this.setState({\n        isAnimate: [true, true]\n      });\n    };\n\n    this.playSound = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak3_2\n      });\n      if (!!this.phSound[2]) this.phSound[2].play();\n    };\n\n    this.diagDone = () => {\n      console.log('diagnose done!');\n      this.setState({\n        showNextPopup: true\n      });\n    };\n\n    this.finished = async id => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const [ph, oriAnswer, stdAnswer] = [[this.currentDiag[0].ques_id, this.currentDiag[1].ques_id], this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? this.currentDiag[0].ques_char : this.currentDiag[1].ques_char, this.currentDiag[id].ques_char];\n\n      try {\n        const {\n          data\n        } = await D2_Api.answer(s_id, oriAnswer, stdAnswer, ph);\n        console.log(data);\n\n        if (data.code === 1) {\n          if (this.currentIndex < this.answers.length - 1) this.currentIndex++;else {\n            this.diagDone();\n            return;\n          }\n          this.currentDiag = [this.getListFilter('ques_id', this.answers[this.currentIndex][0]), this.getListFilter('ques_id', this.answers[this.currentIndex][1]), this.getListFilter('ques_id', this.answers[this.currentIndex][2])];\n          this.setListener();\n          setTimeout(() => {\n            this.setState({\n              gameState: false,\n              Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n              stdAnswer: null,\n              TTobaki: TTobak.ttobak3_1,\n              answerIndex: this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1,\n              currentIndex: this.currentIndex + 1\n            });\n          }, 2000);\n          setTimeout(() => {\n            this.playSound();\n          }, 3000);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              this.newRequest();\n            }\n          };\n        }\n      }\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.push('/diagnose/attention');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.state = initState;\n    this.phs = null;\n    this.answers = null;\n    this.phSound = null;\n    this.answer = null;\n    this.currentIndex = 0;\n    this.currentDiag = null;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D2,\n      TTobak\n    };\n    this.totalImages = Object.keys(D2).length + Object.keys(TTobak).length;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount start');\n    let audioArr = [this.phSound, this.sample_ques, this.voice];\n\n    for (let i = 0; i < audioArr.length; i++) {\n      if (!!audioArr[i]) {\n        for (var j = 0; i < audioArr[i].length; j++) {\n          if (!!audioArr[i][j]) {\n            audioArr[i][j].pause();\n            audioArr[i][j] = null;\n          }\n        }\n      }\n    }\n\n    if (!!this.sample_answer) {\n      this.sample_answer.pause();\n      this.sample_answer = null;\n    }\n\n    console.log('componentWillUnmount finished');\n  }\n\n  render() {\n    const {\n      Box,\n      TTobaki,\n      isAnimate,\n      showPopup,\n      showNextPopup,\n      percent,\n      isImageLoaded\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(RecognitionPresenter, {\n        Background: D2.d2_background,\n        TTobaki: TTobaki,\n        TTobakiTouch: this.TTobakiTouch,\n        Box: Box,\n        Clicked: this.onBoxTouchHandle,\n        isAnimate: isAnimate,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        currentIndex: this.state.currentIndex,\n        totalNum: this.state.totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nRecognition.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Recognition));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Recognition/RecognitionContainer.js"],"names":["React","RecognitionPresenter","withRouter","PropTypes","connect","TTobak","D2","D2_Api","soundURL","D_tutorial","LoadingComp","idx_txt","initState","gameState","Box","d2_Box1_1","d2_Box2_1","TTobaki","ttobak3_1","oriAnswer","stdAnswer","answerIndex","isAnimate","isImageLoaded","showPopup","showNextPopup","currentIndex","totalNum","Recognition","PureComponent","constructor","newRequest","console","log","user","props","s_id","student","data","ask","code","answers","phs","currentDiag","getListFilter","setState","ttobak1_1","ques_id","length","setListener","setTimeout","playSound","tutorial","e","sample_answer","Audio","sample_ques","ques_path1","voice","voc_path","addEventListener","play","ttobak3_2","answer","tutorialBoxHandle","phSound","i","remove","key","value","filter","object","TTobakiTouch","state","onBoxTouchHandle","id","d2_Box1_3","d2_Box1_2","ttobak2_1","d2_Box2_3","d2_Box2_2","finished","animateBox","index","diagDone","ph","ques_char","imagesPreloading","picture","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","onPopupButtonHandle","history","push","onContinueButtonHandle","onPauseButtonHandle","Object","keys","componentDidMount","u_id","componentWillUnmount","audioArr","j","pause","render","d2_background","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport RecognitionPresenter from './RecognitionPresenter';\nimport { withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { TTobak, D2 } from 'images';\nimport { D2_Api, soundURL, D_tutorial } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nconst idx_txt = 'ph';\nconst initState = {\n    gameState: false,\n    Box: [D2.d2_Box1_1, D2.d2_Box2_1],          // Box 이미지\n    TTobaki: TTobak.ttobak3_1,\n    oriAnswer: null,                            // 정답\n    stdAnswer: null,                            // 학생 답\n    answerIndex: 0,\n    isAnimate: [false, false],\n    isImageLoaded: false,\n    showPopup: false,\n    showNextPopup: false,\n    currentIndex: 1,\n    totalNum: 0,\n};\n\nclass Recognition extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n        this.state = initState;\n\n        this.phs = null;\n        this.answers = null;\n        this.phSound = null;\n        this.answer = null;\n        this.currentIndex = 0;\n        this.currentDiag = null;\n        this.numOfLoadedImage = 0;\n        this.picture = { D2, TTobak };\n        this.totalImages = Object.keys(D2).length + Object.keys(TTobak).length;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount start')\n        let audioArr = [this.phSound, this.sample_ques, this.voice];\n        for (let i = 0; i < audioArr.length; i++) {\n            if (!!audioArr[i]) {\n                for (var j = 0; i < audioArr[i].length; j++) {\n                    if (!!audioArr[i][j]) {\n                        audioArr[i][j].pause();\n                        audioArr[i][j] = null;\n                    }\n                }\n            }\n        }\n        if (!!this.sample_answer) {\n            this.sample_answer.pause();\n            this.sample_answer = null;\n        }\n        console.log('componentWillUnmount finished')\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await D2_Api.ask(s_id);\n            console.log(data);\n\n            switch (data.code) {\n                case 1:\n                    this.answers = data.answers;\n                    this.phs = data.phs;\n                    this.currentIndex = 0;\n                    this.currentDiag = [\n                        this.getListFilter('ques_id', this.answers[this.currentIndex][0]),\n                        this.getListFilter('ques_id', this.answers[this.currentIndex][1]),\n                        this.getListFilter('ques_id', this.answers[this.currentIndex][2]),\n                    ];\n                    this.setState({\n                        gameState: false,\n                        Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n                        stdAnswer: null,\n                        TTobaki: TTobak.ttobak1_1,\n                        answerIndex: (this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1),\n                        totalNum: this.answers.length,\n                    });\n                    this.setListener();\n                    setTimeout(() => this.playSound(), 2000);\n                    break;\n                case 2:\n                    break;\n                case 3:\n                    break;\n                case 'tutorial':\n                    this.tutorial(data);\n                    break;\n                default:\n                    break;\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    tutorial = (data) => {\n        this.setState({\n            gameState: 'tutorial',\n        })\n        this.sample_answer = new Audio(soundURL + data.sample_ques[0].ques_path1);\n        this.sample_ques = [new Audio(soundURL + data.sample_ques[0].ques_path1), new Audio(soundURL + data.sample_ques[1].ques_path1)];\n        this.voice = [\n            new Audio(soundURL + data.voice[0].voc_path),\n            new Audio(soundURL + data.voice[1].voc_path),\n            new Audio(soundURL + data.voice[2].voc_path),\n        ];\n\n        this.voice[0].addEventListener('ended', () => {\n            this.setState({ TTobaki: TTobak.ttobak1_1 });\n            setTimeout(() => {\n                if (!!this.sample_answer) this.sample_answer.play();\n            }, 1000);\n        });\n\n        this.sample_answer.addEventListener('ended', () => {\n            this.setState({ TTobaki: TTobak.ttobak1_1 });\n            setTimeout(() => {\n                if (!!this.voice[1]) this.voice[1].play();\n            }, 1000);\n        });\n\n        this.voice[1].addEventListener('ended', () => {\n            this.setState({ TTobaki: TTobak.ttobak1_1 });\n            setTimeout(() => {\n                if (!!this.sample_ques[0]) this.sample_ques[0].play();\n                this.setState({\n                    isAnimate: [true, false],\n                    TTobaki: TTobak.ttobak3_2\n                });\n            }, 1000);\n        });\n\n        this.sample_ques[0].addEventListener('ended', () => {\n            this.setState({ TTobaki: TTobak.ttobak1_1 });\n            setTimeout(() => {\n                if (!!this.sample_ques[1]) this.sample_ques[1].play();\n                this.setState({\n                    isAnimate: [false, true],\n                    TTobaki: TTobak.ttobak3_2\n                });\n            }, 300);\n        });\n\n        this.voice[2].addEventListener('ended', async () => {\n            const { data } = await D_tutorial.answer(this.props.user.student.s_id, idx_txt);\n            console.log(data);\n            this.setState({\n                initState,\n            });\n            this.newRequest();\n\n            this.sample_answer = null;\n            this.sample_ques = null;\n            this.voice = null;\n        });\n\n        setTimeout(() => {\n            if (!!this.voice[0]) {\n                this.voice[0].play();\n                this.setState({ TTobaki: TTobak.ttobak3_2 });\n            }\n        }, 2000);\n    }\n\n    tutorialBoxHandle = () => {\n        setTimeout(() => {\n            this.setState({\n                gameState: false,\n            })\n            if (!!this.voice[2]) {\n                this.voice[2].play();\n                this.setState({ TTobaki: TTobak.ttobak3_2 });\n            }\n        }, 1000);\n    }\n\n    setListener = () => {\n        if (!!this.phSound) {\n            for (let i = 0; i > this.phSound.length; i++) {\n                this.phSound[i].remove();\n            }\n        }\n        this.phSound = [\n            new Audio(soundURL + this.currentDiag[0].ques_path1),\n            new Audio(soundURL + this.currentDiag[1].ques_path1),\n            new Audio(soundURL + this.currentDiag[2].ques_path1),\n        ];\n\n        this.phSound[2].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.phSound[0]) {\n                    this.phSound[0].play();\n                    this.setState({\n                        isAnimate: [true, false],\n                        TTobaki: TTobak.ttobak3_2,\n                    });\n                }\n            }, 800);\n        })\n\n        this.phSound[0].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.phSound[1]) {\n                    this.phSound[1].play();\n                    this.setState({\n                        isAnimate: [false, true],\n                        TTobaki: TTobak.ttobak3_2\n                    });\n                }\n            }, 300);\n        })\n        this.phSound[1].addEventListener('ended', () => {\n            this.setState({\n                gameState: true,\n                TTobaki: TTobak.ttobak1_1\n            })\n        });\n    }\n\n    getListFilter = (key, value) => {\n        return this.phs.filter((object) => { return object[key] === value })[0]\n    }\n\n    TTobakiTouch = async () => {\n        if (this.state.gameState === true) {\n            this.playSound();\n            this.setState({\n                gameState: false,\n                isAnimate: [false, false]\n            })\n        }\n    }\n\n    onBoxTouchHandle = async (id) => {\n        const { Box, answerIndex, TTobaki, gameState } = this.state;\n        if (gameState === false) return;\n\n        switch (id) {\n            case 0:\n                this.setState({\n                    gameState: false,\n                    Box: [answerIndex === id ? D2.d2_Box1_3 : D2.d2_Box1_2, Box[1]],\n                    TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki],\n                });\n                break;\n            case 1:\n                this.setState({\n                    gameState: false,\n                    Box: [Box[0], answerIndex === id ? D2.d2_Box2_3 : D2.d2_Box2_2],\n                    TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki],\n                });\n                break;\n            default:\n                break;\n        }\n\n        if (gameState === 'tutorial') {\n            this.tutorialBoxHandle();\n            return;\n        }\n        this.finished(id);\n    }\n\n    animateBox = (index) => {\n        if (!index)\n            this.setState({\n                isAnimate: [true, false]\n            });\n        else\n            this.setState({\n                isAnimate: [true, true]\n            });\n    }\n\n    playSound = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak3_2,\n        })\n        if (!!this.phSound[2]) this.phSound[2].play();\n    }\n\n    diagDone = () => {\n        console.log('diagnose done!');\n        this.setState({\n            showNextPopup: true,\n        });\n    }\n\n    finished = async (id) => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        })\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n        const [ph, oriAnswer, stdAnswer] = [\n            [this.currentDiag[0].ques_id, this.currentDiag[1].ques_id],\n            this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? this.currentDiag[0].ques_char : this.currentDiag[1].ques_char,\n            this.currentDiag[id].ques_char\n        ];\n\n        try {\n            const { data } = await D2_Api.answer(s_id, oriAnswer, stdAnswer, ph);\n            console.log(data);\n\n            if (data.code === 1) {\n                if (this.currentIndex < this.answers.length - 1) this.currentIndex++;\n                else {\n                    this.diagDone();\n                    return;\n                }\n\n                this.currentDiag = [\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][0]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][1]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][2]),\n                ];\n\n                this.setListener();\n                setTimeout(() => {\n                    this.setState({\n                        gameState: false,\n                        Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n                        stdAnswer: null,\n                        TTobaki: TTobak.ttobak3_1,\n                        answerIndex: (this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1),\n                        currentIndex: this.currentIndex + 1,\n                    });\n                }, 2000);\n\n                setTimeout(() => {\n                    this.playSound();\n                }, 3000);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        this.newRequest();\n                    }\n                };\n            }\n        }\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.push('/diagnose/attention');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { Box, TTobaki, isAnimate, showPopup, showNextPopup, percent, isImageLoaded } = this.state;\n\n        if (isImageLoaded) {\n            return (\n                <RecognitionPresenter\n                    Background={D2.d2_background}\n                    TTobaki={TTobaki}\n                    TTobakiTouch={this.TTobakiTouch}\n                    Box={Box}\n                    Clicked={this.onBoxTouchHandle}\n                    isAnimate={isAnimate}\n                    showPopup={showPopup}\n                    showNextPopup={showNextPopup}\n                    onPopupButtonHandle={this.onPopupButtonHandle}\n                    onContinueButtonHandle={this.onContinueButtonHandle}\n                    onPauseButtonHandle={this.onPauseButtonHandle}\n                    currentIndex={this.state.currentIndex}\n                    totalNum={this.state.totalNum}\n                />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Recognition));"]},"metadata":{},"sourceType":"module"}