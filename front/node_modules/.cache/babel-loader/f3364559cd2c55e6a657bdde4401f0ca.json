{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Attention/AttentionContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport AttentionPresenter from './AttentionPresenter';\nimport { D3, TTobak, SoundEffect } from 'images';\nimport { D3_Api, soundURL, D_tutorial } from 'api';\nconst idx_txt = 'foc';\nconst initState = {\n  gameState: false,\n  s_id: 4,\n  isImageLoaded: false,\n  percent: 0,\n  showPopup: false,\n  showNextPopup: false,\n  isRecording: false,\n  TTobak: TTobak.ttobak1_1,\n  currentIndex: 1,\n  totalNum: 0,\n  isPlaying: false\n};\n\nclass Attention extends React.Component {\n  constructor() {\n    super();\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.setState({\n        isRecording: false\n      });\n      this.recording_end_sound.play();\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.stopRecording = e => {\n      if (this.state.isRecording) {\n        console.log(e.detail);\n        clearInterval(this.setRecording);\n        this.recording_end_sound.play();\n        this.setState({\n          isRecording: false\n        });\n      }\n    };\n\n    this.newRequest = async () => {\n      const {\n        user\n      } = this.props;\n      const {\n        data\n      } = await D3_Api.ask(user.student.s_id, user.student.s_id);\n      console.log(data);\n\n      switch (data.code) {\n        case 1:\n          this.cure = data.focus;\n          this.currentIndex = 0;\n          this.currentCure = this.cure[this.currentIndex];\n          this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n          this.setState({\n            totalNum: this.cure.length\n          });\n          setTimeout(() => this.playSound(), 2000);\n          break;\n\n        case 'tutorial':\n          this.tutorial(data);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.tutorial = data => {\n      this.setState({\n        gameState: 'tutorial'\n      });\n      this.ques_char = data.sample_ques.ques_char;\n      this.sample_ques = new Audio(soundURL + data.sample_ques.ques_path1);\n      this.voice = [];\n\n      for (let i = 0; i < data.voice.length; i++) {\n        this.voice.push(new Audio(soundURL + data.voice[i].voc_path));\n      }\n\n      this.voice[0].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2\n        });\n        setTimeout(() => {\n          this.sample_ques.play();\n        }, 1000);\n      });\n      this.sample_ques.addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          this.voice[1].play();\n        }, 1000);\n      });\n      this.voice[1].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1,\n          isRecording: true\n        });\n        window.BRIDGE.recordAudio('m', this.ques_char);\n      });\n      this.voice[2].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          this.sample_ques.play();\n        }, 1000);\n      });\n      this.voice[3].addEventListener('ended', async () => {\n        const {\n          data\n        } = await D_tutorial.answer(this.props.user.student.s_id, idx_txt);\n        console.log(data);\n        this.setState({\n          initState\n        });\n        this.newRequest();\n      });\n      setTimeout(() => {\n        this.voice[0].play();\n      }, 1000);\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      try {\n        if (this.audioResult.status === 'Success') {\n          const {\n            user\n          } = this.props;\n          console.log(user.student.s_id, this.currentCure.ques_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score);\n\n          if (this.state.gameState === 'tutorial') {\n            if (this.audioResult.score < 85) {\n              this.voice[2].play();\n            } else {\n              this.voice[3].play();\n            }\n\n            return;\n          }\n\n          const {\n            data\n          } = await D3_Api.answer(user.student.s_id, this.currentCure.ques_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score);\n          console.log(data);\n\n          if (data.code === 1) {\n            if (data.is_stop) {\n              this.gameDone();\n            } else if (data.to_next_level) {\n              this.newRequest();\n              setTimeout(() => {\n                this.playSound();\n              }, 3000);\n            } else {\n              if (this.currentIndex < this.cure.length - 1) {\n                this.currentIndex++;\n              } else {\n                this.gameDone();\n                return;\n              }\n\n              this.currentCure = this.cure[this.currentIndex];\n              this.currentAudio = null;\n              this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n              setTimeout(() => {\n                this.setState({\n                  TTobaki: TTobak.ttobak1_1,\n                  currentIndex: this.currentIndex + 1\n                });\n              }, 3000);\n              setTimeout(() => {\n                this.playSound();\n              }, 5500);\n            }\n          } else console.log(data.message);\n        } else {\n          console.log(this.audioResult.message);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2,\n          isPlaying: true\n        });\n        this.currentAudio.play();\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            isPlaying: false\n          });\n          setTimeout(() => {\n            this.recording_start_sound.play();\n            this.setRecording = setInterval(() => {\n              this.setState({\n                isRecording: !this.state.isRecording\n              });\n            }, 500);\n            window.BRIDGE.recordAudio('m', this.currentCure.cure_text);\n          }, 800);\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              this.newRequest();\n            }\n          };\n        }\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n      this.setState({\n        showNextPopup: true\n      });\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.replace('/diagnose/result');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.onCompleteButtonHandle = () => {\n      if (this.state.isRecording) {\n        window.BRIDGE.requestStopRecording();\n      }\n    };\n\n    this.recording_start_sound = new Audio(SoundEffect.recording_start);\n    this.recording_end_sound = new Audio(SoundEffect.recording_end);\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D3,\n      TTobak\n    };\n    this.totalImages = Object.keys(D3).length + Object.keys(TTobak).length;\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.state = initState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n    window.addEventListener('android', this.androidResponse);\n    window.addEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n\n    window.removeEventListener(\"android\", this.androidResponse);\n    window.removeEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  render() {\n    const {\n      isImageLoaded,\n      showPopup,\n      showNextPopup,\n      percent,\n      TTobak,\n      isRecording,\n      isPlaying\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(AttentionPresenter, {\n        Background: D3.d3_background,\n        TTobak: TTobak,\n        isRecording: isRecording,\n        isPlaying: isPlaying,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        currentIndex: this.state.currentIndex,\n        totalNum: this.state.totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nAttention.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Attention));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Attention/AttentionContainer.js"],"names":["React","withRouter","PropTypes","connect","LoadingComp","AttentionPresenter","D3","TTobak","SoundEffect","D3_Api","soundURL","D_tutorial","idx_txt","initState","gameState","s_id","isImageLoaded","percent","showPopup","showNextPopup","isRecording","ttobak1_1","currentIndex","totalNum","isPlaying","Attention","Component","constructor","androidResponse","e","console","log","detail","setState","recording_end_sound","play","audioResult","andriodListener","stopRecording","state","clearInterval","setRecording","newRequest","user","props","data","ask","student","code","cure","focus","currentCure","currentAudio","Audio","ques_path1","length","setTimeout","playSound","tutorial","ques_char","sample_ques","voice","i","push","voc_path","addEventListener","TTobaki","ttobak3_2","window","BRIDGE","recordAudio","answer","ttobak2_1","status","ques_id","score","phone_score","speed_score","rhythm_score","is_stop","gameDone","to_next_level","message","recording_start_sound","setInterval","cure_text","imagesPreloading","picture","prop","img","Image","src","onload","numOfLoadedImage","totalImages","onPopupButtonHandle","history","replace","onContinueButtonHandle","onPauseButtonHandle","onCompleteButtonHandle","requestStopRecording","recording_start","recording_end","Object","keys","componentDidMount","u_id","componentWillUnmount","pause","removeEventListener","render","d3_background","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport AttentionPresenter from './AttentionPresenter';\n\nimport { D3, TTobak, SoundEffect } from 'images';\nimport { D3_Api, soundURL, D_tutorial } from 'api';\n\nconst idx_txt = 'foc';\nconst initState = {\n    gameState: false,\n    s_id: 4,\n    isImageLoaded: false,\n    percent: 0,\n    showPopup: false,\n    showNextPopup: false,\n    isRecording: false,\n    TTobak: TTobak.ttobak1_1,\n    currentIndex: 1,\n    totalNum: 0,\n    isPlaying: false,\n};\n\nclass Attention extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n        this.recording_start_sound = new Audio(SoundEffect.recording_start);\n        this.recording_end_sound = new Audio(SoundEffect.recording_end);\n        this.numOfLoadedImage = 0;\n        this.picture = { D3, TTobak };\n        this.totalImages = Object.keys(D3).length + Object.keys(TTobak).length;\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n\n        this.state = initState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener('android', this.androidResponse);\n        window.addEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n        window.removeEventListener(\"android\", this.androidResponse)\n        window.removeEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.setState({\n            isRecording: false,\n        })\n        this.recording_end_sound.play();\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    stopRecording = (e) => {\n        if (this.state.isRecording) {\n            console.log(e.detail);\n            clearInterval(this.setRecording);\n            this.recording_end_sound.play();\n            this.setState({\n                isRecording: false,\n            });\n        }\n    }\n\n    newRequest = async () => {\n        const { user } = this.props;\n\n        const { data } = await D3_Api.ask(user.student.s_id, user.student.s_id);\n        console.log(data);\n\n        switch (data.code) {\n            case 1:\n                this.cure = data.focus;\n                this.currentIndex = 0;\n                this.currentCure = this.cure[this.currentIndex];\n                this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n                this.setState({\n                    totalNum: this.cure.length,\n                })\n                setTimeout(() => this.playSound(), 2000);\n                break;\n            case 'tutorial':\n                this.tutorial(data);\n                break;\n            default:\n                break;\n        }\n    }\n\n    tutorial = (data) => {\n        this.setState({\n            gameState: 'tutorial',\n        })\n        this.ques_char = data.sample_ques.ques_char;\n        this.sample_ques = new Audio(soundURL + data.sample_ques.ques_path1);\n        this.voice = [];\n        for (let i = 0; i < data.voice.length; i++) {\n            this.voice.push(new Audio(soundURL + data.voice[i].voc_path));\n        }\n\n        this.voice[0].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n            });\n            setTimeout(() => {\n                this.sample_ques.play();\n            }, 1000);\n        });\n\n        this.sample_ques.addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n            });\n            setTimeout(() => {\n                this.voice[1].play();\n            }, 1000);\n        });\n\n        this.voice[1].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                isRecording: true,\n            });\n            window.BRIDGE.recordAudio('m', this.ques_char);\n        });\n\n        this.voice[2].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1,\n            });\n            setTimeout(() => {\n                this.sample_ques.play();\n            }, 1000);\n        });\n\n        this.voice[3].addEventListener('ended', async () => {\n            const { data } = await D_tutorial.answer(this.props.user.student.s_id, idx_txt);\n            console.log(data);\n            this.setState({\n                initState,\n            });\n            this.newRequest();\n        });\n\n        setTimeout(() => {\n            this.voice[0].play();\n        }, 1000);\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        try {\n            if (this.audioResult.status === 'Success') {\n                const { user } = this.props;\n                console.log(\n                    user.student.s_id,\n                    this.currentCure.ques_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score);\n                if (this.state.gameState === 'tutorial') {\n                    if (this.audioResult.score < 85) {\n                        this.voice[2].play();\n                    } else {\n                        this.voice[3].play();\n                    }\n                    return;\n                }\n                const { data } = await D3_Api.answer(\n                    user.student.s_id,\n                    this.currentCure.ques_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score,\n                );\n                console.log(data);\n\n                if (data.code === 1) {\n                    if (data.is_stop) {\n                        this.gameDone();\n                    } else if (data.to_next_level) {\n                        this.newRequest();\n                        setTimeout(() => {\n                            this.playSound();\n                        }, 3000);\n                    } else {\n                        if (this.currentIndex < this.cure.length - 1) {\n                            this.currentIndex++;\n                        } else {\n                            this.gameDone();\n                            return;\n                        }\n                        this.currentCure = this.cure[this.currentIndex];\n                        this.currentAudio = null;\n                        this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n\n                        setTimeout(() => {\n                            this.setState({\n                                TTobaki: TTobak.ttobak1_1,\n                                currentIndex: this.currentIndex + 1,\n                            });\n                        }, 3000);\n\n                        setTimeout(() => {\n                            this.playSound();\n                        }, 5500);\n                    }\n                }\n                else console.log(data.message);\n\n            } else {\n                console.log(this.audioResult.message);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n                isPlaying: true,\n            });\n            this.currentAudio.play();\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    isPlaying: false,\n                });\n                setTimeout(() => {\n                    this.recording_start_sound.play();\n                    this.setRecording = setInterval(() => {\n                        this.setState({\n                            isRecording: !this.state.isRecording,\n                        });\n                    }, 500);\n                    window.BRIDGE.recordAudio('m', this.currentCure.cure_text);\n                }, 800);\n            });\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        this.newRequest();\n                    }\n                };\n            }\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        this.setState({\n            showNextPopup: true,\n        });\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.replace('/diagnose/result');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    onCompleteButtonHandle = () => {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n    }\n\n    render() {\n        const { isImageLoaded, showPopup, showNextPopup, percent, TTobak, isRecording, isPlaying } = this.state;\n\n        if (isImageLoaded) {\n            return (<AttentionPresenter\n                Background={D3.d3_background}\n                TTobak={TTobak}\n                isRecording={isRecording} isPlaying={isPlaying}\n                showPopup={showPopup}\n                showNextPopup={showNextPopup}\n                onPopupButtonHandle={this.onPopupButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                onCompleteButtonHandle={this.onCompleteButtonHandle}\n                currentIndex={this.state.currentIndex}\n                totalNum={this.state.totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Attention));"]},"metadata":{},"sourceType":"module"}