{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T3_Common/CommonContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { T3, TTobak } from 'images';\nimport CommonPresenter from './CommonPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport { T_Api2, soundURL, T_tutorial } from 'api';\nconst idx_txt = 'common';\nconst initState = {\n  TTobaki: TTobak.ttobak1_1,\n  gameState: false,\n  boxTextList: null,\n  isAnimate: [false, false, false, false],\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0\n};\n\nclass Common extends React.Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T_Api2.ask(s_id, idx_txt);\n      console.log(data);\n\n      if (data.code === 'tutorial') {\n        this.tutorial(data);\n        return;\n      }\n\n      if (data.code === 'specified' || data.code === 1) {\n        this.currentIndex = 0;\n        this.cure = data.cure;\n        this.setCurrent(0);\n        this.setState({\n          totalNum: this.cure.length,\n          currentIndex: this.currentIndex + 1\n        });\n        setTimeout(() => this.playSound(), 2000);\n      } else console.log('data message: ' + data.message);\n    };\n\n    this.daily = () => {\n      if (this.props.location.state.data.code === 'tutorial') {\n        this.tutorial(this.props.location.state.data);\n        return;\n      }\n\n      console.log(this.props.location.state.data.cure);\n      this.cure = this.props.location.state.data.cure;\n      this.setState = {\n        totalNum: this.cure.length,\n        currentIndex: this.currentIndex + 1\n      };\n      this.setCurrent(0);\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.tutorial = data => {\n      this.voice = [new Audio(soundURL + data.tut_voice[0].voc_path), new Audio(soundURL + data.tut_voice[1].voc_path), new Audio(soundURL + data.tut_voice[2].voc_path)];\n      this.currentCure = data.sample_ques;\n      this.currentAudio = [new Audio(soundURL + this.currentCure.com_e1path), new Audio(soundURL + this.currentCure.com_e2path), new Audio(soundURL + this.currentCure.com_e3path), new Audio(soundURL + this.currentCure.com_e4path), new Audio(soundURL + this.currentCure.com_w1path), new Audio(soundURL + this.currentCure.com_w2path), new Audio(soundURL + this.currentCure.com_w3path)];\n      this.setListener(true);\n      this.setState({\n        boxTextList: [this.currentCure.com_e1, this.currentCure.com_e2, this.currentCure.com_e3, this.currentCure.com_e4],\n        TTobaki: TTobak.ttobak1_1,\n        currentIndex: this.currentIndex + 1\n      });\n      this.voice[0].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.playSound();\n        }, 1000);\n      });\n      this.voice[1].addEventListener('ended', () => {\n        this.setState({\n          gameState: 'tutorial',\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n      this.voice[2].addEventListener('ended', async () => {\n        const {\n          data\n        } = await T_tutorial.answer(this.props.user.student.s_id, idx_txt, this.currentCure.com_id);\n        console.log(data);\n        this.setState({\n          gameState: false\n        });\n        if (this.learning_type === 'daily') this.daily();else this.newRequest();\n        this.currentCure = null;\n        this.sample_ques = null;\n        this.voice = null;\n      });\n      setTimeout(() => {\n        this.voice[0].play();\n      }, 2000);\n    };\n\n    this.setCurrent = timeout => {\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentCure.is_first = 'T';\n\n      for (let i = 0; i < this.currentCure.length; i++) {\n        if (!!this.currentCure[i]) this.currentCure[i].remove();\n        this.currentCure[i] = null;\n      }\n\n      this.currentAudio = [new Audio(soundURL + this.currentCure.com_e1path), new Audio(soundURL + this.currentCure.com_e2path), new Audio(soundURL + this.currentCure.com_e3path), new Audio(soundURL + this.currentCure.com_e4path), new Audio(soundURL + this.currentCure.com_w1path), new Audio(soundURL + this.currentCure.com_w2path), new Audio(soundURL + this.currentCure.com_w3path)];\n      this.setListener(false);\n      setTimeout(() => {\n        this.setState({\n          boxTextList: [this.cure[this.currentIndex].com_e1, this.cure[this.currentIndex].com_e2, this.cure[this.currentIndex].com_e3, this.cure[this.currentIndex].com_e4],\n          TTobaki: TTobak.ttobak1_1,\n          currentIndex: this.currentIndex + 1\n        });\n      }, timeout);\n    };\n\n    this.setListener = isTutorial => {\n      this.currentAudio[0].addEventListener('ended', () => {\n        this.listenerFunc(0, 500);\n      });\n      this.currentAudio[1].addEventListener('ended', () => {\n        this.listenerFunc(1, 500);\n      });\n      this.currentAudio[2].addEventListener('ended', () => {\n        this.listenerFunc(2, 500);\n      });\n      this.currentAudio[3].addEventListener('ended', () => {\n        this.listenerFunc(3, 1500);\n      });\n      this.currentAudio[4].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.currentAudio[5]) {\n            this.currentAudio[5].play();\n            this.setState({\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 1000);\n      });\n      this.currentAudio[5].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.currentAudio[6]) {\n            this.currentAudio[6].play();\n            this.setState({\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 1000);\n      });\n      this.currentAudio[6].addEventListener('ended', () => {\n        if (isTutorial) setTimeout(() => {\n          this.voice[1].play();\n        }, 1000);else this.setState({\n          gameState: true,\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n    };\n\n    this.listenerFunc = (index, time) => {\n      this.setState({\n        TTobaki: TTobak.ttobak1_1\n      });\n      setTimeout(() => {\n        if (!!this.currentAudio[index + 1]) {\n          this.currentAudio[index + 1].play();\n          this.setState({\n            TTobaki: TTobak.ttobak1_2\n          });\n        }\n      }, time);\n    };\n\n    this.playSound = () => {\n      this.setState({\n        gameState: false,\n        TTobaki: TTobak.ttobak1_2\n      });\n\n      if (!!this.currentAudio[0]) {\n        this.currentAudio[0].play();\n      }\n    };\n\n    this.onTTobakiTouchHandle = () => {\n      const {\n        gameState\n      } = this.state;\n      if (gameState === true) this.playSound();\n    };\n\n    this.onBoxTouchHandle = async index => {\n      const {\n        gameState,\n        boxTextList\n      } = this.state;\n\n      if (gameState === 'tutorial') {\n        if (boxTextList[index] === this.currentCure.com_ans) {\n          this.setState({\n            gameState: false\n          });\n          setTimeout(() => {\n            this.voice[2].play();\n          }, 1000);\n        }\n\n        return;\n      }\n\n      if (gameState === false) return;\n      this.setState({\n        gameState: false\n      });\n\n      try {\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const {\n          boxTextList,\n          is_review\n        } = this.state;\n        const {\n          data\n        } = await T_Api2.answer(s_id, this.cure[this.currentIndex].com_ans, boxTextList[index], this.cure[this.currentIndex].com_id, is_review, idx_txt, this.learning_type === 'daily' ? 'T' : 'F', this.currentCure.is_first);\n        console.log(data);\n\n        if (data.code === 1) {\n          if (data.correct_voice.voc_desc === 'retry') {\n            this.currentCure.is_first = 'F';\n            this.retry_script = new Audio(soundURL + data.correct_voice.voc_path);\n            this.retry_script.addEventListener('ended', () => {\n              this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                gameState: true\n              });\n            });\n            setTimeout(() => {\n              this.retry_script.play();\n              this.setState({\n                TTobaki: TTobak.ttobak3_2,\n                gameState: false\n              });\n            }, 1000);\n            return;\n          } else {\n            this.setState({\n              TTobaki: TTobak.ttobak2_2\n            });\n            this.good_script = new Audio(soundURL + data.correct_voice.voc_path);\n            this.good_script.addEventListener('ended', () => this.nextStep());\n            setTimeout(() => {\n              this.good_script.play();\n              this.setState({\n                gameState: false\n              });\n            }, 1000);\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.nextStep = () => {\n      if (this.currentIndex < this.cure.length - 1) {\n        this.currentIndex++;\n      } else {\n        this.gameDone();\n        return;\n      }\n\n      this.setCurrent(1000);\n      setTimeout(() => {\n        this.playSound();\n      }, 3000);\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.push('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              clearTimeout(timeoutPreloading);\n              if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.learning_type = match.params.learning_type;\n    this.currentAudio = null;\n    this.cure = null;\n    this.currentIndex = 0;\n    this.currentCure = null;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      T3,\n      TTobak\n    };\n    this.totalImages = Object.keys(T3).length + Object.keys(TTobak).length;\n    this.state = initState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    this.imagesPreloading(this.picture);\n  }\n\n  componentWillUnmount() {\n    let audioArr = [this.currentAudio, this.voice];\n\n    for (let i = 0; i < audioArr.length; i++) {\n      if (!!audioArr[i]) {\n        for (var j = 0; j < audioArr[i].length; j++) {\n          if (!!audioArr[i][j]) {\n            audioArr[i][j].pause();\n            audioArr[i][j].remove();\n            audioArr[i][j] = null;\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      boxTextList,\n      isAnimate,\n      TTobaki,\n      isImageLoaded,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      gameState,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(CommonPresenter, {\n        Background: T3.t3_background,\n        TTobak: TTobaki,\n        onTTobakiTouchHandle: this.onTTobakiTouchHandle,\n        boxTextList: boxTextList || ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ'],\n        onBoxTouchHandle: this.onBoxTouchHandle,\n        BoxImg: T3.t3_textbox,\n        isAnimate: isAnimate,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        gameState: gameState,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nCommon.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Common));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T3_Common/CommonContainer.js"],"names":["React","withRouter","T3","TTobak","CommonPresenter","PropTypes","connect","LoadingComp","T_Api2","soundURL","T_tutorial","idx_txt","initState","TTobaki","ttobak1_1","gameState","boxTextList","isAnimate","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","Common","Component","constructor","match","newRequest","console","log","user","props","s_id","student","data","ask","code","tutorial","cure","setCurrent","setState","length","setTimeout","playSound","message","daily","location","state","voice","Audio","tut_voice","voc_path","currentCure","sample_ques","currentAudio","com_e1path","com_e2path","com_e3path","com_e4path","com_w1path","com_w2path","com_w3path","setListener","com_e1","com_e2","com_e3","com_e4","addEventListener","answer","com_id","learning_type","play","timeout","is_first","i","remove","isTutorial","listenerFunc","ttobak3_2","index","time","ttobak1_2","onTTobakiTouchHandle","onBoxTouchHandle","com_ans","is_review","correct_voice","voc_desc","retry_script","ttobak2_2","good_script","nextStep","e","gameDone","imagesPreloading","picture","timeoutPreloading","history","push","prop","img","Image","src","onload","numOfLoadedImage","totalImages","clearTimeout","onContinueButtonHandle","onRestartButtonHandle","onPauseButtonHandle","params","Object","keys","componentDidMount","u_id","componentWillUnmount","audioArr","j","pause","render","t3_background","t3_textbox","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { T3, TTobak } from 'images';\nimport CommonPresenter from './CommonPresenter';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport { T_Api2, soundURL, T_tutorial } from 'api';\n\nconst idx_txt = 'common';\nconst initState = {\n    TTobaki: TTobak.ttobak1_1,\n    gameState: false,\n    boxTextList: null,\n    isAnimate: [false, false, false, false],\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n};\n\nclass Common extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match }) {\n        super();\n        this.learning_type = match.params.learning_type;\n        this.currentAudio = null;\n        this.cure = null;\n        this.currentIndex = 0;\n        this.currentCure = null;\n        this.numOfLoadedImage = 0;\n        this.picture = { T3, TTobak };\n        this.totalImages = Object.keys(T3).length + Object.keys(TTobak).length;\n\n        this.state = initState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        this.imagesPreloading(this.picture);\n    }\n\n    componentWillUnmount() {\n        let audioArr = [this.currentAudio, this.voice];\n        for (let i = 0; i < audioArr.length; i++) {\n            if (!!audioArr[i]) {\n                for (var j = 0; j < audioArr[i].length; j++) {\n                    if (!!audioArr[i][j]) {\n                        audioArr[i][j].pause();\n                        audioArr[i][j].remove();\n                        audioArr[i][j] = null;\n                    }\n                }\n            }\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { data } = await T_Api2.ask(s_id, idx_txt);\n        console.log(data);\n\n        if (data.code === 'tutorial') {\n            this.tutorial(data);\n            return;\n        }\n\n        if (data.code === 'specified' || data.code === 1) {\n            this.currentIndex = 0;\n            this.cure = data.cure;\n            this.setCurrent(0);\n\n            this.setState({\n                totalNum: this.cure.length,\n                currentIndex: this.currentIndex + 1,\n            })\n            setTimeout(() => this.playSound(), 2000);\n        }\n        else console.log('data message: ' + data.message);\n    }\n\n    daily = () => {\n        if (this.props.location.state.data.code === 'tutorial') {\n            this.tutorial(this.props.location.state.data);\n            return;\n        }\n        console.log(this.props.location.state.data.cure);\n        this.cure = this.props.location.state.data.cure;\n        this.setState = {\n            totalNum: this.cure.length,\n            currentIndex: this.currentIndex + 1,\n        }\n        this.setCurrent(0);\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    tutorial = (data) => {\n        this.voice = [\n            new Audio(soundURL + data.tut_voice[0].voc_path),\n            new Audio(soundURL + data.tut_voice[1].voc_path),\n            new Audio(soundURL + data.tut_voice[2].voc_path),\n        ];\n\n        this.currentCure = data.sample_ques;\n        this.currentAudio = [\n            new Audio(soundURL + this.currentCure.com_e1path),\n            new Audio(soundURL + this.currentCure.com_e2path),\n            new Audio(soundURL + this.currentCure.com_e3path),\n            new Audio(soundURL + this.currentCure.com_e4path),\n            new Audio(soundURL + this.currentCure.com_w1path),\n            new Audio(soundURL + this.currentCure.com_w2path),\n            new Audio(soundURL + this.currentCure.com_w3path),\n        ];\n\n        this.setListener(true);\n        this.setState({\n            boxTextList: [\n                this.currentCure.com_e1,\n                this.currentCure.com_e2,\n                this.currentCure.com_e3,\n                this.currentCure.com_e4],\n            TTobaki: TTobak.ttobak1_1,\n            currentIndex: this.currentIndex + 1\n        });\n\n        this.voice[0].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.playSound();\n            }, 1000);\n        });\n\n        this.voice[1].addEventListener('ended', () => {\n            this.setState({\n                gameState: 'tutorial',\n                TTobaki: TTobak.ttobak1_1,\n            });\n        });\n\n        this.voice[2].addEventListener('ended', async () => {\n            const { data } = await T_tutorial.answer(\n                this.props.user.student.s_id,\n                idx_txt,\n                this.currentCure.com_id)\n            console.log(data);\n            this.setState({\n                gameState: false,\n            });\n            if (this.learning_type === 'daily') this.daily();\n            else this.newRequest();\n\n            this.currentCure = null;\n            this.sample_ques = null;\n            this.voice = null;\n        });\n\n        setTimeout(() => {\n            this.voice[0].play();\n        }, 2000);\n    }\n\n    setCurrent = (timeout) => {\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentCure.is_first = 'T';\n        for (let i = 0; i < this.currentCure.length; i++) {\n            if (!!this.currentCure[i]) this.currentCure[i].remove();\n            this.currentCure[i] = null;\n        }\n        this.currentAudio = [\n            new Audio(soundURL + this.currentCure.com_e1path),\n            new Audio(soundURL + this.currentCure.com_e2path),\n            new Audio(soundURL + this.currentCure.com_e3path),\n            new Audio(soundURL + this.currentCure.com_e4path),\n            new Audio(soundURL + this.currentCure.com_w1path),\n            new Audio(soundURL + this.currentCure.com_w2path),\n            new Audio(soundURL + this.currentCure.com_w3path),\n        ];\n\n        this.setListener(false);\n        setTimeout(() => {\n            this.setState({\n                boxTextList: [\n                    this.cure[this.currentIndex].com_e1,\n                    this.cure[this.currentIndex].com_e2,\n                    this.cure[this.currentIndex].com_e3,\n                    this.cure[this.currentIndex].com_e4],\n                TTobaki: TTobak.ttobak1_1,\n                currentIndex: this.currentIndex + 1\n            })\n        }, timeout);\n    }\n\n    setListener = (isTutorial) => {\n        this.currentAudio[0].addEventListener('ended', () => {\n            this.listenerFunc(0, 500);\n        });\n        this.currentAudio[1].addEventListener('ended', () => {\n            this.listenerFunc(1, 500);\n        });\n        this.currentAudio[2].addEventListener('ended', () => {\n            this.listenerFunc(2, 500);\n        });\n        this.currentAudio[3].addEventListener('ended', () => {\n            this.listenerFunc(3, 1500);\n        });\n        this.currentAudio[4].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.currentAudio[5]) {\n                    this.currentAudio[5].play();\n                    this.setState({\n                        TTobaki: TTobak.ttobak3_2\n                    })\n                }\n            }, 1000);\n        });\n        this.currentAudio[5].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.currentAudio[6]) {\n                    this.currentAudio[6].play();\n                    this.setState({\n                        TTobaki: TTobak.ttobak3_2\n                    })\n                }\n            }, 1000);\n        });\n        this.currentAudio[6].addEventListener('ended', () => {\n            if (isTutorial) setTimeout(() => {\n                this.voice[1].play();\n            }, 1000);\n            else this.setState({\n                gameState: true,\n                TTobaki: TTobak.ttobak1_1\n            });\n        });\n    }\n\n    listenerFunc = (index, time) => {\n        this.setState({\n            TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n            if (!!this.currentAudio[index + 1]) {\n                this.currentAudio[index + 1].play();\n                this.setState({\n                    TTobaki: TTobak.ttobak1_2\n                })\n            }\n        }, time);\n    }\n\n    playSound = () => {\n        this.setState({\n            gameState: false,\n            TTobaki: TTobak.ttobak1_2\n        });\n\n        if (!!this.currentAudio[0]) {\n            this.currentAudio[0].play();\n        }\n    }\n\n    onTTobakiTouchHandle = () => {\n        const { gameState } = this.state;\n        if (gameState === true) this.playSound();\n    }\n\n    onBoxTouchHandle = async (index) => {\n        const { gameState, boxTextList } = this.state;\n        if (gameState === 'tutorial') {\n            if (boxTextList[index] === this.currentCure.com_ans) {\n                this.setState({ gameState: false });\n                setTimeout(() => {\n                    this.voice[2].play();\n                }, 1000);\n            }\n            return;\n        }\n\n        if (gameState === false) return;\n\n        this.setState({\n            gameState: false,\n        });\n\n        try {\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const { boxTextList, is_review } = this.state;\n            const { data } = await T_Api2.answer(\n                s_id,\n                this.cure[this.currentIndex].com_ans,\n                boxTextList[index],\n                this.cure[this.currentIndex].com_id,\n                is_review,\n                idx_txt,\n                this.learning_type === 'daily' ? 'T' : 'F',\n                this.currentCure.is_first\n            );\n            console.log(data);\n\n            if (data.code === 1) {\n                if (data.correct_voice.voc_desc === 'retry') {\n                    this.currentCure.is_first = 'F';\n                    this.retry_script = new Audio(soundURL + data.correct_voice.voc_path);\n                    this.retry_script.addEventListener('ended', () => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak1_1,\n                            gameState: true,\n                        });\n                    });\n\n                    setTimeout(() => {\n                        this.retry_script.play();\n                        this.setState({\n                            TTobaki: TTobak.ttobak3_2,\n                            gameState: false,\n                        });\n                    }, 1000);\n                    return;\n                } else {\n                    this.setState({\n                        TTobaki: TTobak.ttobak2_2,\n                    })\n                    this.good_script = new Audio(soundURL + data.correct_voice.voc_path);\n                    this.good_script.addEventListener('ended', () => this.nextStep());\n                    setTimeout(() => {\n                        this.good_script.play();\n                        this.setState({\n                            gameState: false,\n                        });\n                    }, 1000);\n                }\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    nextStep = () => {\n        if (this.currentIndex < this.cure.length - 1) {\n            this.currentIndex++;\n        } else {\n            this.gameDone();\n            return;\n        }\n\n        this.setCurrent(1000);\n\n        setTimeout(() => {\n            this.playSound();\n        }, 3000);\n\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.push('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        clearTimeout(timeoutPreloading);\n\n                        if (this.learning_type !== 'daily') this.newRequest();\n                        else this.daily();\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { boxTextList, isAnimate, TTobaki, isImageLoaded, showPopup, showDonePopup, showDailyPopup, percent, gameState,\n            currentIndex, totalNum } = this.state;\n\n        if (isImageLoaded) {\n            return (<CommonPresenter\n                Background={T3.t3_background}\n                TTobak={TTobaki}\n                onTTobakiTouchHandle={this.onTTobakiTouchHandle}\n                boxTextList={boxTextList || ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ']}\n                onBoxTouchHandle={this.onBoxTouchHandle}\n                BoxImg={T3.t3_textbox}\n                isAnimate={isAnimate}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                gameState={gameState}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Common));"]},"metadata":{},"sourceType":"module"}