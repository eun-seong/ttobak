{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T2_Count/Apple.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useDrag } from 'react-dnd';\nimport { usePreview } from 'react-dnd-preview';\nimport { ItemTypes } from 'const';\nconst TreeDiv = styled.div`\n    position: absolute;\n    width: 50vw;\n    height: 30vw;\n    left: 0;\n`;\nconst AppleImg = styled.img`\n    position: absolute;\n    height: 21vh;\n    width: auto;\n    max-height: 80px;\n    z-index: 2;\n`;\nlet apple = null;\n\nconst ApplePreview = ({\n  touchPosition\n}) => {\n  const {\n    display,\n    style\n  } = usePreview();\n\n  if (!display) {\n    return null;\n  }\n\n  const trans = style.WebkitTransform.split('(')[1].split(')')[0].split(', ');\n  const [transX, transY] = [parseFloat(trans[0].split('px')[0]) + touchPosition[0] - 0.105 * document.documentElement.clientHeight, parseFloat(trans[1].split('px')[0]) + touchPosition[1] - 0.105 * document.documentElement.clientHeight];\n  style.WebkitTransform = `translate(${transX}px, ${transY}px)`;\n  return /*#__PURE__*/React.createElement(AppleImg, {\n    src: apple,\n    alt: \"apple\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }\n  });\n};\n\nconst Apple = ({\n  isTreeDragging,\n  touchPosition,\n  onTreeTouchStartHandle,\n  onTreeTouchEndHandle,\n  createRandomApple\n}) => {\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: ItemTypes.APPLE\n    },\n    begin: () => {\n      apple = createRandomApple();\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ApplePreview, {\n    touchPosition: touchPosition,\n    isTreeDragging: isTreeDragging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TreeDiv, {\n    ref: drag,\n    isTreeDragging: isTreeDragging,\n    onTouchStart: onTreeTouchStartHandle,\n    onTouchEnd: onTreeTouchEndHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Apple;","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T2_Count/Apple.js"],"names":["React","styled","useDrag","usePreview","ItemTypes","TreeDiv","div","AppleImg","img","apple","ApplePreview","touchPosition","display","style","trans","WebkitTransform","split","transX","transY","parseFloat","document","documentElement","clientHeight","Apple","isTreeDragging","onTreeTouchStartHandle","onTreeTouchEndHandle","createRandomApple","isDragging","drag","item","type","APPLE","begin","collect","monitor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMC,QAAQ,GAAGN,MAAM,CAACO,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACxC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBV,UAAU,EAArC;;AACA,MAAI,CAACS,OAAL,EAAc;AACV,WAAO,IAAP;AACH;;AAED,QAAME,KAAK,GAAGD,KAAK,CAACE,eAAN,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,EAAkDA,KAAlD,CAAwD,IAAxD,CAAd;AACA,QAAM,CAACC,MAAD,EAASC,MAAT,IAAmB,CACrBC,UAAU,CAACL,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAD,CAAV,GAAsCL,aAAa,CAAC,CAAD,CAAnD,GAAyD,QAAQS,QAAQ,CAACC,eAAT,CAAyBC,YADrE,EAErBH,UAAU,CAACL,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAD,CAAV,GAAsCL,aAAa,CAAC,CAAD,CAAnD,GAAyD,QAAQS,QAAQ,CAACC,eAAT,CAAyBC,YAFrE,CAAzB;AAIAT,EAAAA,KAAK,CAACE,eAAN,GAAyB,aAAYE,MAAO,OAAMC,MAAO,KAAzD;AAEA,sBAAO,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAET,KAAf;AAAsB,IAAA,GAAG,EAAC,OAA1B;AAAkC,IAAA,KAAK,EAAEI,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAdD;;AAgBA,MAAMU,KAAK,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBb,EAAAA,aAAlB;AAAiCc,EAAAA,sBAAjC;AAAyDC,EAAAA,oBAAzD;AAA+EC,EAAAA;AAA/E,CAAD,KAAwG;AAClH,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyB3B,OAAO,CAAC;AACnC4B,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE3B,SAAS,CAAC4B;AAAlB,KAD6B;AAEnCC,IAAAA,KAAK,EAAE,MAAM;AACTxB,MAAAA,KAAK,GAAGkB,iBAAiB,EAAzB;AACH,KAJkC;AAKnCO,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBP,MAAAA,UAAU,EAAE,CAAC,CAACO,OAAO,CAACP,UAAR;AADK,KAAd;AAL0B,GAAD,CAAtC;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,aAAa,EAAEjB,aAA7B;AAA4C,IAAA,cAAc,EAAEa,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD;AACI,IAAA,GAAG,EAAEK,IADT;AAEI,IAAA,cAAc,EAAEL,cAFpB;AAGI,IAAA,YAAY,EAAEC,sBAHlB;AAII,IAAA,UAAU,EAAEC,oBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAWH,CAtBD;;AAwBA,eAAeH,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useDrag } from 'react-dnd'\nimport { usePreview } from 'react-dnd-preview';\n\nimport { ItemTypes } from 'const';\n\nconst TreeDiv = styled.div`\n    position: absolute;\n    width: 50vw;\n    height: 30vw;\n    left: 0;\n`;\n\nconst AppleImg = styled.img`\n    position: absolute;\n    height: 21vh;\n    width: auto;\n    max-height: 80px;\n    z-index: 2;\n`;\n\nlet apple = null;\n\nconst ApplePreview = ({ touchPosition }) => {\n    const { display, style } = usePreview();\n    if (!display) {\n        return null;\n    }\n\n    const trans = style.WebkitTransform.split('(')[1].split(')')[0].split(', ');\n    const [transX, transY] = [\n        parseFloat(trans[0].split('px')[0]) + touchPosition[0] - 0.105 * document.documentElement.clientHeight,\n        parseFloat(trans[1].split('px')[0]) + touchPosition[1] - 0.105 * document.documentElement.clientHeight\n    ];\n    style.WebkitTransform = `translate(${transX}px, ${transY}px)`;\n\n    return <AppleImg src={apple} alt='apple' style={style} />;\n}\n\nconst Apple = ({ isTreeDragging, touchPosition, onTreeTouchStartHandle, onTreeTouchEndHandle, createRandomApple }) => {\n    const [{ isDragging }, drag] = useDrag({\n        item: { type: ItemTypes.APPLE },\n        begin: () => {\n            apple = createRandomApple();\n        },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n        }),\n    });\n\n    return (\n        <div>\n            <ApplePreview touchPosition={touchPosition} isTreeDragging={isTreeDragging} />\n            <TreeDiv\n                ref={drag}\n                isTreeDragging={isTreeDragging}\n                onTouchStart={onTreeTouchStartHandle}\n                onTouchEnd={onTreeTouchEndHandle}\n            ></TreeDiv>\n        </div>\n    );\n}\n\nexport default Apple;"]},"metadata":{},"sourceType":"module"}