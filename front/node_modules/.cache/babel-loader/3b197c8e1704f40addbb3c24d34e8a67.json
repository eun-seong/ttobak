{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Sweep/SweepContainer.js\";\nimport React from 'react';\nimport SweepPresenter from './SweepPresenter';\nimport { D1_Api, soundURL } from 'api';\nimport { D1, TTobak } from 'images';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nconst UP = 'up';\nconst DOWN = 'down';\n\nclass Sweep extends React.PureComponent {\n  constructor(props) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await D1_Api.ask(s_id);\n        console.log(data);\n\n        if (data.code === 1) {\n          const {\n            answers,\n            swp: {\n              ques_id,\n              ques_path1,\n              ques_path2\n            }\n          } = data;\n          this.currentIndex = 0;\n          this.ques_id = ques_id;\n          this.ques_path = [ques_path2, ques_path1];\n          this.oriAnswer = answers;\n          this.buttonSound = [new Audio(soundURL + this.ques_path[0]), new Audio(soundURL + this.ques_path[1])];\n          this.setListener();\n          setTimeout(() => this.playSound(), 3000);\n        } else console.log('data message: ' + data.message);\n      } catch (e) {\n        console.log('error: ' + e);\n      }\n    };\n\n    this.setListener = () => {\n      try {\n        this.setState({\n          swpSound: [UP === this.oriAnswer[this.currentIndex][0] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1]), UP === this.oriAnswer[this.currentIndex][1] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1])]\n        });\n        this.state.swpSound[0].addEventListener('ended', () => {\n          setTimeout(() => {\n            if (!!this.state.swpSound[1]) this.state.swpSound[1].play();\n          }, 900);\n        });\n        this.state.swpSound[1].addEventListener('ended', () => {\n          this.setState({\n            gameState: true,\n            TTobaki: TTobak.ttobak1_1\n          });\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.onTouchStart = id => {\n      const {\n        Answer,\n        stdAnswer,\n        gameState\n      } = this.state;\n      if (!gameState) return;\n\n      switch (id) {\n        case DOWN:\n          // console.log('down-down');\n          this.setState({\n            DownButton: D1.d1_DownButton_DOWN,\n            Answer: Answer.concat(gameState ? D1.d1_AnswerDown : []),\n            stdAnswer: stdAnswer.concat(gameState ? DOWN : [])\n          });\n          break;\n\n        case UP:\n          // console.log('up-down');\n          this.setState({\n            UpButton: D1.d1_UpButton_DOWN,\n            Answer: Answer.concat(gameState ? D1.d1_AnswerUp : []),\n            stdAnswer: stdAnswer.concat(gameState ? UP : [])\n          });\n          break;\n\n        default:\n      }\n    };\n\n    this.onTouchEnd = id => {\n      const {\n        gameState\n      } = this.state;\n      if (!gameState) return;\n\n      switch (id) {\n        case DOWN:\n          // console.log('down-up');\n          this.setState({\n            DownButton: D1.d1_DownButton_UP\n          });\n          if (gameState && !!this.buttonSound[1]) this.buttonSound[1].play();\n          break;\n\n        case UP:\n          // console.log('up-up');\n          this.setState({\n            UpButton: D1.d1_UpButton_UP\n          });\n          if (gameState && !!this.buttonSound[0]) this.buttonSound[0].play();\n          break;\n\n        default:\n      }\n\n      if (this.state.Answer.length === 2) this.finished();\n    };\n\n    this.TTobakiTouch = async () => {\n      if (this.state.gameState) {\n        this.playSound();\n      }\n    };\n\n    this.playSound = () => {\n      this.setState({\n        gameState: false\n      });\n      if (!!this.state.swpSound[0]) this.state.swpSound[0].play();\n    };\n\n    this.finished = async () => {\n      this.setState({\n        gameState: false,\n        TTobaki: TTobak.ttobak2_1\n      });\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        stdAnswer\n      } = this.state;\n      const answer = [this.oriAnswer[this.currentIndex][0], this.oriAnswer[this.currentIndex][1]];\n\n      try {\n        const {\n          data\n        } = await D1_Api.answer(s_id, this.ques_id, answer, stdAnswer);\n        console.log(data);\n        setTimeout(() => {\n          this.setState({\n            gameState: false,\n            Answer: [],\n            sweep: [],\n            path: [],\n            stdAnswer: [],\n            TTobaki: TTobak.ttobak1_1\n          });\n        }, 1500);\n\n        if (data.code === 1) {\n          if (data.to_next === true || data.to_next_freq === true) {\n            this.newRequest();\n            console.log('next');\n          } else if (data.is_stop || data.to_next === '모든 단계를 풀었습니다.') {\n            this.setState({\n              showNextPopup: true\n            });\n          } else {\n            if (this.currentIndex < this.oriAnswer.length - 1) this.currentIndex++;else {\n              this.setState({\n                showNextPopup: true\n              });\n              return;\n            }\n            this.setListener();\n            setTimeout(() => {\n              this.playSound();\n            }, 2000);\n          }\n        }\n      } catch (e) {\n        console.log(e); // TODO 에러 처리\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n            }\n          };\n        }\n      }\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.replace('/diagnose/recognition');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.buttonSound = null; // up_sweep, down_sweep 소리 경로\n\n    this.currentIndex = 0;\n    this.oriAnswer = null;\n    this.ques_id = null;\n    this.ques_path = null;\n    this.currentIndex = 0;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D1,\n      TTobak\n    };\n    this.totalImages = Object.keys(D1).length + Object.keys(TTobak).length;\n    this.state = {\n      gameState: false,\n      // 게임 상태\n      UpButton: D1.d1_UpButton_UP,\n      // 버튼 이미지 상태\n      DownButton: D1.d1_DownButton_UP,\n      // 버튼 이미지 상태\n      stdAnswer: [],\n      // 학습자 정답\n      Answer: [],\n      // 정답 상자\n      TTobaki: TTobak.ttobak1_1,\n      // 또박이 이미지 상태\n      swpSound: null,\n      isImageLoaded: false,\n      percent: 0,\n      showPopup: false,\n      showNextPopup: true\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    this.newRequest();\n    this.imagesPreloading(this.picture);\n    this.newRequest();\n  }\n\n  componentWillUnmount() {\n    if (!!this.state.swpSound) {\n      this.state.swpSound[0].pause();\n      this.state.swpSound[1].pause();\n    }\n\n    this.setState({\n      swpSound: null\n    });\n  }\n\n  render() {\n    const {\n      UpButton,\n      DownButton,\n      Answer,\n      TTobaki,\n      isImageLoaded,\n      showPopup,\n      showNextPopup,\n      percent\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(SweepPresenter, {\n        Background: D1.d1_background,\n        UP: UP,\n        DOWN: DOWN,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        UpButton: UpButton,\n        DownButton: DownButton,\n        Answer: Answer,\n        TTobak: TTobaki,\n        TTobakiTouch: this.TTobakiTouch,\n        AnswerBox: D1.d1_box,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nSweep.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Sweep));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Sweep/SweepContainer.js"],"names":["React","SweepPresenter","D1_Api","soundURL","D1","TTobak","withRouter","PropTypes","connect","LoadingComp","UP","DOWN","Sweep","PureComponent","constructor","props","newRequest","console","log","user","s_id","student","data","ask","code","answers","swp","ques_id","ques_path1","ques_path2","currentIndex","ques_path","oriAnswer","buttonSound","Audio","setListener","setTimeout","playSound","message","e","setState","swpSound","state","addEventListener","play","gameState","TTobaki","ttobak1_1","onTouchStart","id","Answer","stdAnswer","DownButton","d1_DownButton_DOWN","concat","d1_AnswerDown","UpButton","d1_UpButton_DOWN","d1_AnswerUp","onTouchEnd","d1_DownButton_UP","d1_UpButton_UP","length","finished","TTobakiTouch","ttobak2_1","answer","sweep","path","to_next","to_next_freq","is_stop","showNextPopup","imagesPreloading","picture","i","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","isImageLoaded","onPopupButtonHandle","history","replace","onContinueButtonHandle","showPopup","onPauseButtonHandle","Object","keys","componentDidMount","u_id","push","componentWillUnmount","pause","render","d1_background","d1_box","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SweepPresenter from './SweepPresenter';\nimport { D1_Api, soundURL } from 'api';\nimport { D1, TTobak } from 'images';\nimport { withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\n\nconst UP = 'up';\nconst DOWN = 'down';\n\nclass Sweep extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super();\n        this.buttonSound = null;                           // up_sweep, down_sweep 소리 경로\n        this.currentIndex = 0;\n        this.oriAnswer = null;\n        this.ques_id = null;\n        this.ques_path = null;\n        this.currentIndex = 0;\n        this.numOfLoadedImage = 0;\n        this.picture = { D1, TTobak };\n        this.totalImages = Object.keys(D1).length + Object.keys(TTobak).length;\n\n        this.state = {\n            gameState: false,                           // 게임 상태\n            UpButton: D1.d1_UpButton_UP,                // 버튼 이미지 상태\n            DownButton: D1.d1_DownButton_UP,            // 버튼 이미지 상태\n            stdAnswer: [],                              // 학습자 정답\n            Answer: [],                                 // 정답 상자\n            TTobaki: TTobak.ttobak1_1,                  // 또박이 이미지 상태\n            swpSound: null,\n            isImageLoaded: false,\n            percent: 0,\n            showPopup: false,\n            showNextPopup: true,\n        };\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        this.newRequest();\n        this.imagesPreloading(this.picture);\n        this.newRequest();\n    }\n\n    componentWillUnmount() {\n        if (!!this.state.swpSound) {\n            this.state.swpSound[0].pause();\n            this.state.swpSound[1].pause();\n        }\n        this.setState({\n            swpSound: null,\n        })\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await D1_Api.ask(s_id);\n            console.log(data);\n\n            if (data.code === 1) {\n                const { answers, swp: { ques_id, ques_path1, ques_path2 } } = data;\n                this.currentIndex = 0;\n                this.ques_id = ques_id;\n                this.ques_path = [ques_path2, ques_path1];\n                this.oriAnswer = answers;\n                this.buttonSound = [new Audio(soundURL + this.ques_path[0]), new Audio(soundURL + this.ques_path[1])];\n                this.setListener();\n                setTimeout(() => this.playSound(), 3000);\n            }\n            else console.log('data message: ' + data.message);\n        } catch (e) {\n            console.log('error: ' + e);\n        }\n    }\n\n    setListener = () => {\n        try {\n            this.setState({\n                swpSound: [\n                    (UP === this.oriAnswer[this.currentIndex][0] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1])),\n                    (UP === this.oriAnswer[this.currentIndex][1] ? new Audio(soundURL + this.ques_path[0]) : new Audio(soundURL + this.ques_path[1]))\n                ],\n            })\n\n            this.state.swpSound[0].addEventListener('ended', () => {\n                setTimeout(() => {\n                    if (!!this.state.swpSound[1]) this.state.swpSound[1].play();\n                }, 900)\n            });\n\n            this.state.swpSound[1].addEventListener('ended', () => {\n                this.setState({\n                    gameState: true,\n                    TTobaki: TTobak.ttobak1_1\n                });\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    onTouchStart = (id) => {\n        const { Answer, stdAnswer, gameState } = this.state;\n        if (!gameState) return;\n\n        switch (id) {\n            case DOWN:\n                // console.log('down-down');\n                this.setState({\n                    DownButton: D1.d1_DownButton_DOWN,\n                    Answer: Answer.concat(gameState ? D1.d1_AnswerDown : []),\n                    stdAnswer: stdAnswer.concat(gameState ? DOWN : [])\n                });\n                break;\n            case UP:\n                // console.log('up-down');\n                this.setState({\n                    UpButton: D1.d1_UpButton_DOWN,\n                    Answer: Answer.concat(gameState ? D1.d1_AnswerUp : []),\n                    stdAnswer: stdAnswer.concat(gameState ? UP : [])\n                });\n                break;\n            default:\n        }\n    }\n\n    onTouchEnd = (id) => {\n        const { gameState } = this.state;\n        if (!gameState) return;\n\n        switch (id) {\n            case DOWN:\n                // console.log('down-up');\n                this.setState({\n                    DownButton: D1.d1_DownButton_UP\n                });\n                if (gameState && !!this.buttonSound[1]) this.buttonSound[1].play();\n                break;\n            case UP:\n                // console.log('up-up');\n                this.setState({\n                    UpButton: D1.d1_UpButton_UP\n                });\n                if (gameState && !!this.buttonSound[0]) this.buttonSound[0].play();\n                break;\n            default:\n        }\n        if (this.state.Answer.length === 2) this.finished();\n    }\n\n    TTobakiTouch = async () => {\n        if (this.state.gameState) {\n            this.playSound();\n        }\n    }\n\n    playSound = () => {\n        this.setState({\n            gameState: false,\n        });\n\n        if (!!this.state.swpSound[0]) this.state.swpSound[0].play();\n    }\n\n    finished = async () => {\n        this.setState({\n            gameState: false,\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { stdAnswer } = this.state;\n        const answer = [this.oriAnswer[this.currentIndex][0], this.oriAnswer[this.currentIndex][1]];\n\n        try {\n            const { data } = await D1_Api.answer(s_id, this.ques_id, answer, stdAnswer);\n            console.log(data);\n\n            setTimeout(() => {\n                this.setState({\n                    gameState: false,\n                    Answer: [],\n                    sweep: [],\n                    path: [],\n                    stdAnswer: [],\n                    TTobaki: TTobak.ttobak1_1,\n                });\n            }, 1500);\n\n            if (data.code === 1) {\n                if (data.to_next === true || data.to_next_freq === true) {\n                    this.newRequest();\n                    console.log('next');\n                }\n                else if (data.is_stop || data.to_next === '모든 단계를 풀었습니다.') {\n                    this.setState({\n                        showNextPopup: true,\n                    });\n                } else {\n                    if (this.currentIndex < this.oriAnswer.length - 1) this.currentIndex++;\n                    else {\n                        this.setState({\n                            showNextPopup: true,\n                        });\n                        return;\n                    }\n\n                    this.setListener();\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 2000);\n                }\n            }\n        } catch (e) {\n            console.log(e);\n            // TODO 에러 처리\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                    }\n                };\n            }\n        }\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.replace('/diagnose/recognition');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { UpButton, DownButton, Answer, TTobaki, isImageLoaded, showPopup, showNextPopup, percent } = this.state;\n\n        if (isImageLoaded) {\n            return (\n                <SweepPresenter\n                    Background={D1.d1_background}\n                    UP={UP} DOWN={DOWN}\n                    onTouchStart={this.onTouchStart}\n                    onTouchEnd={this.onTouchEnd}\n                    UpButton={UpButton}\n                    DownButton={DownButton}\n                    Answer={Answer}\n                    TTobak={TTobaki}\n                    TTobakiTouch={this.TTobakiTouch}\n                    AnswerBox={D1.d1_box}\n                    showPopup={showPopup}\n                    showNextPopup={showNextPopup}\n                    onPopupButtonHandle={this.onPopupButtonHandle}\n                    onContinueButtonHandle={this.onContinueButtonHandle}\n                    onPauseButtonHandle={this.onPauseButtonHandle}\n                />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Sweep));"]},"metadata":{},"sourceType":"module"}