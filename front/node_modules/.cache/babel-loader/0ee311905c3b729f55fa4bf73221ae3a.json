{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignUp/SignUpContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SignUpPresenter from './SignUpPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_register } from 'Sessions/action.js';\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = (e, {\n      name,\n      email,\n      pw,\n      pw_check\n    }) => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n\n      if (pw !== pw_check) {\n        alert('비밀번호와 비밀번호 확인이 같지 않습니다.');\n        return false;\n      }\n\n      dispatch(user_register(email, pw, name));\n    };\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      user\n    } = this.props;\n    const {\n      history\n    } = this.props;\n    console.log(user);\n\n    if (user.user.u_id) {\n      alert('회원 가입에 성공했습니다.');\n      window.localStorage.setItem('uid', user.user.u_id);\n      this.props.history.push('/root/addstd');\n    }\n\n    if (user.response.data && user.response.data.code == 2) {\n      alert('이미 존재하는 이메일입니다.');\n    }\n  }\n\n  render() {\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n    return /*#__PURE__*/React.createElement(SignUpPresenter, {\n      handleSubmit: this.handleSubmit,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nSignUp.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SignUp));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Root/SignUp/SignUpContainer.js"],"names":["React","withRouter","SignUpPresenter","PropTypes","connect","user_register","SignUp","Component","handleSubmit","e","name","email","pw","pw_check","preventDefault","user","props","dispatch","alert","goBack","history","componentDidUpdate","console","log","u_id","window","localStorage","setItem","push","response","data","code","render","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAYjCC,YAZiC,GAYlB,CAACC,CAAD,EAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,EAAf;AAAmBC,MAAAA;AAAnB,KAAJ,KAAsC;AACjDJ,MAAAA,CAAC,CAACK,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKD,KAA1B;;AACA,UAAIJ,EAAE,KAAKC,QAAX,EAAqB;AACjBK,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACA,eAAO,KAAP;AACH;;AAEDD,MAAAA,QAAQ,CAACZ,aAAa,CAACM,KAAD,EAAQC,EAAR,EAAYF,IAAZ,CAAd,CAAR;AACH,KAtBgC;;AAAA,SAwBjCS,MAxBiC,GAwBxB,MAAM;AACX,WAAKH,KAAL,CAAWI,OAAX,CAAmBD,MAAnB;AACH,KA1BgC;AAAA;;AA2BjCE,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEN,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAc,KAAKJ,KAAzB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AAEA,QAAIA,IAAI,CAACA,IAAL,CAAUS,IAAd,EAAoB;AAChBN,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACAO,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,EAAmCZ,IAAI,CAACA,IAAL,CAAUS,IAA7C;AACA,WAAKR,KAAL,CAAWI,OAAX,CAAmBQ,IAAnB,CAAwB,cAAxB;AACH;;AAED,QAAIb,IAAI,CAACc,QAAL,CAAcC,IAAd,IAAsBf,IAAI,CAACc,QAAL,CAAcC,IAAd,CAAmBC,IAAnB,IAA2B,CAArD,EAAwD;AACpDb,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ;;AACDc,EAAAA,MAAM,GAAG;AAGL;AACR;AACA;AACA;AAEQ,wBAAQ,oBACJ,eADI;AAEJ,MAAA,YAAY,EAAE,KAAKxB,YAFf;AAGJ,MAAA,MAAM,EAAE,KAAKW,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAKH;;AAvDgC;;AAA/Bb,M,CAOK2B,S,GAAY;AACflB,EAAAA,IAAI,EAAEZ,SAAS,CAAC+B,QAAV,CAAmB/B,SAAS,CAACgC,GAA7B,EAAkCC,UADzB;AAEfnB,EAAAA,QAAQ,EAAEd,SAAS,CAACkC,IAAV,CAAeD;AAFV,C;;AAmDvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AAAExB,IAAAA,IAAI,EAAEwB,KAAK,CAACxB;AAAd,GAAP;AACH;;AAED,eAAeX,OAAO,CAACkC,eAAD,CAAP,CAAyBrC,UAAU,CAACK,MAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SignUpPresenter from './SignUpPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_register } from 'Sessions/action.js';\n\nclass SignUp extends React.Component {\n    /* \n    모든 로직 추가 \n    api 가져오기\n    error 처리 등 모든 것\n     */\n\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    handleSubmit = (e, { name, email, pw, pw_check }) => {\n        e.preventDefault();\n        const { user } = this.props;\n        const { dispatch } = this.props;\n        if (pw !== pw_check) {\n            alert('비밀번호와 비밀번호 확인이 같지 않습니다.');\n            return false;\n        }\n\n        dispatch(user_register(email, pw, name));\n    };\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n    componentDidUpdate() {\n        const { user } = this.props;\n        const { history } = this.props;\n        console.log(user);\n\n        if (user.user.u_id) {\n            alert('회원 가입에 성공했습니다.');\n            window.localStorage.setItem('uid', user.user.u_id);\n            this.props.history.push('/root/addstd');\n        }\n\n        if (user.response.data && user.response.data.code == 2) {\n            alert('이미 존재하는 이메일입니다.');\n        }\n    }\n    render() {\n\n\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n\n        return (<\n            SignUpPresenter\n            handleSubmit={this.handleSubmit}\n            goBack={this.goBack}\n        />);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SignUp));"]},"metadata":{},"sourceType":"module"}