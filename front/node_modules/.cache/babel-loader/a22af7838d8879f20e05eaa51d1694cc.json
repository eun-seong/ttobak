{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Components/Card.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport effectSound from 'tic.mp3';\nconst sound = new Audio(effectSound);\nconst [isTouched, setTouched] = useState(false);\nconst CardComponent = styled.div`\n    display: flex;\n    width: ${props => props.cardSize || '30vw'};\n    height: 100%;\n    max-width: 50vw;\n    text-align: center;\n`;\nconst ImgComponent = styled.div`\n    display: flex;\n    background-image: url(${props => props.src});\n    background-repeat: no-repeat;\n    background-size: 100% auto;\n    width: 100%;\n    height: 100%;\n    justify-content:center;\n    z-index: 1;\n    ${props => {\n  if (isTouched) {\n    return css`filter: drop-shadow(0px 0px 5px #000);`;\n  }\n}}\n`;\nconst TextComponent = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align:center;\n    font-size: ${props => props.textSize || '1rem'};\n    font-weight: bold;\n    width: 80%;\n    height: 50%;\n    z-index: 2;\n`;\n\nconst Card = ({\n  src,\n  text,\n  textSize,\n  cardSize,\n  index,\n  onCardTouchHandle,\n  gameState\n}) => {\n  return /*#__PURE__*/React.createElement(CardComponent, {\n    cardSize: cardSize,\n    onTouchEnd: () => {\n      setTouched(false);\n      onCardTouchHandle(index);\n    },\n    onTouchStart: () => {\n      setTouched(true);\n      gameState && sound.play();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImgComponent, {\n    src: src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextComponent, {\n    textSize: textSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, text || 'ㅅ')));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Components/Card.js"],"names":["React","useState","styled","css","effectSound","sound","Audio","isTouched","setTouched","CardComponent","div","props","cardSize","ImgComponent","src","TextComponent","textSize","Card","text","index","onCardTouchHandle","gameState","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,SAAxB;AAEA,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,WAAV,CAAd;AACA,MAAM,CAACG,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,MAAMQ,aAAa,GAAGP,MAAM,CAACQ,GAAI;AACjC;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACC,QAAN,IAAkB,MAAO;AAC/C;AACA;AACA;AACA,CANA;AAQA,MAAMC,YAAY,GAAGX,MAAM,CAACQ,GAAI;AAChC;AACA,4BAA4BC,KAAK,IAAIA,KAAK,CAACG,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMH,KAAK,IAAI;AACP,MAAIJ,SAAJ,EAAe;AACX,WAAOJ,GAAI,wCAAX;AACH;AACJ,CACA;AACL,CAfA;AAiBA,MAAMY,aAAa,GAAGb,MAAM,CAACQ,GAAI;AACjC;AACA;AACA;AACA;AACA,iBAAiBC,KAAK,IAAIA,KAAK,CAACK,QAAN,IAAkB,MAAO;AACnD;AACA;AACA;AACA;AACA,CAVA;;AAYA,MAAMC,IAAI,GAAG,CAAC;AAAEH,EAAAA,GAAF;AAAOI,EAAAA,IAAP;AAAaF,EAAAA,QAAb;AAAuBJ,EAAAA,QAAvB;AAAiCO,EAAAA,KAAjC;AAAwCC,EAAAA,iBAAxC;AAA2DC,EAAAA;AAA3D,CAAD,KAA4E;AAErF,sBACI,oBAAC,aAAD;AACI,IAAA,QAAQ,EAAET,QADd;AAEI,IAAA,UAAU,EAAE,MAAM;AACdJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAY,MAAAA,iBAAiB,CAACD,KAAD,CAAjB;AACH,KALL;AAMI,IAAA,YAAY,EAAE,MAAM;AAChBX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAa,MAAAA,SAAS,IAAIhB,KAAK,CAACiB,IAAN,EAAb;AACH,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAER,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEE,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCE,IAAI,IAAI,GAA5C,CADJ,CAVJ,CADJ;AAgBH,CAlBD;;AAoBA,eAAeD,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport effectSound from 'tic.mp3';\n\nconst sound = new Audio(effectSound);\nconst [isTouched, setTouched] = useState(false);\n\nconst CardComponent = styled.div`\n    display: flex;\n    width: ${props => props.cardSize || '30vw'};\n    height: 100%;\n    max-width: 50vw;\n    text-align: center;\n`;\n\nconst ImgComponent = styled.div`\n    display: flex;\n    background-image: url(${props => props.src});\n    background-repeat: no-repeat;\n    background-size: 100% auto;\n    width: 100%;\n    height: 100%;\n    justify-content:center;\n    z-index: 1;\n    ${props => {\n        if (isTouched) {\n            return css`filter: drop-shadow(0px 0px 5px #000);`\n        }\n    }\n    }\n`;\n\nconst TextComponent = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align:center;\n    font-size: ${props => props.textSize || '1rem'};\n    font-weight: bold;\n    width: 80%;\n    height: 50%;\n    z-index: 2;\n`;\n\nconst Card = ({ src, text, textSize, cardSize, index, onCardTouchHandle, gameState }) => {\n\n    return (\n        <CardComponent\n            cardSize={cardSize}\n            onTouchEnd={() => {\n                setTouched(false);\n                onCardTouchHandle(index);\n            }}\n            onTouchStart={() => {\n                setTouched(true);\n                gameState && sound.play();\n            }}>\n            <ImgComponent src={src}>\n                <TextComponent textSize={textSize}>{text || 'ㅅ'}</TextComponent>\n            </ImgComponent>\n        </CardComponent>\n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}