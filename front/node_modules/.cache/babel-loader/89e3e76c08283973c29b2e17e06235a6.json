{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T6_ConsoMatch/ConsoMatchContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ConsoMatchPresenter from './ConsoMatchPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport { T6, Characters } from 'images';\nimport { T_Api4, soundURL, T_tutorial } from 'api';\nconst idx_txt = 'consomatch';\nconst initState = {\n  gameState: false,\n  PicBoxList: null,\n  Worm: Characters.worm2_2,\n  isImageLoaded: false,\n  showPopup: false,\n  showDonePopup: false,\n  showDailyPopup: false,\n  percent: 0,\n  currentIndex: 1,\n  totalNum: 0\n};\n\nclass ConsoMatch extends React.Component {\n  constructor({\n    match\n  }) {\n    super();\n\n    this.getListFilter = (key, value) => {\n      return this.cure.filter(object => {\n        return object[key] === value;\n      })[0];\n    };\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const {\n        data\n      } = await T_Api4.ask(s_id);\n      console.log(data);\n\n      if (data.code === 'tutorial') {\n        this.tutorial(data);\n        return;\n      }\n\n      if (data.code === 'specified' || data.code === 1) {\n        this.currentIndex = 0;\n        this.answer = data.answer;\n        this.cure = data.cure;\n        this.totalImages += this.cure.length;\n        this.pictursPreloading(this.cure);\n        this.setCurrent(0);\n        this.setState({\n          totalNum: this.cure.length\n        });\n        setTimeout(() => this.playSound(), 1000);\n      } else console.log('data message: ' + data.message);\n    };\n\n    this.daily = () => {\n      if (this.props.location.state.data.code === 'tutorial') {\n        this.tutorial(this.props.location.state.data);\n        return;\n      }\n\n      console.log(this.props.location.state.data);\n      this.answer = this.props.location.state.data.answer;\n      this.cure = this.props.location.state.data.cure;\n      this.currentCure = this.answer[this.currentIndex];\n      this.setState({\n        totalNum: this.answer.length,\n        PicBoxList: [soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2]\n      });\n      this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n      this.currentAudio.addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          Worm: Characters.worm2_2\n        });\n      });\n      setTimeout(() => this.playSound(), 1000);\n    };\n\n    this.tutorial = data => {\n      this.voice = [new Audio(soundURL + data.tut_voice[0].voc_path), new Audio(soundURL + data.tut_voice[1].voc_path), new Audio(soundURL + data.tut_voice[2].voc_path)];\n      this.currentCure = data.sample_ques;\n      this.setAudio(true);\n      this.setState({\n        CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2]\n      });\n      this.voice[0].addEventListener('ended', () => {\n        setTimeout(() => {\n          this.playSound();\n        }, 1000);\n      });\n      this.voice[1].addEventListener('ended', () => {\n        this.setState({\n          gameState: 'tutorial',\n          Worm: Characters.wi = orm1_1\n        });\n      });\n      this.voice[2].addEventListener('ended', async () => {\n        const {\n          data\n        } = await T_tutorial.answer(this.props.user.student.s_id, this.type, this.currentCure.cure_id);\n        console.log(data);\n        this.setState({\n          gameState: false\n        });\n        if (this.learning_type === 'daily') this.daily();else this.newRequest();\n        this.currentCure = null;\n        this.voice = null;\n      }); // setTimeout(() => {\n      //     this.voice[0].play();\n      // }, 2000);\n    };\n\n    this.setCurrent = timeout => {\n      this.currentCure = this.answer[this.currentIndex];\n      this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n      this.currentAudio.addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          Worm: Characters.worm2_2\n        });\n      });\n      setTimeout(() => {\n        this.setState({\n          PicBoxList: [soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2, soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2],\n          currentIndex: this.currentIndex + 1,\n          Worm: Characters.worm2_2\n        });\n      }, timeout);\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          gameState: false,\n          Worm: Characters.worm2_1\n        });\n        this.currentAudio.play();\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('done!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.onFrameTouchHandle = async id => {\n      const {\n        gameState\n      } = this.state;\n      if (!gameState) return;\n      this.setState({\n        gameState: false,\n        Worm: Characters.worm3_1\n      });\n\n      try {\n        const {\n          user\n        } = this.props;\n        const s_id = user.student.s_id;\n        const cure_id = [this.getListFilter('cure_tid', this.currentCure[0]).cure_id, this.getListFilter('cure_tid', this.currentCure[1]).cure_id, this.getListFilter('cure_tid', this.currentCure[2]).cure_id];\n        const {\n          data\n        } = await T_Api4.answer(s_id, cure_id, this.getListFilter('cure_tid', this.currentCure[id]).cure_word, this.getListFilter('cure_tid', this.currentCure[3][0]).cure_word, this.learning_type === 'review' ? 'T' : 'F', this.learning_type === 'daily' ? 'T' : 'F');\n        console.log(data);\n\n        switch (data.code) {\n          case 1:\n            if (this.currentIndex < this.answer.length - 1) this.currentIndex++;else {\n              this.gameDone();\n              return;\n            }\n            this.setCurrent(2000);\n            setTimeout(() => {\n              this.playSound();\n            }, 3000);\n            break;\n\n          case 2:\n            console.log(data.message);\n            this.gameDone();\n            break;\n\n          default:\n            this.props.history.replace('/main/main');\n            break;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.onWormTouchHandle = () => {\n      if (this.state.gameState) this.playSound();\n    };\n\n    this.pictursPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.replace('/main/main');\n      }, 10000);\n\n      try {\n        for (let i in picture) {\n          let img = new Image();\n          img.src = soundURL + picture[i].cure_path2;\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 1000);\n              clearTimeout(timeoutPreloading);\n            }\n          };\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              if (this.learning_type !== 'daily') this.newRequest();else this.daily();\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.learning_type = match.params.learning_type;\n    this.cure = null;\n    this.answer = null;\n    this.currentCure = null;\n    this.currentAudio = null;\n    this.currentIndex = 0;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      T6,\n      Characters\n    };\n    this.totalImages = Object.keys(T6).length + Object.keys(Characters).length;\n    this.state = initState;\n  }\n\n  componentDidCatch() {}\n\n  async componentDidMount() {\n    this.imagesPreloading(this.picture);\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n  }\n\n  render() {\n    const {\n      PicBoxList,\n      Worm,\n      isImageLoaded,\n      showPopup,\n      percent,\n      gameState,\n      showDailyPopup,\n      showDonePopup,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(ConsoMatchPresenter, {\n        Background: T6.t6_background,\n        Worm: Worm,\n        onWormTouchHandle: this.onWormTouchHandle,\n        frameList: PicBoxList || [T6.t6_excpic, T6.t6_excpic, T6.t6_excpic],\n        onFrameTouchHandle: this.onFrameTouchHandle,\n        showPopup: showPopup,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        gameState: gameState,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nConsoMatch.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(ConsoMatch));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T6_ConsoMatch/ConsoMatchContainer.js"],"names":["React","withRouter","ConsoMatchPresenter","PropTypes","connect","LoadingComp","T6","Characters","T_Api4","soundURL","T_tutorial","idx_txt","initState","gameState","PicBoxList","Worm","worm2_2","isImageLoaded","showPopup","showDonePopup","showDailyPopup","percent","currentIndex","totalNum","ConsoMatch","Component","constructor","match","getListFilter","key","value","cure","filter","object","newRequest","console","log","user","props","s_id","student","data","ask","code","tutorial","answer","totalImages","length","pictursPreloading","setCurrent","setState","setTimeout","playSound","message","daily","location","state","currentCure","cure_path2","currentAudio","Audio","cure_path","addEventListener","voice","tut_voice","voc_path","sample_ques","setAudio","CardTextList","cure_word","cure_word2","wi","orm1_1","type","cure_id","learning_type","timeout","worm2_1","play","gameDone","onFrameTouchHandle","id","worm3_1","history","replace","e","onWormTouchHandle","picture","timeoutPreloading","i","img","Image","src","onload","numOfLoadedImage","clearTimeout","imagesPreloading","prop","onContinueButtonHandle","onRestartButtonHandle","onPauseButtonHandle","params","Object","keys","componentDidCatch","componentDidMount","u_id","push","componentWillUnmount","pause","render","t6_background","t6_excpic","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ConsoMatchPresenter from './ConsoMatchPresenter';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport { T6, Characters } from 'images';\nimport { T_Api4, soundURL, T_tutorial } from 'api';\n\nconst idx_txt = 'consomatch';\nconst initState = {\n    gameState: false,\n    PicBoxList: null,\n    Worm: Characters.worm2_2,\n    isImageLoaded: false,\n    showPopup: false,\n    showDonePopup: false,\n    showDailyPopup: false,\n    percent: 0,\n    currentIndex: 1,\n    totalNum: 0,\n};\n\nclass ConsoMatch extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match }) {\n        super();\n        this.learning_type = match.params.learning_type;\n        this.cure = null;\n        this.answer = null;\n        this.currentCure = null;\n        this.currentAudio = null;\n        this.currentIndex = 0;\n        this.numOfLoadedImage = 0;\n        this.picture = { T6, Characters };\n        this.totalImages = Object.keys(T6).length + Object.keys(Characters).length;\n\n        this.state = initState;\n\n    }\n\n    componentDidCatch() {\n\n    }\n\n    async componentDidMount() {\n        this.imagesPreloading(this.picture);\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n    }\n\n    getListFilter = (key, value) => {\n        return this.cure.filter((object) => { return object[key] === value })[0]\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        const { data } = await T_Api4.ask(s_id);\n        console.log(data);\n\n        if (data.code === 'tutorial') {\n            this.tutorial(data);\n            return;\n        }\n\n        if (data.code === 'specified' || data.code === 1) {\n            this.currentIndex = 0;\n            this.answer = data.answer;\n            this.cure = data.cure;\n\n            this.totalImages += this.cure.length;\n            this.pictursPreloading(this.cure);\n            this.setCurrent(0);\n\n            this.setState({\n                totalNum: this.cure.length,\n            })\n            setTimeout(() => this.playSound(), 1000);\n        }\n        else console.log('data message: ' + data.message);\n\n    }\n\n    daily = () => {\n        if (this.props.location.state.data.code === 'tutorial') {\n            this.tutorial(this.props.location.state.data);\n            return;\n        }\n\n        console.log(this.props.location.state.data);\n\n        this.answer = this.props.location.state.data.answer;\n        this.cure = this.props.location.state.data.cure;\n\n        this.currentCure = this.answer[this.currentIndex];\n\n        this.setState({\n            totalNum: this.answer.length,\n            PicBoxList: [\n                soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2,\n                soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2,\n                soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2,\n            ]\n        });\n\n        this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n        this.currentAudio.addEventListener('ended', () => {\n            this.setState({\n                gameState: true,\n                Worm: Characters.worm2_2,\n            })\n        });\n        setTimeout(() => this.playSound(), 1000);\n    }\n\n    tutorial = (data) => {\n        this.voice = [\n            new Audio(soundURL + data.tut_voice[0].voc_path),\n            new Audio(soundURL + data.tut_voice[1].voc_path),\n            new Audio(soundURL + data.tut_voice[2].voc_path),\n        ];\n        this.currentCure = data.sample_ques;\n        this.setAudio(true);\n\n        this.setState({\n            CardTextList: [this.currentCure.cure_word, this.currentCure.cure_word2],\n        });\n\n        this.voice[0].addEventListener('ended', () => {\n            setTimeout(() => {\n                this.playSound();\n            }, 1000);\n        });\n\n        this.voice[1].addEventListener('ended', () => {\n            this.setState({\n                gameState: 'tutorial',\n                Worm: Characters.wi = orm1_1,\n            });\n        });\n\n        this.voice[2].addEventListener('ended', async () => {\n            const { data } = await T_tutorial.answer(this.props.user.student.s_id, this.type, this.currentCure.cure_id);\n            console.log(data);\n            this.setState({\n                gameState: false,\n            });\n            if (this.learning_type === 'daily') this.daily();\n            else this.newRequest();\n\n            this.currentCure = null;\n            this.voice = null;\n        });\n\n        // setTimeout(() => {\n        //     this.voice[0].play();\n        // }, 2000);\n    }\n\n    setCurrent = (timeout) => {\n        this.currentCure = this.answer[this.currentIndex];\n\n        this.currentAudio = new Audio(soundURL + this.getListFilter('cure_tid', this.currentCure[3][0]).cure_path);\n        this.currentAudio.addEventListener('ended', () => {\n            this.setState({\n                gameState: true,\n                Worm: Characters.worm2_2,\n            })\n        })\n\n        setTimeout(() => {\n            this.setState({\n                PicBoxList: [\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[0]).cure_path2,\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[1]).cure_path2,\n                    soundURL + this.getListFilter('cure_tid', this.currentCure[2]).cure_path2,\n                ],\n                currentIndex: this.currentIndex + 1,\n                Worm: Characters.worm2_2,\n            })\n        }, timeout);\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                gameState: false,\n                Worm: Characters.worm2_1,\n            });\n            this.currentAudio.play();\n        }\n    }\n\n    gameDone = () => {\n        console.log('done!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    onFrameTouchHandle = async (id) => {\n        const { gameState } = this.state;\n        if (!gameState) return;\n        this.setState({\n            gameState: false,\n            Worm: Characters.worm3_1,\n        });\n\n        try {\n            const { user } = this.props;\n            const s_id = user.student.s_id;\n            const cure_id = [\n                this.getListFilter('cure_tid', this.currentCure[0]).cure_id,\n                this.getListFilter('cure_tid', this.currentCure[1]).cure_id,\n                this.getListFilter('cure_tid', this.currentCure[2]).cure_id,\n            ];\n            const { data } = await T_Api4.answer(\n                s_id,\n                cure_id,\n                this.getListFilter('cure_tid', this.currentCure[id]).cure_word,\n                this.getListFilter('cure_tid', this.currentCure[3][0]).cure_word,\n                this.learning_type === 'review' ? 'T' : 'F',\n                this.learning_type === 'daily' ? 'T' : 'F',\n            );\n            console.log(data);\n\n            switch (data.code) {\n                case 1:\n                    if (this.currentIndex < this.answer.length - 1) this.currentIndex++;\n                    else {\n                        this.gameDone();\n                        return;\n                    }\n                    this.setCurrent(2000);\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 3000);\n                    break;\n                case 2:\n                    console.log(data.message);\n                    this.gameDone();\n                    break;\n                default:\n                    this.props.history.replace('/main/main')\n                    break;\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    onWormTouchHandle = () => {\n        if (this.state.gameState) this.playSound();\n    }\n\n    pictursPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.replace('/main/main');\n        }, 10000);\n\n        try {\n            for (let i in picture) {\n                let img = new Image();\n                img.src = soundURL + picture[i].cure_path2;\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 1000);\n                        clearTimeout(timeoutPreloading);\n                    }\n                };\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        if (this.learning_type !== 'daily') this.newRequest();\n                        else this.daily();\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { PicBoxList, Worm, isImageLoaded, showPopup, percent, gameState, showDailyPopup, showDonePopup,\n            currentIndex, totalNum } = this.state;\n\n        if (isImageLoaded) {\n            return (\n                <ConsoMatchPresenter\n                    Background={T6.t6_background}\n                    Worm={Worm}\n                    onWormTouchHandle={this.onWormTouchHandle}\n                    frameList={PicBoxList || [T6.t6_excpic, T6.t6_excpic, T6.t6_excpic]}\n                    onFrameTouchHandle={this.onFrameTouchHandle}\n                    showPopup={showPopup}\n                    onContinueButtonHandle={this.onContinueButtonHandle}\n                    onPauseButtonHandle={this.onPauseButtonHandle}\n                    onRestartButtonHandle={this.onRestartButtonHandle}\n                    showDailyPopup={showDailyPopup}\n                    showDonePopup={showDonePopup}\n                    gameState={gameState}\n                    currentIndex={currentIndex}\n                    totalNum={totalNum}\n                />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(ConsoMatch));"]},"metadata":{},"sourceType":"module"}