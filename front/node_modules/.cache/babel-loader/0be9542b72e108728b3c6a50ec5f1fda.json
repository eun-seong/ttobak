{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Attention/AttentionContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport AttentionPresenter from './AttentionPresenter';\nimport recording_end from 'recording_end.mp3';\nimport recording_start from 'recording_start.mp3';\nimport { D3, TTobak } from 'images';\nimport { D3_Api, soundURL } from 'api';\n\nclass Attention extends React.Component {\n  constructor() {\n    super();\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.setState({\n        isRecording: false\n      });\n      this.recording_end_sound.play();\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.newRequest = async () => {\n      const {\n        user\n      } = this.props;\n      const data = await D3_Api.ask(1, user.student.s_id);\n      console.log(data);\n\n      if (data.code === 1) {\n        this.cure = data.focus;\n        this.currentIndex = 0;\n        this.currentCure = this.cure[this.currentIndex];\n        this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n      }\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      try {\n        if (this.audioResult.status === 'Success') {\n          const {\n            s_id\n          } = this.state;\n          console.log(s_id, this.currentCure.ques_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score);\n          const {\n            data\n          } = await D3_Api.answer(s_id, this.currentCure.ques_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score);\n          console.log(data);\n\n          if (data.code === 1) {\n            if (data.is_stop) {\n              this.gameDone();\n            } else if (data.to_next_level) {\n              this.newRequest();\n              setTimeout(() => {\n                this.playSound();\n              }, 3000);\n            } else {\n              if (this.currentIndex < this.cure.length - 1) {\n                this.currentIndex++;\n              } else {\n                this.gameDone();\n                return;\n              }\n\n              this.currentCure = this.cure[this.currentIndex];\n              this.currentAudio = null;\n              this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n              setTimeout(() => {\n                this.setState({\n                  TTobaki: TTobak.ttobak1_1\n                });\n              }, 3000);\n              setTimeout(() => {\n                this.playSound();\n              }, 5500);\n            }\n          } else console.log(data.message);\n        } else {\n          console.log(this.audioResult.message);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2\n        });\n        this.currentAudio.play();\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1\n          });\n          setTimeout(() => {\n            console.log('이제 따라 읽어볼까요?');\n            this.recording_start_sound.play();\n            this.setState({\n              isRecording: true\n            });\n            window.BRIDGE.recordAudio('m', this.currentCure.ques_char);\n          }, 1000);\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 2000);\n            }\n          };\n        }\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n      this.setState({\n        showNextPopup: true\n      });\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.replace('/diagnose/result');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.recording_start_sound = new Audio(recording_start);\n    this.recording_end_sound = new Audio(recording_end);\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D3,\n      TTobak\n    };\n    this.totalImages = Object.keys(D3).length + Object.keys(TTobak).length;\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.state = {\n      gameState: false,\n      s_id: 4,\n      isImageLoaded: false,\n      percent: 0,\n      showPopup: false,\n      showNextPopup: false,\n      isRecording: false,\n      TTobak: TTobak.ttobak1_1\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    this.newRequest();\n    this.imagesPreloading(this.picture);\n    window.addEventListener(\"android\", this.androidResponse);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n\n    window.removeEventListener(\"android\", this.androidResponse);\n  }\n\n  render() {\n    const {\n      isImageLoaded,\n      showPopup,\n      showNextPopup,\n      percent,\n      TTobak,\n      isRecording\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(AttentionPresenter, {\n        Background: D3.d3_background,\n        TTobak: TTobak,\n        isRecording: isRecording,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nAttention.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Attention));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Attention/AttentionContainer.js"],"names":["React","withRouter","PropTypes","connect","LoadingComp","AttentionPresenter","recording_end","recording_start","D3","TTobak","D3_Api","soundURL","Attention","Component","constructor","androidResponse","e","console","log","detail","setState","isRecording","recording_end_sound","play","audioResult","andriodListener","newRequest","user","props","data","ask","student","s_id","code","cure","focus","currentIndex","currentCure","currentAudio","Audio","ques_path1","TTobaki","ttobak2_1","status","state","ques_id","score","phone_score","speed_score","rhythm_score","answer","is_stop","gameDone","to_next_level","setTimeout","playSound","length","ttobak1_1","message","ttobak3_2","addEventListener","recording_start_sound","window","BRIDGE","recordAudio","ques_char","imagesPreloading","picture","i","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","isImageLoaded","showNextPopup","onPopupButtonHandle","history","replace","onContinueButtonHandle","showPopup","onPauseButtonHandle","Object","keys","gameState","componentDidMount","u_id","push","componentWillUnmount","pause","removeEventListener","render","d3_background","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport AttentionPresenter from './AttentionPresenter';\nimport recording_end from 'recording_end.mp3';\nimport recording_start from 'recording_start.mp3';\n\nimport { D3, TTobak } from 'images';\nimport { D3_Api, soundURL } from 'api';\n\nclass Attention extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n        this.recording_start_sound = new Audio(recording_start);\n        this.recording_end_sound = new Audio(recording_end);\n        this.numOfLoadedImage = 0;\n        this.picture = { D3, TTobak };\n        this.totalImages = Object.keys(D3).length + Object.keys(TTobak).length;\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n\n        this.state = {\n            gameState: false,\n            s_id: 4,\n            isImageLoaded: false,\n            percent: 0,\n            showPopup: false,\n            showNextPopup: false,\n            isRecording: false,\n            TTobak: TTobak.ttobak1_1,\n        };\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        this.newRequest();\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener(\"android\", this.androidResponse);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n        window.removeEventListener(\"android\", this.androidResponse)\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.setState({\n            isRecording: false,\n        })\n        this.recording_end_sound.play();\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    newRequest = async () => {\n        const { user } = this.props;\n\n        const data = await D3_Api.ask(1, user.student.s_id);\n        console.log(data);\n\n        if (data.code === 1) {\n            this.cure = data.focus;\n            this.currentIndex = 0;\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n        }\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        try {\n            if (this.audioResult.status === 'Success') {\n                const { s_id } = this.state;\n                console.log(\n                    s_id,\n                    this.currentCure.ques_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score)\n                const { data } = await D3_Api.answer(\n                    s_id,\n                    this.currentCure.ques_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score,\n                );\n                console.log(data);\n\n                if (data.code === 1) {\n                    if (data.is_stop) {\n                        this.gameDone();\n                    } else if (data.to_next_level) {\n                        this.newRequest();\n                        setTimeout(() => {\n                            this.playSound();\n                        }, 3000);\n                    } else {\n                        if (this.currentIndex < this.cure.length - 1) {\n                            this.currentIndex++;\n                        } else {\n                            this.gameDone();\n                            return;\n                        }\n                        this.currentCure = this.cure[this.currentIndex];\n                        this.currentAudio = null;\n                        this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n\n                        setTimeout(() => {\n                            this.setState({\n                                TTobaki: TTobak.ttobak1_1,\n                            });\n                        }, 3000);\n\n                        setTimeout(() => {\n                            this.playSound();\n                        }, 5500);\n                    }\n                }\n                else console.log(data.message);\n\n            } else {\n                console.log(this.audioResult.message);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n            });\n            this.currentAudio.play();\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                });\n                setTimeout(() => {\n                    console.log('이제 따라 읽어볼까요?');\n                    this.recording_start_sound.play();\n                    this.setState({\n                        isRecording: true,\n                    });\n                    window.BRIDGE.recordAudio('m', this.currentCure.ques_char);\n                }, 1000);\n            });\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 2000);\n                    }\n                };\n            }\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        this.setState({\n            showNextPopup: true,\n        });\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.replace('/diagnose/result');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { isImageLoaded, showPopup, showNextPopup, percent, TTobak, isRecording } = this.state;\n\n        if (isImageLoaded) {\n            return (<AttentionPresenter\n                Background={D3.d3_background}\n                TTobak={TTobak}\n                isRecording={isRecording}\n                showPopup={showPopup}\n                showNextPopup={showNextPopup}\n                onPopupButtonHandle={this.onPopupButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Attention));"]},"metadata":{},"sourceType":"module"}