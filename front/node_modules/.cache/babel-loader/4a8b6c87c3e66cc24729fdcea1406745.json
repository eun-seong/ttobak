{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js\";\nimport React from 'react';\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { SoundEffect } from 'images';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { T1, TTobak } from 'images';\nimport { T1_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nclass Shadowing extends React.Component {\n  constructor({\n    match,\n    location\n  }) {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await T1_Api.ask(s_id, this.idx_text);\n        console.log(data);\n\n        if (data.code === 'specified' || data.code === 1) {\n          this.currentIndex = 0;\n          this.cure = data.cure;\n          this.currentCure = data.cure[this.currentIndex];\n          this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n          if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            cureText: this.currentCure.cure_text,\n            totalNum: this.cure.length\n          });\n          setTimeout(() => this.playSound(), 1000);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.stopRecording = e => {\n      console.log(e.detail);\n      clearInterval(this.setRecording);\n      this.recording_end_sound.play();\n      this.setState({\n        isRecording: false,\n        RecordingCircle: false\n      });\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      try {\n        if (this.audioResult.status === 'Success') {\n          const {\n            user\n          } = this.props;\n          const s_id = user.student.s_id;\n          const {\n            data\n          } = await T1_Api.answer(s_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score, this.learning_type === 'review' ? 'T' : 'F', this.currentCure.cure_id, this.idx_text);\n          console.log(data);\n\n          if (data.code === 1) {\n            if (this.currentIndex < this.cure.length - 1) {\n              this.currentIndex++;\n            } else {\n              this.gameDone();\n              return;\n            }\n\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = null;\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n            setTimeout(() => {\n              this.setState({\n                TTobaki: TTobak.ttobak1_1,\n                cureText: this.currentCure.cure_text,\n                currentIndex: this.currentIndex + 1\n              });\n            }, 3000);\n            setTimeout(() => {\n              this.playSound();\n            }, 5500);\n          } else if (data.code === 2) {\n            this.gameDone();\n          } else console.log(data.message);\n        } else {\n          console.log(this.audioResult.message);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2,\n          isPlaying: true\n        });\n        this.currentAudio.play();\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1,\n            isPlaying: false\n          });\n          setTimeout(() => {\n            this.recording_start_sound.play();\n            this.setState({\n              isRecording: true\n            });\n            this.setRecording = setInterval(() => {\n              this.setState({\n                RecordingCircle: !this.state.RecordingCircle\n              });\n            }, 500);\n            window.BRIDGE.recordAudio(this.props.student.gender, this.currentCure.cure_text);\n          }, 800);\n        });\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n\n      if (this.learning_type !== 'daily') {\n        this.setState({\n          showDonePopup: true\n        });\n      } else {\n        this.setState({\n          showDailyPopup: true\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      let timeoutPreloading = setTimeout(() => {\n        this.props.history.replace('/main/main');\n      }, 10000);\n\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true,\n                TTobaki: TTobak.ttobak1_1\n              });\n              this.newRequest();\n              clearTimeout(timeoutPreloading);\n            }\n          };\n        }\n      }\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onRestartButtonHandle = () => {\n      this.setState({\n        showDonePopup: false\n      });\n      this.newRequest();\n      setTimeout(() => this.playSound(), 2000);\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.onCompleteButtonHandle = () => {\n      if (this.state.isRecording) {\n        window.BRIDGE.requestStopRecording();\n      }\n    };\n\n    this.idx_text = match.params.type;\n    this.learning_type = match.params.learning_type;\n    this.recording_start_sound = new Audio(SoundEffect.recording_start);\n    this.recording_end_sound = new Audio(SoundEffect.recording_end);\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.picture = {\n      T1,\n      TTobak\n    };\n    this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n    this.numOfLoadedImage = 0;\n    this.state = {\n      cureText: null,\n      isRecording: false,\n      TTobaki: TTobak.ttobak1_1,\n      isImageLoaded: false,\n      showPopup: false,\n      showDonePopup: false,\n      showDailyPopup: false,\n      percent: 0,\n      currentIndex: 1,\n      totalNum: 0,\n      isPlaying: false,\n      RecordingCircle: false\n    };\n\n    if (this.learning_type === 'daily') {\n      console.log(location.state.data.read);\n      this.cure = location.state.data.read;\n      this.state = { ...this.state,\n        totalNum: this.cure.length\n      };\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    if (this.learning_type !== 'daily') this.newRequest();else {\n      this.currentCure = this.cure[this.currentIndex];\n      this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n      if (this.idx_text === 'vowelword' || this.idx_text === 'consoword') this.currentCure.cure_text = this.currentCure.cure_word;\n      this.state = {\n        cureText: this.currentCure.cure_text\n      };\n    }\n    this.imagesPreloading(this.picture);\n    window.addEventListener('android', this.androidResponse);\n    window.addEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n\n    window.removeEventListener('android', this.androidResponse);\n    window.removeEventListener('androidStopRecording', this.stopRecording);\n  }\n\n  render() {\n    const {\n      cureText,\n      TTobaki,\n      RecordingCircle,\n      isImageLoaded,\n      isPlaying,\n      showPopup,\n      showDonePopup,\n      showDailyPopup,\n      percent,\n      currentIndex,\n      totalNum\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(ShadowingPresenter, {\n        Background: T1.t1_background,\n        TextBox: T1.t1_textbox,\n        bt_complete: T1.bt_complete,\n        TTobak: TTobaki,\n        isPlaying: isPlaying,\n        text: cureText,\n        RecordingCircle: RecordingCircle,\n        onCompleteButtonHandle: this.onCompleteButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onRestartButtonHandle: this.onRestartButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        showPopup: showPopup,\n        showDailyPopup: showDailyPopup,\n        showDonePopup: showDonePopup,\n        currentIndex: currentIndex,\n        totalNum: totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nShadowing.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Therapy/T1_Shadowing/ShadowingContainer.js"],"names":["React","ShadowingPresenter","SoundEffect","withRouter","PropTypes","connect","T1","TTobak","T1_Api","soundURL","LoadingComp","Shadowing","Component","constructor","match","location","newRequest","console","log","user","props","s_id","student","data","ask","idx_text","code","currentIndex","cure","currentCure","currentAudio","Audio","cure_path","cure_text","cure_word","setState","TTobaki","ttobak1_1","cureText","totalNum","length","setTimeout","playSound","e","androidResponse","detail","audioResult","andriodListener","stopRecording","clearInterval","setRecording","recording_end_sound","play","isRecording","RecordingCircle","ttobak2_1","status","answer","score","phone_score","speed_score","rhythm_score","learning_type","cure_id","gameDone","message","ttobak3_2","isPlaying","addEventListener","recording_start_sound","setInterval","state","window","BRIDGE","recordAudio","gender","showDonePopup","showDailyPopup","imagesPreloading","picture","timeoutPreloading","history","replace","i","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","isImageLoaded","clearTimeout","onContinueButtonHandle","showPopup","onRestartButtonHandle","onPauseButtonHandle","onCompleteButtonHandle","requestStopRecording","params","type","recording_start","recording_end","Object","keys","read","componentDidMount","u_id","push","componentWillUnmount","pause","removeEventListener","render","t1_background","t1_textbox","bt_complete","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ShadowingPresenter from './ShadowingPresenter';\nimport { SoundEffect } from 'images';\n\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { T1, TTobak } from 'images';\nimport { T1_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nclass Shadowing extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor({ match, location }) {\n        super();\n        this.idx_text = match.params.type;\n        this.learning_type = match.params.learning_type;\n        this.recording_start_sound = new Audio(SoundEffect.recording_start);\n        this.recording_end_sound = new Audio(SoundEffect.recording_end);\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n        this.picture = { T1, TTobak };\n        this.totalImages = Object.keys(this.picture.T1).length + Object.keys(this.picture.TTobak).length;\n        this.numOfLoadedImage = 0;\n\n        this.state = {\n            cureText: null,\n            isRecording: false,\n            TTobaki: TTobak.ttobak1_1,\n            isImageLoaded: false,\n            showPopup: false,\n            showDonePopup: false,\n            showDailyPopup: false,\n            percent: 0,\n            currentIndex: 1,\n            totalNum: 0,\n            isPlaying: false,\n            RecordingCircle: false,\n        }\n\n        if (this.learning_type === 'daily') {\n            console.log(location.state.data.read);\n            this.cure = location.state.data.read;\n            this.state = {\n                ...this.state,\n                totalNum: this.cure.length,\n            }\n        }\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        if (this.learning_type !== 'daily') this.newRequest();\n        else {\n            this.currentCure = this.cure[this.currentIndex];\n            this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n            if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                this.currentCure.cure_text = this.currentCure.cure_word;\n            this.state = {\n                cureText: this.currentCure.cure_text\n            };\n        }\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener('android', this.androidResponse);\n        window.addEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n        window.removeEventListener('android', this.androidResponse);\n        window.removeEventListener('androidStopRecording', this.stopRecording);\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await T1_Api.ask(s_id, this.idx_text);\n            console.log(data);\n\n            if (data.code === 'specified' || data.code === 1) {\n                this.currentIndex = 0;\n                this.cure = data.cure;\n                this.currentCure = data.cure[this.currentIndex];\n                this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n                if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                    this.currentCure.cure_text = this.currentCure.cure_word;\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    cureText: this.currentCure.cure_text,\n                    totalNum: this.cure.length,\n                });\n                setTimeout(() => this.playSound(), 1000);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    stopRecording = (e) => {\n        console.log(e.detail);\n        clearInterval(this.setRecording);\n        this.recording_end_sound.play();\n        this.setState({\n            isRecording: false,\n            RecordingCircle: false,\n        });\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        try {\n            if (this.audioResult.status === 'Success') {\n                const { user } = this.props;\n                const s_id = user.student.s_id;\n                const { data } = await T1_Api.answer(\n                    s_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score,\n                    this.learning_type === 'review' ? 'T' : 'F',\n                    this.currentCure.cure_id,\n                    this.idx_text\n                );\n                console.log(data);\n\n                if (data.code === 1) {\n                    if (this.currentIndex < this.cure.length - 1) {\n                        this.currentIndex++;\n                    } else {\n                        this.gameDone();\n                        return;\n                    }\n                    this.currentCure = this.cure[this.currentIndex];\n                    this.currentAudio = null;\n                    this.currentAudio = new Audio(soundURL + this.currentCure.cure_path);\n                    if (this.idx_text === 'vowelword' || this.idx_text === 'consoword')\n                        this.currentCure.cure_text = this.currentCure.cure_word;\n\n                    setTimeout(() => {\n                        this.setState({\n                            TTobaki: TTobak.ttobak1_1,\n                            cureText: this.currentCure.cure_text,\n                            currentIndex: this.currentIndex + 1\n                        });\n                    }, 3000);\n\n                    setTimeout(() => {\n                        this.playSound();\n                    }, 5500);\n\n                } else if (data.code === 2) {\n                    this.gameDone();\n                }\n                else console.log(data.message);\n\n            } else {\n                console.log(this.audioResult.message);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n                isPlaying: true,\n            });\n            this.currentAudio.play();\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                    isPlaying: false,\n                });\n                setTimeout(() => {\n                    this.recording_start_sound.play();\n                    this.setState({\n                        isRecording: true,\n                    })\n                    this.setRecording = setInterval(() => {\n                        this.setState({\n                            RecordingCircle: !this.state.RecordingCircle,\n                        });\n                    }, 500);\n                    window.BRIDGE.recordAudio(this.props.student.gender, this.currentCure.cure_text);\n                }, 800);\n            });\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        if (this.learning_type !== 'daily') {\n            this.setState({\n                showDonePopup: true,\n            })\n        } else {\n            this.setState({\n                showDailyPopup: true,\n            })\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        let timeoutPreloading = setTimeout(() => {\n            this.props.history.replace('/main/main');\n        }, 10000);\n\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    })\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                            TTobaki: TTobak.ttobak1_1,\n                        })\n                        this.newRequest();\n                        clearTimeout(timeoutPreloading);\n                    }\n                };\n            }\n        }\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onRestartButtonHandle = () => {\n        this.setState({\n            showDonePopup: false,\n        })\n        this.newRequest();\n        setTimeout(() => this.playSound(), 2000);\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    onCompleteButtonHandle = () => {\n        if (this.state.isRecording) {\n            window.BRIDGE.requestStopRecording();\n        }\n    }\n\n    render() {\n        const { cureText, TTobaki, RecordingCircle, isImageLoaded, isPlaying,\n            showPopup, showDonePopup, showDailyPopup, percent,\n            currentIndex, totalNum } = this.state;\n\n        if (isImageLoaded) {\n            return (<ShadowingPresenter\n                Background={T1.t1_background} TextBox={T1.t1_textbox} bt_complete={T1.bt_complete}\n                TTobak={TTobaki} isPlaying={isPlaying}\n                text={cureText} RecordingCircle={RecordingCircle}\n                onCompleteButtonHandle={this.onCompleteButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onRestartButtonHandle={this.onRestartButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                showPopup={showPopup}\n                showDailyPopup={showDailyPopup}\n                showDonePopup={showDonePopup}\n                currentIndex={currentIndex}\n                totalNum={totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Shadowing));"]},"metadata":{},"sourceType":"module"}