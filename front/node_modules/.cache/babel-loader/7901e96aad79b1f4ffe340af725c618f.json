{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Recognition/RecognitionContainer.js\";\nimport React from 'react';\nimport RecognitionPresenter from './RecognitionPresenter';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TTobak, D2 } from 'images';\nimport { D2_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\n\nclass Recognition extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.newRequest = async () => {\n      console.log('new request');\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n\n      try {\n        const {\n          data\n        } = await D2_Api.ask(s_id);\n        console.log(data);\n\n        if (data.code === 1) {\n          this.answers = data.answers;\n          this.phs = data.phs;\n          this.currentIndex = 0;\n          this.currentDiag = [this.getListFilter('ques_id', this.answers[this.currentIndex][0]), this.getListFilter('ques_id', this.answers[this.currentIndex][1]), this.getListFilter('ques_id', this.answers[this.currentIndex][2])];\n          this.setState({\n            gameState: false,\n            Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n            stdAnswer: null,\n            TTobaki: TTobak.ttobak1_1,\n            answerIndex: this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1,\n            totalNum: this.answers.length\n          });\n          this.setListener();\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.setListener = () => {\n      this.phSound = [new Audio(soundURL + this.currentDiag[0].ques_path1), new Audio(soundURL + this.currentDiag[1].ques_path1), new Audio(soundURL + this.currentDiag[2].ques_path1)];\n      this.phSound[2].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.phSound[0]) {\n            this.phSound[0].play();\n            this.setState({\n              isAnimate: [true, false],\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 800);\n      });\n      this.phSound[0].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak1_1\n        });\n        setTimeout(() => {\n          if (!!this.phSound[1]) {\n            this.phSound[1].play();\n            this.setState({\n              isAnimate: [false, true],\n              TTobaki: TTobak.ttobak3_2\n            });\n          }\n        }, 300);\n      });\n      this.phSound[1].addEventListener('ended', () => {\n        this.setState({\n          gameState: true,\n          TTobaki: TTobak.ttobak1_1\n        });\n      });\n    };\n\n    this.getListFilter = (key, value) => {\n      return this.phs.filter(object => {\n        return object[key] === value;\n      })[0];\n    };\n\n    this.TTobakiTouch = async () => {\n      if (!!this.state.gameState) {\n        this.playSound();\n        this.setState({\n          gameState: false,\n          isAnimate: [false, false]\n        });\n      }\n    };\n\n    this.onBoxTouchHandle = async id => {\n      const {\n        Box,\n        answerIndex,\n        TTobaki,\n        gameState\n      } = this.state;\n      if (!gameState) return;\n\n      switch (id) {\n        case 0:\n          this.setState({\n            gameState: false,\n            Box: [answerIndex === id ? D2.d2_Box1_3 : D2.d2_Box1_2, Box[1]],\n            TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki]\n          });\n          break;\n\n        case 1:\n          this.setState({\n            gameState: false,\n            Box: [Box[0], answerIndex === id ? D2.d2_Box2_3 : D2.d2_Box2_2],\n            TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki]\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      this.finished(id);\n    };\n\n    this.animateBox = index => {\n      if (!index) this.setState({\n        isAnimate: [true, false]\n      });else this.setState({\n        isAnimate: [true, true]\n      });\n    };\n\n    this.playSound = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak3_2\n      });\n      if (!!this.phSound[2]) this.phSound[2].play();\n    };\n\n    this.diagDone = () => {\n      console.log('diagnose done!');\n      this.setState({\n        showNextPopup: true\n      });\n    };\n\n    this.finished = async id => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n      const {\n        user\n      } = this.props;\n      const s_id = user.student.s_id;\n      const [ph, oriAnswer, stdAnswer] = [[this.currentDiag[0].ques_id, this.currentDiag[1].ques_id], this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? this.currentDiag[0].ques_char : this.currentDiag[1].ques_char, this.currentDiag[id].ques_char];\n\n      try {\n        const {\n          data\n        } = await D2_Api.answer(s_id, oriAnswer, stdAnswer, ph);\n        console.log(data);\n\n        if (data.code === 1) {\n          if (this.currentIndex < this.answers.length - 1) this.currentIndex++;else {\n            this.diagDone();\n            return;\n          }\n          this.currentDiag = [this.getListFilter('ques_id', this.answers[this.currentIndex][0]), this.getListFilter('ques_id', this.answers[this.currentIndex][1]), this.getListFilter('ques_id', this.answers[this.currentIndex][2])];\n          this.setListener();\n          setTimeout(() => {\n            this.setState({\n              gameState: false,\n              Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n              stdAnswer: null,\n              TTobaki: TTobak.ttobak3_1,\n              answerIndex: this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1,\n              currentIndex: this.currentIndex + 1\n            });\n          }, 2000);\n          setTimeout(() => {\n            this.playSound();\n          }, 3000);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 1000);\n            }\n          };\n        }\n      }\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.replace('/diagnose/attention');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.state = {\n      gameState: false,\n      Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n      // Box 이미지\n      TTobaki: TTobak.ttobak3_1,\n      oriAnswer: null,\n      // 정답\n      stdAnswer: null,\n      // 학생 답\n      answerIndex: 0,\n      isAnimate: [false, false],\n      isImageLoaded: false,\n      showPopup: false,\n      showNextPopup: true,\n      currentIndex: 1,\n      totalNum: 0\n    };\n    this.phs = null;\n    this.answers = null;\n    this.phSound = null;\n    this.answer = null;\n    this.currentIndex = 0;\n    this.currentDiag = null;\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D2,\n      TTobak\n    };\n    this.totalImages = Object.keys(D2).length + Object.keys(TTobak).length;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    this.newRequest();\n    this.imagesPreloading(this.picture);\n  }\n\n  componentWillUnmount() {\n    for (var i = 0; i < this.phSound.length; i++) {\n      if (!!this.phSound[i]) {\n        this.phSound[i].pause();\n        this.phSound[i] = null;\n      }\n    }\n  }\n\n  render() {\n    const {\n      Box,\n      TTobaki,\n      isAnimate,\n      showPopup,\n      showNextPopup,\n      percent,\n      isImageLoaded\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(RecognitionPresenter, {\n        Background: D2.d2_background,\n        TTobaki: TTobaki,\n        TTobakiTouch: this.TTobakiTouch,\n        Box: Box,\n        Clicked: this.onBoxTouchHandle,\n        isAnimate: isAnimate,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        currentIndex: this.state.currentIndex,\n        totalNum: this.state.totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nRecognition.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Recognition));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Recognition/RecognitionContainer.js"],"names":["React","RecognitionPresenter","withRouter","PropTypes","connect","TTobak","D2","D2_Api","soundURL","LoadingComp","Recognition","PureComponent","constructor","newRequest","console","log","user","props","s_id","student","data","ask","code","answers","phs","currentIndex","currentDiag","getListFilter","setState","gameState","Box","d2_Box1_1","d2_Box2_1","stdAnswer","TTobaki","ttobak1_1","answerIndex","ques_id","totalNum","length","setListener","e","phSound","Audio","ques_path1","addEventListener","setTimeout","play","isAnimate","ttobak3_2","key","value","filter","object","TTobakiTouch","state","playSound","onBoxTouchHandle","id","d2_Box1_3","d2_Box1_2","ttobak2_1","d2_Box2_3","d2_Box2_2","finished","animateBox","index","diagDone","showNextPopup","ph","oriAnswer","ques_char","answer","ttobak3_1","imagesPreloading","picture","i","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","isImageLoaded","onPopupButtonHandle","history","replace","onContinueButtonHandle","showPopup","onPauseButtonHandle","Object","keys","componentDidMount","u_id","push","componentWillUnmount","pause","render","d2_background","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,MAAT,EAAiBC,EAAjB,QAA2B,QAA3B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,KAAjC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AACA,MAAMC,WAAN,SAA0BV,KAAK,CAACW,aAAhC,CAA8C;AAM1CC,EAAAA,WAAW,GAAG;AACV;;AADU,SAsDdC,UAtDc,GAsDD,YAAY;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,YAAMC,IAAI,GAAGF,IAAI,CAACG,OAAL,CAAaD,IAA1B;;AAEA,UAAI;AACA,cAAM;AAAEE,UAAAA;AAAF,YAAW,MAAMb,MAAM,CAACc,GAAP,CAAWH,IAAX,CAAvB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;;AAEA,YAAIA,IAAI,CAACE,IAAL,KAAc,CAAlB,EAAqB;AACjB,eAAKC,OAAL,GAAeH,IAAI,CAACG,OAApB;AACA,eAAKC,GAAL,GAAWJ,IAAI,CAACI,GAAhB;AACA,eAAKC,YAAL,GAAoB,CAApB;AACA,eAAKC,WAAL,GAAmB,CACf,KAAKC,aAAL,CAAmB,SAAnB,EAA8B,KAAKJ,OAAL,CAAa,KAAKE,YAAlB,EAAgC,CAAhC,CAA9B,CADe,EAEf,KAAKE,aAAL,CAAmB,SAAnB,EAA8B,KAAKJ,OAAL,CAAa,KAAKE,YAAlB,EAAgC,CAAhC,CAA9B,CAFe,EAGf,KAAKE,aAAL,CAAmB,SAAnB,EAA8B,KAAKJ,OAAL,CAAa,KAAKE,YAAlB,EAAgC,CAAhC,CAA9B,CAHe,CAAnB;AAKA,eAAKG,QAAL,CAAc;AACVC,YAAAA,SAAS,EAAE,KADD;AAEVC,YAAAA,GAAG,EAAE,CAACxB,EAAE,CAACyB,SAAJ,EAAezB,EAAE,CAAC0B,SAAlB,CAFK;AAGVC,YAAAA,SAAS,EAAE,IAHD;AAIVC,YAAAA,OAAO,EAAE7B,MAAM,CAAC8B,SAJN;AAKVC,YAAAA,WAAW,EAAG,KAAKV,WAAL,CAAiB,CAAjB,EAAoBW,OAApB,KAAgC,KAAKX,WAAL,CAAiB,CAAjB,EAAoBW,OAApD,GAA8D,CAA9D,GAAkE,CALtE;AAMVC,YAAAA,QAAQ,EAAE,KAAKf,OAAL,CAAagB;AANb,WAAd;AAQA,eAAKC,WAAL;AACH;AACJ,OAvBD,CAuBE,OAAOC,CAAP,EAAU;AACR3B,QAAAA,OAAO,CAACC,GAAR,CAAY0B,CAAZ;AACH;AACJ,KArFa;;AAAA,SAuFdD,WAvFc,GAuFA,MAAM;AAChB,WAAKE,OAAL,GAAe,CACX,IAAIC,KAAJ,CAAUnC,QAAQ,GAAG,KAAKkB,WAAL,CAAiB,CAAjB,EAAoBkB,UAAzC,CADW,EAEX,IAAID,KAAJ,CAAUnC,QAAQ,GAAG,KAAKkB,WAAL,CAAiB,CAAjB,EAAoBkB,UAAzC,CAFW,EAGX,IAAID,KAAJ,CAAUnC,QAAQ,GAAG,KAAKkB,WAAL,CAAiB,CAAjB,EAAoBkB,UAAzC,CAHW,CAAf;AAMA,WAAKF,OAAL,CAAa,CAAb,EAAgBG,gBAAhB,CAAiC,OAAjC,EAA0C,MAAM;AAC5C,aAAKjB,QAAL,CAAc;AACVM,UAAAA,OAAO,EAAE7B,MAAM,CAAC8B;AADN,SAAd;AAGAW,QAAAA,UAAU,CAAC,MAAM;AACb,cAAI,CAAC,CAAC,KAAKJ,OAAL,CAAa,CAAb,CAAN,EAAuB;AACnB,iBAAKA,OAAL,CAAa,CAAb,EAAgBK,IAAhB;AACA,iBAAKnB,QAAL,CAAc;AACVoB,cAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,KAAP,CADD;AAEVd,cAAAA,OAAO,EAAE7B,MAAM,CAAC4C;AAFN,aAAd;AAIH;AACJ,SARS,EAQP,GARO,CAAV;AASH,OAbD;AAeA,WAAKP,OAAL,CAAa,CAAb,EAAgBG,gBAAhB,CAAiC,OAAjC,EAA0C,MAAM;AAC5C,aAAKjB,QAAL,CAAc;AACVM,UAAAA,OAAO,EAAE7B,MAAM,CAAC8B;AADN,SAAd;AAGAW,QAAAA,UAAU,CAAC,MAAM;AACb,cAAI,CAAC,CAAC,KAAKJ,OAAL,CAAa,CAAb,CAAN,EAAuB;AACnB,iBAAKA,OAAL,CAAa,CAAb,EAAgBK,IAAhB;AACA,iBAAKnB,QAAL,CAAc;AACVoB,cAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,IAAR,CADD;AAEVd,cAAAA,OAAO,EAAE7B,MAAM,CAAC4C;AAFN,aAAd;AAIH;AACJ,SARS,EAQP,GARO,CAAV;AASH,OAbD;AAcA,WAAKP,OAAL,CAAa,CAAb,EAAgBG,gBAAhB,CAAiC,OAAjC,EAA0C,MAAM;AAC5C,aAAKjB,QAAL,CAAc;AACVC,UAAAA,SAAS,EAAE,IADD;AAEVK,UAAAA,OAAO,EAAE7B,MAAM,CAAC8B;AAFN,SAAd;AAIH,OALD;AAMH,KAjIa;;AAAA,SAmIdR,aAnIc,GAmIE,CAACuB,GAAD,EAAMC,KAAN,KAAgB;AAC5B,aAAO,KAAK3B,GAAL,CAAS4B,MAAT,CAAiBC,MAAD,IAAY;AAAE,eAAOA,MAAM,CAACH,GAAD,CAAN,KAAgBC,KAAvB;AAA8B,OAA5D,EAA8D,CAA9D,CAAP;AACH,KArIa;;AAAA,SAuIdG,YAvIc,GAuIC,YAAY;AACvB,UAAI,CAAC,CAAC,KAAKC,KAAL,CAAW1B,SAAjB,EAA4B;AACxB,aAAK2B,SAAL;AACA,aAAK5B,QAAL,CAAc;AACVC,UAAAA,SAAS,EAAE,KADD;AAEVmB,UAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,KAAR;AAFD,SAAd;AAIH;AACJ,KA/Ia;;AAAA,SAiJdS,gBAjJc,GAiJK,MAAOC,EAAP,IAAc;AAC7B,YAAM;AAAE5B,QAAAA,GAAF;AAAOM,QAAAA,WAAP;AAAoBF,QAAAA,OAApB;AAA6BL,QAAAA;AAA7B,UAA2C,KAAK0B,KAAtD;AACA,UAAI,CAAC1B,SAAL,EAAgB;;AAEhB,cAAQ6B,EAAR;AACI,aAAK,CAAL;AACI,eAAK9B,QAAL,CAAc;AACVC,YAAAA,SAAS,EAAE,KADD;AAEVC,YAAAA,GAAG,EAAE,CAACM,WAAW,KAAKsB,EAAhB,GAAqBpD,EAAE,CAACqD,SAAxB,GAAoCrD,EAAE,CAACsD,SAAxC,EAAmD9B,GAAG,CAAC,CAAD,CAAtD,CAFK;AAGVI,YAAAA,OAAO,EAAE,CAACE,WAAW,KAAKsB,EAAhB,GAAqBrD,MAAM,CAACwD,SAA5B,GAAwC3B,OAAzC;AAHC,WAAd;AAKA;;AACJ,aAAK,CAAL;AACI,eAAKN,QAAL,CAAc;AACVC,YAAAA,SAAS,EAAE,KADD;AAEVC,YAAAA,GAAG,EAAE,CAACA,GAAG,CAAC,CAAD,CAAJ,EAASM,WAAW,KAAKsB,EAAhB,GAAqBpD,EAAE,CAACwD,SAAxB,GAAoCxD,EAAE,CAACyD,SAAhD,CAFK;AAGV7B,YAAAA,OAAO,EAAE,CAACE,WAAW,KAAKsB,EAAhB,GAAqBrD,MAAM,CAACwD,SAA5B,GAAwC3B,OAAzC;AAHC,WAAd;AAKA;;AACJ;AACI;AAhBR;;AAmBA,WAAK8B,QAAL,CAAcN,EAAd;AACH,KAzKa;;AAAA,SA2KdO,UA3Kc,GA2KAC,KAAD,IAAW;AACpB,UAAI,CAACA,KAAL,EACI,KAAKtC,QAAL,CAAc;AACVoB,QAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,KAAP;AADD,OAAd,EADJ,KAKI,KAAKpB,QAAL,CAAc;AACVoB,QAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP;AADD,OAAd;AAGP,KApLa;;AAAA,SAsLdQ,SAtLc,GAsLF,YAAY;AACpB,WAAK5B,QAAL,CAAc;AACVM,QAAAA,OAAO,EAAE7B,MAAM,CAAC4C;AADN,OAAd;AAGA,UAAI,CAAC,CAAC,KAAKP,OAAL,CAAa,CAAb,CAAN,EAAuB,KAAKA,OAAL,CAAa,CAAb,EAAgBK,IAAhB;AAC1B,KA3La;;AAAA,SA6LdoB,QA7Lc,GA6LH,MAAM;AACbrD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAKa,QAAL,CAAc;AACVwC,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH,KAlMa;;AAAA,SAoMdJ,QApMc,GAoMH,MAAON,EAAP,IAAc;AACrB,WAAK9B,QAAL,CAAc;AACVM,QAAAA,OAAO,EAAE7B,MAAM,CAACwD;AADN,OAAd;AAGA,YAAM;AAAE7C,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,YAAMC,IAAI,GAAGF,IAAI,CAACG,OAAL,CAAaD,IAA1B;AACA,YAAM,CAACmD,EAAD,EAAKC,SAAL,EAAgBrC,SAAhB,IAA6B,CAC/B,CAAC,KAAKP,WAAL,CAAiB,CAAjB,EAAoBW,OAArB,EAA8B,KAAKX,WAAL,CAAiB,CAAjB,EAAoBW,OAAlD,CAD+B,EAE/B,KAAKX,WAAL,CAAiB,CAAjB,EAAoBW,OAApB,KAAgC,KAAKX,WAAL,CAAiB,CAAjB,EAAoBW,OAApD,GAA8D,KAAKX,WAAL,CAAiB,CAAjB,EAAoB6C,SAAlF,GAA8F,KAAK7C,WAAL,CAAiB,CAAjB,EAAoB6C,SAFnF,EAG/B,KAAK7C,WAAL,CAAiBgC,EAAjB,EAAqBa,SAHU,CAAnC;;AAMA,UAAI;AACA,cAAM;AAAEnD,UAAAA;AAAF,YAAW,MAAMb,MAAM,CAACiE,MAAP,CAActD,IAAd,EAAoBoD,SAApB,EAA+BrC,SAA/B,EAA0CoC,EAA1C,CAAvB;AACAvD,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;;AAEA,YAAIA,IAAI,CAACE,IAAL,KAAc,CAAlB,EAAqB;AACjB,cAAI,KAAKG,YAAL,GAAoB,KAAKF,OAAL,CAAagB,MAAb,GAAsB,CAA9C,EAAiD,KAAKd,YAAL,GAAjD,KACK;AACD,iBAAK0C,QAAL;AACA;AACH;AAED,eAAKzC,WAAL,GAAmB,CACf,KAAKC,aAAL,CAAmB,SAAnB,EAA8B,KAAKJ,OAAL,CAAa,KAAKE,YAAlB,EAAgC,CAAhC,CAA9B,CADe,EAEf,KAAKE,aAAL,CAAmB,SAAnB,EAA8B,KAAKJ,OAAL,CAAa,KAAKE,YAAlB,EAAgC,CAAhC,CAA9B,CAFe,EAGf,KAAKE,aAAL,CAAmB,SAAnB,EAA8B,KAAKJ,OAAL,CAAa,KAAKE,YAAlB,EAAgC,CAAhC,CAA9B,CAHe,CAAnB;AAMA,eAAKe,WAAL;AACAM,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKlB,QAAL,CAAc;AACVC,cAAAA,SAAS,EAAE,KADD;AAEVC,cAAAA,GAAG,EAAE,CAACxB,EAAE,CAACyB,SAAJ,EAAezB,EAAE,CAAC0B,SAAlB,CAFK;AAGVC,cAAAA,SAAS,EAAE,IAHD;AAIVC,cAAAA,OAAO,EAAE7B,MAAM,CAACoE,SAJN;AAKVrC,cAAAA,WAAW,EAAG,KAAKV,WAAL,CAAiB,CAAjB,EAAoBW,OAApB,KAAgC,KAAKX,WAAL,CAAiB,CAAjB,EAAoBW,OAApD,GAA8D,CAA9D,GAAkE,CALtE;AAMVZ,cAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AANxB,aAAd;AAQH,WATS,EASP,IATO,CAAV;AAWAqB,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKU,SAAL;AACH,WAFS,EAEP,IAFO,CAAV;AAGH;AACJ,OAjCD,CAiCE,OAAOf,CAAP,EAAU;AACR3B,QAAAA,OAAO,CAACC,GAAR,CAAY0B,CAAZ;AACH;AACJ,KApPa;;AAAA,SAsPdiC,gBAtPc,GAsPMC,OAAD,IAAa;AAC5B,WAAK,IAAIC,CAAT,IAAcD,OAAd,EAAuB;AACnB,aAAK,IAAIE,IAAT,IAAiBF,OAAO,CAACC,CAAD,CAAxB,EAA6B;AACzB,cAAIE,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,UAAAA,GAAG,CAACE,GAAJ,GAAUL,OAAO,CAACC,CAAD,CAAP,CAAWC,IAAX,CAAV;;AACAC,UAAAA,GAAG,CAACG,MAAJ,GAAa,MAAM;AACf,iBAAKrD,QAAL,CAAc;AACVsD,cAAAA,OAAO,EAAG,EAAE,KAAKC,gBAAP,GAA0B,KAAKC,WAAhC,GAA+C;AAD9C,aAAd;;AAIA,gBAAI,KAAKD,gBAAL,KAA0B,KAAKC,WAAnC,EAAgD;AAC5C,mBAAKxD,QAAL,CAAc;AACVyD,gBAAAA,aAAa,EAAE;AADL,eAAd;AAGAvC,cAAAA,UAAU,CAAC,MAAM,KAAKU,SAAL,EAAP,EAAyB,IAAzB,CAAV;AACH;AACJ,WAXD;AAYH;AACJ;AACJ,KAzQa;;AAAA,SA2Qd8B,mBA3Qc,GA2QQ,MAAM;AACxB,WAAKrE,KAAL,CAAWsE,OAAX,CAAmBC,OAAnB,CAA2B,qBAA3B;AACH,KA7Qa;;AAAA,SA+QdC,sBA/Qc,GA+QW,MAAM;AAC3B,WAAK7D,QAAL,CAAc;AACV8D,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAnRa;;AAAA,SAqRdC,mBArRc,GAqRQ,MAAM;AACxB,WAAK/D,QAAL,CAAc;AACV8D,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAzRa;;AAEV,SAAKnC,KAAL,GAAa;AACT1B,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,GAAG,EAAE,CAACxB,EAAE,CAACyB,SAAJ,EAAezB,EAAE,CAAC0B,SAAlB,CAFI;AAEmC;AAC5CE,MAAAA,OAAO,EAAE7B,MAAM,CAACoE,SAHP;AAITH,MAAAA,SAAS,EAAE,IAJF;AAImC;AAC5CrC,MAAAA,SAAS,EAAE,IALF;AAKmC;AAC5CG,MAAAA,WAAW,EAAE,CANJ;AAOTY,MAAAA,SAAS,EAAE,CAAC,KAAD,EAAQ,KAAR,CAPF;AAQTqC,MAAAA,aAAa,EAAE,KARN;AASTK,MAAAA,SAAS,EAAE,KATF;AAUTtB,MAAAA,aAAa,EAAE,IAVN;AAWT3C,MAAAA,YAAY,EAAE,CAXL;AAYTa,MAAAA,QAAQ,EAAE;AAZD,KAAb;AAeA,SAAKd,GAAL,GAAW,IAAX;AACA,SAAKD,OAAL,GAAe,IAAf;AACA,SAAKmB,OAAL,GAAe,IAAf;AACA,SAAK8B,MAAL,GAAc,IAAd;AACA,SAAK/C,YAAL,GAAoB,CAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKyD,gBAAL,GAAwB,CAAxB;AACA,SAAKR,OAAL,GAAe;AAAErE,MAAAA,EAAF;AAAMD,MAAAA;AAAN,KAAf;AACA,SAAK+E,WAAL,GAAmBQ,MAAM,CAACC,IAAP,CAAYvF,EAAZ,EAAgBiC,MAAhB,GAAyBqD,MAAM,CAACC,IAAP,CAAYxF,MAAZ,EAAoBkC,MAAhE;AACH;;AAED,QAAMuD,iBAAN,GAA0B;AACtB,UAAM;AAAE9E,MAAAA;AAAF,QAAW,KAAKC,KAAtB;;AAEA,QAAI,CAACD,IAAI,CAACA,IAAL,CAAU+E,IAAf,EAAqB;AACjB,WAAK9E,KAAL,CAAWsE,OAAX,CAAmBS,IAAnB,CAAwB,cAAxB;AACA;AACH;;AAED,QAAI,CAAChF,IAAI,CAACG,OAAL,CAAaD,IAAlB,EAAwB;AACpB,WAAKD,KAAL,CAAWsE,OAAX,CAAmBS,IAAnB,CAAwB,iBAAxB;AACA;AACH;;AAED,SAAKnF,UAAL;AACA,SAAK6D,gBAAL,CAAsB,KAAKC,OAA3B;AACH;;AAEDsB,EAAAA,oBAAoB,GAAG;AACnB,SAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlC,OAAL,CAAaH,MAAjC,EAAyCqC,CAAC,EAA1C,EAA8C;AAC1C,UAAI,CAAC,CAAC,KAAKlC,OAAL,CAAakC,CAAb,CAAN,EAAuB;AACnB,aAAKlC,OAAL,CAAakC,CAAb,EAAgBsB,KAAhB;AACA,aAAKxD,OAAL,CAAakC,CAAb,IAAkB,IAAlB;AACH;AACJ;AACJ;;AAuODuB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAErE,MAAAA,GAAF;AAAOI,MAAAA,OAAP;AAAgBc,MAAAA,SAAhB;AAA2B0C,MAAAA,SAA3B;AAAsCtB,MAAAA,aAAtC;AAAqDc,MAAAA,OAArD;AAA8DG,MAAAA;AAA9D,QAAgF,KAAK9B,KAA3F;;AAEA,QAAI8B,aAAJ,EAAmB;AACf,0BACI,oBAAC,oBAAD;AACI,QAAA,UAAU,EAAE/E,EAAE,CAAC8F,aADnB;AAEI,QAAA,OAAO,EAAElE,OAFb;AAGI,QAAA,YAAY,EAAE,KAAKoB,YAHvB;AAII,QAAA,GAAG,EAAExB,GAJT;AAKI,QAAA,OAAO,EAAE,KAAK2B,gBALlB;AAMI,QAAA,SAAS,EAAET,SANf;AAOI,QAAA,SAAS,EAAE0C,SAPf;AAQI,QAAA,aAAa,EAAEtB,aARnB;AASI,QAAA,mBAAmB,EAAE,KAAKkB,mBAT9B;AAUI,QAAA,sBAAsB,EAAE,KAAKG,sBAVjC;AAWI,QAAA,mBAAmB,EAAE,KAAKE,mBAX9B;AAYI,QAAA,YAAY,EAAE,KAAKpC,KAAL,CAAW9B,YAZ7B;AAaI,QAAA,QAAQ,EAAE,KAAK8B,KAAL,CAAWjB,QAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAgBH,KAjBD,MAkBK;AACD,0BAAO,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE4C,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAzTyC;;AAAxCxE,W,CACK2F,S,GAAY;AACfrF,EAAAA,IAAI,EAAEb,SAAS,CAACmG,QAAV,CAAmBnG,SAAS,CAACoG,GAA7B,EAAkCC,UADzB;AAEfC,EAAAA,QAAQ,EAAEtG,SAAS,CAACuG,IAAV,CAAeF;AAFV,C;;AA4TvB,SAASG,eAAT,CAAyBpD,KAAzB,EAAgC;AAC5B,SAAO;AAAEvC,IAAAA,IAAI,EAAEuC,KAAK,CAACvC;AAAd,GAAP;AACH;;AAED,eAAeZ,OAAO,CAACuG,eAAD,CAAP,CAAyBzG,UAAU,CAACQ,WAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport RecognitionPresenter from './RecognitionPresenter';\nimport { withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { TTobak, D2 } from 'images';\nimport { D2_Api, soundURL } from 'api';\nimport LoadingComp from 'Components/LoadingComp';\nclass Recognition extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n        this.state = {\n            gameState: false,\n            Box: [D2.d2_Box1_1, D2.d2_Box2_1],          // Box 이미지\n            TTobaki: TTobak.ttobak3_1,\n            oriAnswer: null,                            // 정답\n            stdAnswer: null,                            // 학생 답\n            answerIndex: 0,\n            isAnimate: [false, false],\n            isImageLoaded: false,\n            showPopup: false,\n            showNextPopup: true,\n            currentIndex: 1,\n            totalNum: 0,\n        };\n\n        this.phs = null;\n        this.answers = null;\n        this.phSound = null;\n        this.answer = null;\n        this.currentIndex = 0;\n        this.currentDiag = null;\n        this.numOfLoadedImage = 0;\n        this.picture = { D2, TTobak };\n        this.totalImages = Object.keys(D2).length + Object.keys(TTobak).length;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        this.newRequest();\n        this.imagesPreloading(this.picture);\n    }\n\n    componentWillUnmount() {\n        for (var i = 0; i < this.phSound.length; i++) {\n            if (!!this.phSound[i]) {\n                this.phSound[i].pause();\n                this.phSound[i] = null;\n            }\n        }\n    }\n\n    newRequest = async () => {\n        console.log('new request');\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n\n        try {\n            const { data } = await D2_Api.ask(s_id);\n            console.log(data);\n\n            if (data.code === 1) {\n                this.answers = data.answers;\n                this.phs = data.phs;\n                this.currentIndex = 0;\n                this.currentDiag = [\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][0]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][1]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][2]),\n                ];\n                this.setState({\n                    gameState: false,\n                    Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n                    stdAnswer: null,\n                    TTobaki: TTobak.ttobak1_1,\n                    answerIndex: (this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1),\n                    totalNum: this.answers.length,\n                });\n                this.setListener();\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    setListener = () => {\n        this.phSound = [\n            new Audio(soundURL + this.currentDiag[0].ques_path1),\n            new Audio(soundURL + this.currentDiag[1].ques_path1),\n            new Audio(soundURL + this.currentDiag[2].ques_path1),\n        ];\n\n        this.phSound[2].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.phSound[0]) {\n                    this.phSound[0].play();\n                    this.setState({\n                        isAnimate: [true, false],\n                        TTobaki: TTobak.ttobak3_2\n                    });\n                }\n            }, 800);\n        })\n\n        this.phSound[0].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak1_1\n            })\n            setTimeout(() => {\n                if (!!this.phSound[1]) {\n                    this.phSound[1].play();\n                    this.setState({\n                        isAnimate: [false, true],\n                        TTobaki: TTobak.ttobak3_2\n                    });\n                }\n            }, 300);\n        })\n        this.phSound[1].addEventListener('ended', () => {\n            this.setState({\n                gameState: true,\n                TTobaki: TTobak.ttobak1_1\n            })\n        });\n    }\n\n    getListFilter = (key, value) => {\n        return this.phs.filter((object) => { return object[key] === value })[0]\n    }\n\n    TTobakiTouch = async () => {\n        if (!!this.state.gameState) {\n            this.playSound();\n            this.setState({\n                gameState: false,\n                isAnimate: [false, false]\n            })\n        }\n    }\n\n    onBoxTouchHandle = async (id) => {\n        const { Box, answerIndex, TTobaki, gameState } = this.state;\n        if (!gameState) return;\n\n        switch (id) {\n            case 0:\n                this.setState({\n                    gameState: false,\n                    Box: [answerIndex === id ? D2.d2_Box1_3 : D2.d2_Box1_2, Box[1]],\n                    TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki],\n                });\n                break;\n            case 1:\n                this.setState({\n                    gameState: false,\n                    Box: [Box[0], answerIndex === id ? D2.d2_Box2_3 : D2.d2_Box2_2],\n                    TTobaki: [answerIndex === id ? TTobak.ttobak2_1 : TTobaki],\n                });\n                break;\n            default:\n                break;\n        }\n\n        this.finished(id);\n    }\n\n    animateBox = (index) => {\n        if (!index)\n            this.setState({\n                isAnimate: [true, false]\n            });\n        else\n            this.setState({\n                isAnimate: [true, true]\n            });\n    }\n\n    playSound = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak3_2,\n        })\n        if (!!this.phSound[2]) this.phSound[2].play();\n    }\n\n    diagDone = () => {\n        console.log('diagnose done!');\n        this.setState({\n            showNextPopup: true,\n        });\n    }\n\n    finished = async (id) => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        })\n        const { user } = this.props;\n        const s_id = user.student.s_id;\n        const [ph, oriAnswer, stdAnswer] = [\n            [this.currentDiag[0].ques_id, this.currentDiag[1].ques_id],\n            this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? this.currentDiag[0].ques_char : this.currentDiag[1].ques_char,\n            this.currentDiag[id].ques_char\n        ];\n\n        try {\n            const { data } = await D2_Api.answer(s_id, oriAnswer, stdAnswer, ph);\n            console.log(data);\n\n            if (data.code === 1) {\n                if (this.currentIndex < this.answers.length - 1) this.currentIndex++;\n                else {\n                    this.diagDone();\n                    return;\n                }\n\n                this.currentDiag = [\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][0]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][1]),\n                    this.getListFilter('ques_id', this.answers[this.currentIndex][2]),\n                ];\n\n                this.setListener();\n                setTimeout(() => {\n                    this.setState({\n                        gameState: false,\n                        Box: [D2.d2_Box1_1, D2.d2_Box2_1],\n                        stdAnswer: null,\n                        TTobaki: TTobak.ttobak3_1,\n                        answerIndex: (this.currentDiag[0].ques_id === this.currentDiag[2].ques_id ? 0 : 1),\n                        currentIndex: this.currentIndex + 1,\n                    });\n                }, 2000);\n\n                setTimeout(() => {\n                    this.playSound();\n                }, 3000);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 1000);\n                    }\n                };\n            }\n        }\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.replace('/diagnose/attention');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { Box, TTobaki, isAnimate, showPopup, showNextPopup, percent, isImageLoaded } = this.state;\n\n        if (isImageLoaded) {\n            return (\n                <RecognitionPresenter\n                    Background={D2.d2_background}\n                    TTobaki={TTobaki}\n                    TTobakiTouch={this.TTobakiTouch}\n                    Box={Box}\n                    Clicked={this.onBoxTouchHandle}\n                    isAnimate={isAnimate}\n                    showPopup={showPopup}\n                    showNextPopup={showNextPopup}\n                    onPopupButtonHandle={this.onPopupButtonHandle}\n                    onContinueButtonHandle={this.onContinueButtonHandle}\n                    onPauseButtonHandle={this.onPauseButtonHandle}\n                    currentIndex={this.state.currentIndex}\n                    totalNum={this.state.totalNum}\n                />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Recognition));"]},"metadata":{},"sourceType":"module"}