{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/UserInfo/UserInfoContainer.js\";\nimport React from 'react';\nimport UserInfoPresenter from './UserInfoPresenter';\nimport Alert from 'Components/Alert';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, user_delete, user_logout } from 'Sessions/action.js';\n\nclass UserInfo extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = (e, text) => {\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n\n      if (text === '회원탈퇴') {\n        this.makeAlert('정말 탈퇴하시겠습니까?', true, () => {\n          dispatch(user_delete(user.user.u_id));\n          this.props.history.push('/root/signin');\n        }, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n      } else if (text === '로그아웃') {\n        this.makeAlert('정말 로그아웃하시겠습니까?', true, () => {\n          dispatch(user_logout(user.user.u_id));\n          this.props.history.push('/root/signin');\n        }, () => {\n          this.enableAlert = false;\n          this.forceUpdate();\n        });\n      }\n    };\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.enableAlert = false;\n  }\n\n  makeAlert(text, isConfirm, onSubmit, onCancel) {\n    this.enableAlert = true;\n    this.alertText = text;\n    this.isConfirm = isConfirm;\n    this.onSubmit = onSubmit;\n    this.onCancel = onCancel;\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n    console.log(user);\n\n    if (!user.user.u_id) {\n      this.makeAlert('잘못된 접근입니다.', false, () => {\n        this.props.history.push('/root/signin');\n      });\n    }\n\n    if (!user.user.email) {\n      dispatch(user_get(user.user.u_id));\n    }\n  }\n\n  render() {\n    console.log(this.props.history);\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n\n    const {\n      user\n    } = this.props;\n    if (!user.user.email) return null;\n    const alertComp = this.enableAlert ? /*#__PURE__*/React.createElement(Alert, {\n      text: this.alertText,\n      isConfirm: this.isConfirm,\n      onSubmit: this.onSubmit,\n      onCancel: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 47\n      }\n    }) : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, alertComp, /*#__PURE__*/React.createElement(UserInfoPresenter, {\n      email: user.user.email,\n      handleSubmit: this.handleSubmit,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nUserInfo.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(UserInfo));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/UserInfo/UserInfoContainer.js"],"names":["React","UserInfoPresenter","Alert","withRouter","PropTypes","connect","user_get","user_delete","user_logout","UserInfo","Component","constructor","handleSubmit","e","text","user","props","dispatch","makeAlert","u_id","history","push","enableAlert","forceUpdate","goBack","isConfirm","onSubmit","onCancel","alertText","componentDidMount","console","log","email","render","alertComp","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UserInfoPresenter from './UserInfoPresenter';\nimport Alert from 'Components/Alert';\nimport { withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, user_delete, user_logout } from 'Sessions/action.js';\n\nclass UserInfo extends React.Component {\n\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n        this.enableAlert = false;\n    }\n\n    handleSubmit = (e, text) => {\n        const {user} = this.props;\n        const {dispatch} = this.props;\n        if(text === '회원탈퇴') {\n            this.makeAlert('정말 탈퇴하시겠습니까?', true, (() => {\n                dispatch(user_delete(user.user.u_id));\n                this.props.history.push('/root/signin');\n            }), (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n        } else if(text === '로그아웃') {\n            this.makeAlert('정말 로그아웃하시겠습니까?', true, (() => {\n                dispatch(user_logout(user.user.u_id));\n                this.props.history.push('/root/signin');\n            }), (() => {\n                this.enableAlert = false;\n                this.forceUpdate();\n            }));\n        }\n    };\n\n    makeAlert(text, isConfirm, onSubmit, onCancel) {\n        this.enableAlert = true;\n        this.alertText = text;\n        this.isConfirm = isConfirm;\n        this.onSubmit = onSubmit;\n        this.onCancel = onCancel;\n\n        this.forceUpdate();\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        const {dispatch} = this.props;\n\n        console.log(user);\n        if(!user.user.u_id) {\n            this.makeAlert('잘못된 접근입니다.', false, (() => {\n                this.props.history.push('/root/signin');\n            }));\n        }\n\n        if(!user.user.email) {\n            dispatch(user_get(user.user.u_id));\n        }\n    }\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    render() {\n        console.log(this.props.history);\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n        const { user } = this.props;\n        if(!user.user.email) return null;\n\n        const alertComp = this.enableAlert ? (<Alert \n            text={this.alertText}\n            isConfirm={this.isConfirm}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n        />) : '';\n        \n        return (\n            <div>\n                {alertComp}\n                <UserInfoPresenter\n                    email={user.user.email}\n                    handleSubmit={this.handleSubmit}\n                    goBack={this.goBack} \n                />\n            </div>);\n    }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(UserInfo));"]},"metadata":{},"sourceType":"module"}