{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/StdManaging/StdManagingContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport StdManagingPresenter from './StdManagingPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { student_modify, student_get, student_delete } from 'Sessions/action.js';\nimport moment from 'moment';\n\nclass StdManaging extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSubmit = (e, op, {\n      name,\n      birth,\n      gender\n    }) => {\n      console.log(name, birth, gender);\n      e.preventDefault();\n      const {\n        user\n      } = this.props;\n      const {\n        dispatch\n      } = this.props;\n      const student = this.props.match.params.student;\n      const icon = this.props.match.params.icon || user.student.ic_id;\n\n      if (!icon) {\n        alert('아이콘을 선택해주세요.');\n        return false;\n      }\n\n      if (!name || !birth || !gender) {\n        alert('빠진 부분 없이 입력해 주세요.');\n        return false;\n      }\n\n      if (birth.length !== 8 || isNaN(birth) || !moment(birth, 'YYYYMMDD', true).isValid()) {\n        alert('올바른 생일을 입력해 주세요.(예시: 20100813)');\n        return false;\n      }\n\n      if (gender !== '남자' && gender !== '여자') {\n        alert('올바른 성별을 입력해 주세요.(예시; 여자)');\n        return false;\n      }\n\n      gender = gender === '남자' ? 'm' : 'f';\n      birth = moment(birth).format('YYYY-MM-DD');\n\n      if (op === 'save') {\n        dispatch(student_modify(name, birth, gender, icon, student, user.user.u_id));\n        alert('저장했습니다.');\n        this.props.history.push('/user/setting');\n      } else if (op === 'delete') {\n        if (window.confirm('정말 삭제하시겠습니까?')) {\n          dispatch(student_delete(student, user.user.u_id));\n          alert('삭제했습니다.');\n          this.props.history.push('/user/setting');\n        }\n      }\n\n      return true;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n    const student = this.props.match.params.student;\n\n    if (!student) {\n      alert('잘못된 접근입니다.');\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.user.u_id) {\n      alert('잘못된 접근입니다.');\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    dispatch(student_get(student, user.user.u_id));\n  }\n\n  render() {\n    console.log(this.props.history);\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n\n    const {\n      user\n    } = this.props;\n    console.log(user);\n    if (!user.student.name) return null;\n    return /*#__PURE__*/React.createElement(StdManagingPresenter, {\n      student: user.student,\n      iconNum: this.props.match.params.icon || undefined,\n      handleSubmit: this.handleSubmit,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nStdManaging.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(StdManaging));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/StdManaging/StdManagingContainer.js"],"names":["React","withRouter","StdManagingPresenter","PropTypes","connect","student_modify","student_get","student_delete","moment","StdManaging","Component","goBack","props","history","handleSubmit","e","op","name","birth","gender","console","log","preventDefault","user","dispatch","student","match","params","icon","ic_id","alert","length","isNaN","isValid","format","u_id","push","window","confirm","componentDidMount","render","undefined","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport StdManagingPresenter from './StdManagingPresenter';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { student_modify, student_get, student_delete } from 'Sessions/action.js';\nimport moment from 'moment';\n\nclass StdManaging extends React.Component {\n\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n\n    componentDidMount() {\n        const { user } = this.props;\n        const { dispatch } = this.props;\n        const student = this.props.match.params.student;\n        if (!student) {\n            alert('잘못된 접근입니다.');\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.user.u_id) {\n            alert('잘못된 접근입니다.');\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        dispatch(student_get(student, user.user.u_id));\n    }\n\n\n    handleSubmit = (e, op, { name, birth, gender }) => {\n        console.log(name, birth, gender);\n        e.preventDefault();\n        const { user } = this.props;\n        const { dispatch } = this.props;\n\n        const student = this.props.match.params.student;\n        const icon = this.props.match.params.icon || user.student.ic_id;\n        if (!icon) {\n            alert('아이콘을 선택해주세요.');\n            return false;\n        }\n\n        if (!name || !birth || !gender) {\n            alert('빠진 부분 없이 입력해 주세요.');\n            return false;\n        }\n\n        if (birth.length !== 8 || isNaN(birth) || !moment(birth, 'YYYYMMDD', true).isValid()) {\n            alert('올바른 생일을 입력해 주세요.(예시: 20100813)');\n            return false;\n        }\n\n        if (gender !== '남자' && gender !== '여자') {\n            alert('올바른 성별을 입력해 주세요.(예시; 여자)');\n            return false;\n        }\n\n        gender = (gender === '남자' ? 'm' : 'f');\n        birth = moment(birth).format('YYYY-MM-DD');\n\n        if (op === 'save') {\n            dispatch(student_modify(name, birth, gender, icon, student, user.user.u_id));\n            alert('저장했습니다.');\n            this.props.history.push('/user/setting');\n        } else if (op === 'delete') {\n            if (window.confirm('정말 삭제하시겠습니까?')) {\n                dispatch(student_delete(student, user.user.u_id));\n                alert('삭제했습니다.');\n                this.props.history.push('/user/setting');\n            }\n        }\n\n        return true;\n    }\n\n    render() {\n        console.log(this.props.history);\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n\n        const { user } = this.props;\n        console.log(user);\n        if (!user.student.name) return null;\n        return (\n            <StdManagingPresenter\n                student={user.student}\n                iconNum={this.props.match.params.icon || undefined}\n                handleSubmit={this.handleSubmit}\n                goBack={this.goBack}\n            />);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(StdManaging));"]},"metadata":{},"sourceType":"module"}