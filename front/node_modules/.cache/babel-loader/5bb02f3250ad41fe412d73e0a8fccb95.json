{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/Diagnose/Result/ResultContainer.js\";\nimport React from 'react';\nimport ResultPresenter from './ResultPresenter';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Result_Api } from 'api';\nconst initState = {\n  result: {\n    '선택적집중력': {\n      '총 문제 수 ': 0,\n      '평균 발음 정확도': 0\n    },\n    '음운청취력': {\n      '맞은 갯수': 0,\n      '총 문제 수': 0\n    },\n    '청각처리속도': {\n      '맞은 갯수': 0,\n      '총 문제 수': 0\n    },\n    '총 맞은 갯수': 0,\n    '총 문제 갯수': 0\n  }\n};\n\nclass Result extends React.Component {\n  constructor() {\n    super();\n    this.result = null;\n    this.state = initState;\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id || !user.student.s_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    Result_Api.ask(user.student.s_id).then(result => {\n      console.log(result.data.results);\n      this.setState({\n        result: result.data.results\n      });\n    });\n  }\n\n  render() {\n    const {\n      result\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ResultPresenter, {\n      result: result,\n      name: this.props.user.student.name,\n      birth: this.props.user.student.birth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nResult.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Result));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/ttobak/front/src/Routes/Diagnose/Result/ResultContainer.js"],"names":["React","ResultPresenter","withRouter","PropTypes","connect","Result_Api","initState","result","Result","Component","constructor","state","componentDidMount","user","props","u_id","student","s_id","history","push","ask","then","console","log","data","results","setState","render","name","birth","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,KAA3B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE;AACJ,cAAU;AACN,iBAAW,CADL;AAEN,mBAAa;AAFP,KADN;AAKJ,aAAS;AACL,eAAS,CADJ;AAEL,gBAAU;AAFL,KALL;AASJ,cAAU;AACN,eAAS,CADH;AAEN,gBAAU;AAFJ,KATN;AAaJ,eAAW,CAbP;AAcJ,eAAW;AAdP;AADM,CAAlB;;AAkBA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAOjCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKH,MAAL,GAAc,IAAd;AAEA,SAAKI,KAAL,GAAaL,SAAb;AACH;;AAED,QAAMM,iBAAN,GAA0B;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;;AAEA,QAAI,CAACD,IAAI,CAACA,IAAL,CAAUE,IAAX,IAAmB,CAACF,IAAI,CAACG,OAAL,CAAaC,IAArC,EAA2C;AACvC,WAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACA;AACH;;AAEDd,IAAAA,UAAU,CAACe,GAAX,CAAeP,IAAI,CAACG,OAAL,CAAaC,IAA5B,EACKI,IADL,CACUd,MAAM,IAAI;AACZe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAACiB,IAAP,CAAYC,OAAxB;AAEA,WAAKC,QAAL,CAAc;AACVnB,QAAAA,MAAM,EAAEA,MAAM,CAACiB,IAAP,CAAYC;AADV,OAAd;AAGH,KAPL;AAQH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpB,MAAAA;AAAF,QAAa,KAAKI,KAAxB;AAEA,wBACI,oBAAC,eAAD;AACI,MAAA,MAAM,EAAEJ,MADZ;AAEI,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWD,IAAX,CAAgBG,OAAhB,CAAwBY,IAFlC;AAGI,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWD,IAAX,CAAgBG,OAAhB,CAAwBa,KAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;;AAzCgC;;AAA/BrB,M,CACKsB,S,GAAY;AACfjB,EAAAA,IAAI,EAAEV,SAAS,CAAC4B,QAAV,CAAmB5B,SAAS,CAAC6B,GAA7B,EAAkCC,UADzB;AAEfC,EAAAA,QAAQ,EAAE/B,SAAS,CAACgC,IAAV,CAAeF;AAFV,C;;AA2CvB,SAASG,eAAT,CAAyBzB,KAAzB,EAAgC;AAC5B,SAAO;AAAEE,IAAAA,IAAI,EAAEF,KAAK,CAACE;AAAd,GAAP;AACH;;AAED,eAAeT,OAAO,CAACgC,eAAD,CAAP,CAAyBlC,UAAU,CAACM,MAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport ResultPresenter from './ResultPresenter';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Result_Api } from 'api';\n\nconst initState = {\n    result: {\n        '선택적집중력': {\n            '총 문제 수 ': 0,\n            '평균 발음 정확도': 0\n        },\n        '음운청취력': {\n            '맞은 갯수': 0,\n            '총 문제 수': 0\n        },\n        '청각처리속도': {\n            '맞은 갯수': 0,\n            '총 문제 수': 0\n        },\n        '총 맞은 갯수': 0,\n        '총 문제 갯수': 0\n    }\n}\nclass Result extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n\n    constructor() {\n        super();\n        this.result = null;\n\n        this.state = initState;\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id || !user.student.s_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        Result_Api.ask(user.student.s_id)\n            .then(result => {\n                console.log(result.data.results);\n\n                this.setState({\n                    result: result.data.results,\n                });\n            });\n    }\n\n    render() {\n        const { result } = this.state;\n\n        return (\n            <ResultPresenter\n                result={result}\n                name={this.props.user.student.name}\n                birth={this.props.user.student.birth}\n            />);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Result));"]},"metadata":{},"sourceType":"module"}