{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/SelectStudent/SelectStudentContainer.js\";\nimport React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { Root_Api } from 'api';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    const {\n      dispatch\n    } = this.props;\n    console.log(user.user);\n\n    if (!user.user.u_id) {\n      alert('잘못된 접근입니다.');\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    dispatch(user_get(user.user.u_id));\n  }\n\n  render() {\n    /*\n    presenter로 가는 모든 스테이트 값 렌더링\n    예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    */\n    const {\n      user\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SelectStudentPresenter, {\n      students: user.user.students || [],\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nSelectStudent.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/User/SelectStudent/SelectStudentContainer.js"],"names":["React","SelectStudentPresenter","Root_Api","withRouter","PropTypes","connect","user_get","student_get","SelectStudent","Component","goBack","props","history","componentDidMount","user","dispatch","console","log","u_id","alert","push","render","students","propTypes","objectOf","any","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,QAAT,QAAyB,KAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAWxCC,MAXwC,GAW/B,MAAM;AACX,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,MAAnB;AACH,KAbuC;AAAA;;AAexCG,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AACA,UAAM;AAACI,MAAAA;AAAD,QAAa,KAAKJ,KAAxB;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAjB;;AAEA,QAAG,CAACA,IAAI,CAACA,IAAL,CAAUI,IAAd,EAAoB;AAChBC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACA,WAAKR,KAAL,CAAWC,OAAX,CAAmBQ,IAAnB,CAAwB,cAAxB;AACA;AACH;;AAEDL,IAAAA,QAAQ,CAACT,QAAQ,CAACQ,IAAI,CAACA,IAAL,CAAUI,IAAX,CAAT,CAAR;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL;AACR;AACA;AACA;AACQ,UAAM;AAAEP,MAAAA;AAAF,QAAW,KAAKH,KAAtB;AAEA,wBAAQ,oBACJ,sBADI;AAEJ,MAAA,QAAQ,EAAEG,IAAI,CAACA,IAAL,CAAUQ,QAAV,IAAsB,EAF5B;AAGJ,MAAA,MAAM,EAAE,KAAKZ,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAKH;;AA1CuC;;AAAtCF,a,CAMKe,S,GAAY;AACfT,EAAAA,IAAI,EAAEV,SAAS,CAACoB,QAAV,CAAmBpB,SAAS,CAACqB,GAA7B,EAAkCC,UADzB;AAEfX,EAAAA,QAAQ,EAAEX,SAAS,CAACuB,IAAV,CAAeD;AAFV,C;;AAuCvB,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEf,IAAAA,IAAI,EAAEe,KAAK,CAACf;AAAd,GAAP;AACD;;AAED,eAAeT,OAAO,CAACuB,eAAD,CAAP,CAAyBzB,UAAU,CAACK,aAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\nimport SelectStudentPresenter from './SelectStudentPresenter';\nimport { Root_Api } from 'api';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user_get, student_get } from 'Sessions/action.js';\n\nclass SelectStudent extends React.Component {\n    /* \n    모든 로직 추가 \n    api 가져오기\n    error 처리 등 모든 것\n     */\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    goBack = () => {\n        this.props.history.goBack();\n    };\n\n    componentDidMount() {\n        const { user } = this.props;\n        const {dispatch} = this.props;\n\n        console.log(user.user);\n\n        if(!user.user.u_id) {\n            alert('잘못된 접근입니다.');\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        dispatch(user_get(user.user.u_id));\n    }\n\n    render() {\n        /*\n        presenter로 가는 모든 스테이트 값 렌더링\n        예시) const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        */\n        const { user } = this.props;\n        \n        return (<\n            SelectStudentPresenter\n            students={user.user.students || []}\n            goBack={this.goBack}\n        />);\n    }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(SelectStudent));"]},"metadata":{},"sourceType":"module"}