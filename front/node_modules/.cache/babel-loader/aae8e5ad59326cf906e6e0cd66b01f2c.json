{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Attention/AttentionContainer.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingComp from 'Components/LoadingComp';\nimport AttentionPresenter from './AttentionPresenter';\nimport { SoundEffect } from 'images';\nimport { D3, TTobak } from 'images';\nimport { D3_Api, soundURL } from 'api';\n\nclass Attention extends React.Component {\n  constructor() {\n    super();\n\n    this.androidResponse = async e => {\n      console.log(e.detail);\n      this.setState({\n        isRecording: false\n      });\n      this.recording_end_sound.play();\n      this.audioResult = e.detail;\n      this.andriodListener();\n    };\n\n    this.newRequest = async () => {\n      const {\n        user\n      } = this.props;\n      const {\n        data\n      } = await D3_Api.ask(user.student.s_id, user.student.s_id);\n      console.log(data);\n\n      switch (data.code) {\n        case 1:\n          this.cure = data.focus;\n          this.currentIndex = 0;\n          this.currentCure = this.cure[this.currentIndex];\n          this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n          this.setState({\n            totalNum: this.cure.length\n          });\n          break;\n\n        case 'tutorial':\n          this.tutorial(data);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.tutorial = data => {\n      this.sample_ques = new Audio(soundURL + data.sample_ques.ques_path1);\n      this.voice = [];\n\n      for (let i = 0; i < data.voice.length; i++) {\n        this.voice.push(new Audio(soundURL + data.voice[i].voc_path));\n      }\n\n      this.voice[0].addEventListener('ended', () => {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2\n        });\n        setTimeout(() => {\n          this.sample_ques.play();\n        }, 1000);\n      });\n      this.sample_ques.addEventListener('ended', () => {\n        setTimeout(() => {\n          this.voice[1].play();\n        }, 1000);\n      });\n    };\n\n    this.andriodListener = async () => {\n      this.setState({\n        TTobaki: TTobak.ttobak2_1\n      });\n\n      try {\n        if (this.audioResult.status === 'Success') {\n          const {\n            s_id\n          } = this.state;\n          console.log(s_id, this.currentCure.ques_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score);\n          const {\n            data\n          } = await D3_Api.answer(s_id, this.currentCure.ques_id, this.audioResult.score, this.audioResult.phone_score, this.audioResult.speed_score, this.audioResult.rhythm_score);\n          console.log(data);\n\n          if (data.code === 1) {\n            if (data.is_stop) {\n              this.gameDone();\n            } else if (data.to_next_level) {\n              this.newRequest();\n              setTimeout(() => {\n                this.playSound();\n              }, 3000);\n            } else {\n              if (this.currentIndex < this.cure.length - 1) {\n                this.currentIndex++;\n              } else {\n                this.gameDone();\n                return;\n              }\n\n              this.currentCure = this.cure[this.currentIndex];\n              this.currentAudio = null;\n              this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n              setTimeout(() => {\n                this.setState({\n                  TTobaki: TTobak.ttobak1_1,\n                  currentIndex: this.currentIndex + 1\n                });\n              }, 3000);\n              setTimeout(() => {\n                this.playSound();\n              }, 5500);\n            }\n          } else console.log(data.message);\n        } else {\n          console.log(this.audioResult.message);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.playSound = () => {\n      if (!!this.currentAudio) {\n        this.setState({\n          TTobaki: TTobak.ttobak3_2\n        });\n        this.currentAudio.play();\n        this.currentAudio.addEventListener('ended', () => {\n          this.setState({\n            TTobaki: TTobak.ttobak1_1\n          });\n          setTimeout(() => {\n            console.log('이제 따라 읽어볼까요?');\n            this.recording_start_sound.play();\n            this.setState({\n              isRecording: true\n            });\n            window.BRIDGE.recordAudio('m', this.currentCure.ques_char);\n          }, 1000);\n        });\n      }\n    };\n\n    this.imagesPreloading = picture => {\n      for (let i in picture) {\n        for (let prop in picture[i]) {\n          let img = new Image();\n          img.src = picture[i][prop];\n\n          img.onload = () => {\n            this.setState({\n              percent: ++this.numOfLoadedImage / this.totalImages * 100\n            });\n\n            if (this.numOfLoadedImage === this.totalImages) {\n              this.setState({\n                isImageLoaded: true\n              });\n              setTimeout(() => this.playSound(), 2000);\n            }\n          };\n        }\n      }\n    };\n\n    this.gameDone = () => {\n      console.log('game doen!');\n      this.setState({\n        showNextPopup: true\n      });\n    };\n\n    this.onPopupButtonHandle = () => {\n      this.props.history.replace('/diagnose/result');\n    };\n\n    this.onContinueButtonHandle = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.onPauseButtonHandle = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.recording_start_sound = new Audio(SoundEffect.recording_start);\n    this.recording_end_sound = new Audio(SoundEffect.recording_end);\n    this.numOfLoadedImage = 0;\n    this.picture = {\n      D3,\n      TTobak\n    };\n    this.totalImages = Object.keys(D3).length + Object.keys(TTobak).length;\n    this.cure = null;\n    this.currentCure = null;\n    this.currentIndex = 0;\n    this.currentAudio = null;\n    this.audioResult = null;\n    this.state = {\n      gameState: false,\n      s_id: 4,\n      isImageLoaded: false,\n      percent: 0,\n      showPopup: false,\n      showNextPopup: false,\n      isRecording: false,\n      TTobak: TTobak.ttobak1_1,\n      currentIndex: 1,\n      totalNum: 0\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (!user.user.u_id) {\n      this.props.history.push('/root/signin');\n      return;\n    }\n\n    if (!user.student.s_id) {\n      this.props.history.push('/root/selectstd');\n      return;\n    }\n\n    this.newRequest();\n    this.imagesPreloading(this.picture);\n    window.addEventListener(\"android\", this.androidResponse);\n  }\n\n  componentWillUnmount() {\n    if (!!this.currentAudio) {\n      this.currentAudio.pause();\n      this.currentAudio = null;\n    }\n\n    window.removeEventListener(\"android\", this.androidResponse);\n  }\n\n  render() {\n    const {\n      isImageLoaded,\n      showPopup,\n      showNextPopup,\n      percent,\n      TTobak,\n      isRecording\n    } = this.state;\n\n    if (isImageLoaded) {\n      return /*#__PURE__*/React.createElement(AttentionPresenter, {\n        Background: D3.d3_background,\n        TTobak: TTobak,\n        isRecording: isRecording,\n        showPopup: showPopup,\n        showNextPopup: showNextPopup,\n        onPopupButtonHandle: this.onPopupButtonHandle,\n        onContinueButtonHandle: this.onContinueButtonHandle,\n        onPauseButtonHandle: this.onPauseButtonHandle,\n        currentIndex: this.state.currentIndex,\n        totalNum: this.state.totalNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(LoadingComp, {\n        percent: percent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}\n\nAttention.propTypes = {\n  user: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(withRouter(Attention));","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Diagnose/Attention/AttentionContainer.js"],"names":["React","withRouter","PropTypes","connect","LoadingComp","AttentionPresenter","SoundEffect","D3","TTobak","D3_Api","soundURL","Attention","Component","constructor","androidResponse","e","console","log","detail","setState","isRecording","recording_end_sound","play","audioResult","andriodListener","newRequest","user","props","data","ask","student","s_id","code","cure","focus","currentIndex","currentCure","currentAudio","Audio","ques_path1","totalNum","length","tutorial","sample_ques","voice","i","push","voc_path","addEventListener","TTobaki","ttobak3_2","setTimeout","ttobak2_1","status","state","ques_id","score","phone_score","speed_score","rhythm_score","answer","is_stop","gameDone","to_next_level","playSound","ttobak1_1","message","recording_start_sound","window","BRIDGE","recordAudio","ques_char","imagesPreloading","picture","prop","img","Image","src","onload","percent","numOfLoadedImage","totalImages","isImageLoaded","showNextPopup","onPopupButtonHandle","history","replace","onContinueButtonHandle","showPopup","onPauseButtonHandle","recording_start","recording_end","Object","keys","gameState","componentDidMount","u_id","componentWillUnmount","pause","removeEventListener","render","d3_background","propTypes","objectOf","any","isRequired","dispatch","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport LoadingComp from 'Components/LoadingComp';\nimport AttentionPresenter from './AttentionPresenter';\nimport { SoundEffect } from 'images';\n\nimport { D3, TTobak } from 'images';\nimport { D3_Api, soundURL } from 'api';\n\nclass Attention extends React.Component {\n    static propTypes = {\n        user: PropTypes.objectOf(PropTypes.any).isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n        super();\n        this.recording_start_sound = new Audio(SoundEffect.recording_start);\n        this.recording_end_sound = new Audio(SoundEffect.recording_end);\n        this.numOfLoadedImage = 0;\n        this.picture = { D3, TTobak };\n        this.totalImages = Object.keys(D3).length + Object.keys(TTobak).length;\n        this.cure = null;\n        this.currentCure = null;\n        this.currentIndex = 0;\n        this.currentAudio = null;\n        this.audioResult = null;\n\n        this.state = {\n            gameState: false,\n            s_id: 4,\n            isImageLoaded: false,\n            percent: 0,\n            showPopup: false,\n            showNextPopup: false,\n            isRecording: false,\n            TTobak: TTobak.ttobak1_1,\n            currentIndex: 1,\n            totalNum: 0,\n        };\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n\n        if (!user.user.u_id) {\n            this.props.history.push('/root/signin');\n            return;\n        }\n\n        if (!user.student.s_id) {\n            this.props.history.push('/root/selectstd');\n            return;\n        }\n\n        this.newRequest();\n        this.imagesPreloading(this.picture);\n\n        window.addEventListener(\"android\", this.androidResponse);\n    }\n\n    componentWillUnmount() {\n        if (!!this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio = null;\n        }\n        window.removeEventListener(\"android\", this.androidResponse)\n    }\n\n    androidResponse = async (e) => {\n        console.log(e.detail);\n        this.setState({\n            isRecording: false,\n        })\n        this.recording_end_sound.play();\n        this.audioResult = e.detail;\n        this.andriodListener();\n    }\n\n    newRequest = async () => {\n        const { user } = this.props;\n\n        const { data } = await D3_Api.ask(user.student.s_id, user.student.s_id);\n        console.log(data);\n\n        switch (data.code) {\n            case 1:\n                this.cure = data.focus;\n                this.currentIndex = 0;\n                this.currentCure = this.cure[this.currentIndex];\n                this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n                this.setState({\n                    totalNum: this.cure.length,\n                })\n                break;\n            case 'tutorial':\n                this.tutorial(data);\n                break;\n            default:\n                break;\n        }\n    }\n\n    tutorial = (data) => {\n        this.sample_ques = new Audio(soundURL + data.sample_ques.ques_path1);\n        this.voice = [];\n        for (let i = 0; i < data.voice.length; i++) {\n            this.voice.push(new Audio(soundURL + data.voice[i].voc_path));\n        }\n\n        this.voice[0].addEventListener('ended', () => {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n            });\n            setTimeout(() => {\n                this.sample_ques.play();\n            }, 1000);\n        });\n\n        this.sample_ques.addEventListener('ended', () => {\n            setTimeout(() => {\n                this.voice[1].play();\n            }, 1000);\n        })\n    }\n\n    andriodListener = async () => {\n        this.setState({\n            TTobaki: TTobak.ttobak2_1,\n        });\n\n        try {\n            if (this.audioResult.status === 'Success') {\n                const { s_id } = this.state;\n                console.log(\n                    s_id,\n                    this.currentCure.ques_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score)\n                const { data } = await D3_Api.answer(\n                    s_id,\n                    this.currentCure.ques_id,\n                    this.audioResult.score,\n                    this.audioResult.phone_score,\n                    this.audioResult.speed_score,\n                    this.audioResult.rhythm_score,\n                );\n                console.log(data);\n\n                if (data.code === 1) {\n                    if (data.is_stop) {\n                        this.gameDone();\n                    } else if (data.to_next_level) {\n                        this.newRequest();\n                        setTimeout(() => {\n                            this.playSound();\n                        }, 3000);\n                    } else {\n                        if (this.currentIndex < this.cure.length - 1) {\n                            this.currentIndex++;\n                        } else {\n                            this.gameDone();\n                            return;\n                        }\n                        this.currentCure = this.cure[this.currentIndex];\n                        this.currentAudio = null;\n                        this.currentAudio = new Audio(soundURL + this.currentCure.ques_path1);\n\n                        setTimeout(() => {\n                            this.setState({\n                                TTobaki: TTobak.ttobak1_1,\n                                currentIndex: this.currentIndex + 1,\n                            });\n                        }, 3000);\n\n                        setTimeout(() => {\n                            this.playSound();\n                        }, 5500);\n                    }\n                }\n                else console.log(data.message);\n\n            } else {\n                console.log(this.audioResult.message);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    playSound = () => {\n        if (!!this.currentAudio) {\n            this.setState({\n                TTobaki: TTobak.ttobak3_2,\n            });\n            this.currentAudio.play();\n            this.currentAudio.addEventListener('ended', () => {\n                this.setState({\n                    TTobaki: TTobak.ttobak1_1,\n                });\n                setTimeout(() => {\n                    console.log('이제 따라 읽어볼까요?');\n                    this.recording_start_sound.play();\n                    this.setState({\n                        isRecording: true,\n                    });\n                    window.BRIDGE.recordAudio('m', this.currentCure.ques_char);\n                }, 1000);\n            });\n        }\n    }\n\n    imagesPreloading = (picture) => {\n        for (let i in picture) {\n            for (let prop in picture[i]) {\n                let img = new Image();\n                img.src = picture[i][prop];\n                img.onload = () => {\n                    this.setState({\n                        percent: (++this.numOfLoadedImage / this.totalImages) * 100\n                    });\n\n                    if (this.numOfLoadedImage === this.totalImages) {\n                        this.setState({\n                            isImageLoaded: true,\n                        })\n                        setTimeout(() => this.playSound(), 2000);\n                    }\n                };\n            }\n        }\n    }\n\n    gameDone = () => {\n        console.log('game doen!');\n        this.setState({\n            showNextPopup: true,\n        });\n    }\n\n    onPopupButtonHandle = () => {\n        this.props.history.replace('/diagnose/result');\n    }\n\n    onContinueButtonHandle = () => {\n        this.setState({\n            showPopup: false,\n        })\n    }\n\n    onPauseButtonHandle = () => {\n        this.setState({\n            showPopup: true,\n        })\n    }\n\n    render() {\n        const { isImageLoaded, showPopup, showNextPopup, percent, TTobak, isRecording } = this.state;\n\n        if (isImageLoaded) {\n            return (<AttentionPresenter\n                Background={D3.d3_background}\n                TTobak={TTobak}\n                isRecording={isRecording}\n                showPopup={showPopup}\n                showNextPopup={showNextPopup}\n                onPopupButtonHandle={this.onPopupButtonHandle}\n                onContinueButtonHandle={this.onContinueButtonHandle}\n                onPauseButtonHandle={this.onPauseButtonHandle}\n                currentIndex={this.state.currentIndex}\n                totalNum={this.state.totalNum}\n            />);\n        }\n        else {\n            return <LoadingComp percent={percent} />\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { user: state.user }\n}\n\nexport default connect(mapStateToProps)(withRouter(Attention));"]},"metadata":{},"sourceType":"module"}