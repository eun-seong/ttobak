{"ast":null,"code":"var _jsxFileName = \"/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Main/Main/ButtonBox.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nconst Box = styled(Link)`\n    align-items: center;\n    width: ${props => props.width || '100%'};\n    height: ${props => props.height || '100%'};\n    background-color: ${props => props.color || 'grey'};\n    border-radius: 15px;\n    touch-action: ${props => !!props.touchNone ? none : null};\n`;\nconst Header = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    height: 40px;\n    text-align: center;\n    font-size: 1.3rem;\n    background-color: ${props => props.color || 'red'};\n    border-radius: 15px 15px 0px 0px;\n`;\nconst Content = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    height: calc(100% - 40px);\n    font-size: 0.8rem;\n    text-align: ${props => props.isDaily ? 'start' : 'center'};\n`;\nconst FirstDiag = styled(Link)`\n    align-items: center;\n    width: ${props => props.width || '100%'};\n    height: ${props => props.height || '100%'};\n    background-color: ${props => props.color || 'grey'};\n    border-radius: 15px;\n    touch-action: none;\n`;\n\nconst ButtonBox = ({\n  text,\n  Contents,\n  color,\n  headercolor,\n  width,\n  height,\n  linkto,\n  isImageLoaded,\n  data,\n  isFirstDiagnose,\n  touchNone\n}) => {\n  let to_data = null;\n  let isDaily = false;\n\n  if (!!data) {\n    to_data = {\n      pathname: linkto + '/daily',\n      state: {\n        data: data\n      }\n    };\n    isDaily = true;\n  } else {\n    to_data = {\n      pathname: linkto,\n      state: {\n        isImageLoaded: isImageLoaded\n      }\n    };\n  }\n\n  if (isFirstDiagnose) {\n    return /*#__PURE__*/React.createElement(FirstDiag, {\n      to: to_data,\n      color: color,\n      width: width,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      color: headercolor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, text), /*#__PURE__*/React.createElement(Content, {\n      isDaily: isDaily,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"\\uCCAB \\uBC88\\uC9F8 \\uAC80\\uC0AC\\uB97C \\uC9C4\\uD589\\uD574\\uC8FC\\uC138\\uC694.\")));\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    to: to_data,\n    color: color,\n    width: width,\n    height: height,\n    touchNone: touchNone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    color: headercolor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, text), /*#__PURE__*/React.createElement(Content, {\n    isDaily: isDaily,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, Contents));\n};\n\nexport default ButtonBox;","map":{"version":3,"sources":["/Users/eun/Projects/FirstPenguin/first-penguin/front/src/Routes/Main/Main/ButtonBox.js"],"names":["React","Link","styled","Box","props","width","height","color","touchNone","none","Header","div","Content","isDaily","FirstDiag","ButtonBox","text","Contents","headercolor","linkto","isImageLoaded","data","isFirstDiagnose","to_data","pathname","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,GAAG,GAAGD,MAAM,CAACD,IAAD,CAAO;AACzB;AACA,aAAaG,KAAK,IAAIA,KAAK,CAACC,KAAN,IAAe,MAAO;AAC5C,cAAcD,KAAK,IAAIA,KAAK,CAACE,MAAN,IAAgB,MAAO;AAC9C,wBAAwBF,KAAK,IAAIA,KAAK,CAACG,KAAN,IAAe,MAAO;AACvD;AACA,oBAAoBH,KAAK,IAAI,CAAC,CAACA,KAAK,CAACI,SAAR,GAAoBC,IAApB,GAA2B,IAAK;AAC7D,CAPA;AASA,MAAMC,MAAM,GAAGR,MAAM,CAACS,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBP,KAAK,IAAIA,KAAK,CAACG,KAAN,IAAe,KAAM;AACtD;AACA,CAVA;AAYA,MAAMK,OAAO,GAAGV,MAAM,CAACS,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBP,KAAK,IAAIA,KAAK,CAACS,OAAN,GAAgB,OAAhB,GAA0B,QAAS;AAC9D,CATA;AAWA,MAAMC,SAAS,GAAGZ,MAAM,CAACD,IAAD,CAAO;AAC/B;AACA,aAAaG,KAAK,IAAIA,KAAK,CAACC,KAAN,IAAe,MAAO;AAC5C,cAAcD,KAAK,IAAIA,KAAK,CAACE,MAAN,IAAgB,MAAO;AAC9C,wBAAwBF,KAAK,IAAIA,KAAK,CAACG,KAAN,IAAe,MAAO;AACvD;AACA;AACA,CAPA;;AASA,MAAMQ,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBV,EAAAA,KAAlB;AAAyBW,EAAAA,WAAzB;AAAsCb,EAAAA,KAAtC;AAA6CC,EAAAA,MAA7C;AAAqDa,EAAAA,MAArD;AAA6DC,EAAAA,aAA7D;AAA4EC,EAAAA,IAA5E;AAAkFC,EAAAA,eAAlF;AAAmGd,EAAAA;AAAnG,CAAD,KAAoH;AAClI,MAAIe,OAAO,GAAG,IAAd;AACA,MAAIV,OAAO,GAAG,KAAd;;AACA,MAAI,CAAC,CAACQ,IAAN,EAAY;AACRE,IAAAA,OAAO,GAAG;AACNC,MAAAA,QAAQ,EAAEL,MAAM,GAAG,QADb;AAENM,MAAAA,KAAK,EAAE;AACHJ,QAAAA,IAAI,EAAEA;AADH;AAFD,KAAV;AAMAR,IAAAA,OAAO,GAAG,IAAV;AACH,GARD,MAQO;AACHU,IAAAA,OAAO,GAAG;AACNC,MAAAA,QAAQ,EAAEL,MADJ;AAENM,MAAAA,KAAK,EAAE;AACHL,QAAAA,aAAa,EAAEA;AADZ;AAFD,KAAV;AAMH;;AAED,MAAIE,eAAJ,EAAqB;AACjB,wBACI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAEC,OAAf;AAAwB,MAAA,KAAK,EAAEhB,KAA/B;AAAsC,MAAA,KAAK,EAAEF,KAA7C;AAAoD,MAAA,MAAM,EAAEC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEY,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BF,IAA7B,CADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEH,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFADJ,CAFJ,CADJ;AAQH;;AAED,sBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAEU,OAAT;AAAkB,IAAA,KAAK,EAAEhB,KAAzB;AAAgC,IAAA,KAAK,EAAEF,KAAvC;AAA8C,IAAA,MAAM,EAAEC,MAAtD;AAA8D,IAAA,SAAS,EAAEE,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEU,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,IAA7B,CADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEH,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,QADL,CAFJ,CADJ;AAQH,CAvCD;;AAyCA,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Box = styled(Link)`\n    align-items: center;\n    width: ${props => props.width || '100%'};\n    height: ${props => props.height || '100%'};\n    background-color: ${props => props.color || 'grey'};\n    border-radius: 15px;\n    touch-action: ${props => !!props.touchNone ? none : null};\n`;\n\nconst Header = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    height: 40px;\n    text-align: center;\n    font-size: 1.3rem;\n    background-color: ${props => props.color || 'red'};\n    border-radius: 15px 15px 0px 0px;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    height: calc(100% - 40px);\n    font-size: 0.8rem;\n    text-align: ${props => props.isDaily ? 'start' : 'center'};\n`;\n\nconst FirstDiag = styled(Link)`\n    align-items: center;\n    width: ${props => props.width || '100%'};\n    height: ${props => props.height || '100%'};\n    background-color: ${props => props.color || 'grey'};\n    border-radius: 15px;\n    touch-action: none;\n`;\n\nconst ButtonBox = ({ text, Contents, color, headercolor, width, height, linkto, isImageLoaded, data, isFirstDiagnose, touchNone }) => {\n    let to_data = null;\n    let isDaily = false;\n    if (!!data) {\n        to_data = {\n            pathname: linkto + '/daily',\n            state: {\n                data: data,\n            }\n        };\n        isDaily = true;\n    } else {\n        to_data = {\n            pathname: linkto,\n            state: {\n                isImageLoaded: isImageLoaded\n            }\n        }\n    }\n\n    if (isFirstDiagnose) {\n        return (\n            <FirstDiag to={to_data} color={color} width={width} height={height}>\n                <Header color={headercolor}>{text}</Header>\n                <Content isDaily={isDaily}>\n                    <div>첫 번째 검사를 진행해주세요.</div>\n                </Content>\n            </FirstDiag>\n        );\n    }\n\n    return (\n        <Box to={to_data} color={color} width={width} height={height} touchNone={touchNone}>\n            <Header color={headercolor}>{text}</Header>\n            <Content isDaily={isDaily}>\n                {Contents}\n            </Content>\n        </Box>\n    );\n}\n\nexport default ButtonBox;"]},"metadata":{},"sourceType":"module"}